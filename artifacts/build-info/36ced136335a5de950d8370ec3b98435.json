{
	"id": "36ced136335a5de950d8370ec3b98435",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"upgrade/Erc20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ~0.8.0;\r\n\r\n/**\r\n 作业 1：ERC20 代币\r\n任务：参考 openzeppelin-contracts/contracts/token/ERC20/IERC20.sol实现一个简单的 ERC20 代币合约。要求： \r\n1.合约包含以下标准 ERC20 功能：\r\n2.balanceOf：查询账户余额。\r\n3.transfer：转账。\r\n4.approve 和 transferFrom：授权和代扣转账。\r\n5.使用 event 记录转账和授权操作。\r\n6.提供 mint 函数，允许合约所有者增发代币。\r\n提示：\r\n 使用 mapping 存储账户余额和授权信息。\r\n使用 event 定义 Transfer 和 Approval 事件。\r\n部署到sepolia 测试网，导入到自己的钱包\r\n*/\r\ncontract Erc20 {\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"upgrade/Erc20.sol": {
				"Erc20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"upgrade/Erc20.sol\":662:687  contract Erc20 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"upgrade/Erc20.sol\":662:687  contract Erc20 {... */\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212203d9651f7ab1b5b94eb089619cee014b2d5d50f19218ea6b81c855afafc6abd8864736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50603e80601a5f395ff3fe60806040525f5ffdfea26469706673582212203d9651f7ab1b5b94eb089619cee014b2d5d50f19218ea6b81c855afafc6abd8864736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SWAP7 MLOAD 0xF7 0xAB SHL JUMPDEST SWAP5 0xEB ADDMOD SWAP7 NOT 0xCE RJUMP 0x14B2 0xD5 0xD5 0xF NOT 0x21 DUP15 0xA6 0xB8 SHR DUP6 GAS STATICCALL 0xFC PUSH11 0xBD8864736F6C634300081E STOP CALLER ",
							"sourceMap": "662:25:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f5ffdfea26469706673582212203d9651f7ab1b5b94eb089619cee014b2d5d50f19218ea6b81c855afafc6abd8864736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SWAP7 MLOAD 0xF7 0xAB SHL JUMPDEST SWAP5 0xEB ADDMOD SWAP7 NOT 0xCE RJUMP 0x14B2 0xD5 0xD5 0xF NOT 0x21 DUP15 0xA6 0xB8 SHR DUP6 GAS STATICCALL 0xFC PUSH11 0xBD8864736F6C634300081E STOP CALLER ",
							"sourceMap": "662:25:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 662,
									"end": 687,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 662,
									"end": 687,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 662,
									"end": 687,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 662,
									"end": 687,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 662,
									"end": 687,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 662,
									"end": 687,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 662,
									"end": 687,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 662,
									"end": 687,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 662,
									"end": 687,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 687,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 687,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 662,
									"end": 687,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 662,
									"end": 687,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 662,
									"end": 687,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 662,
									"end": 687,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 662,
									"end": 687,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 662,
									"end": 687,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 662,
									"end": 687,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 687,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 662,
									"end": 687,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 687,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203d9651f7ab1b5b94eb089619cee014b2d5d50f19218ea6b81c855afafc6abd8864736f6c634300081e0033",
									".code": [
										{
											"begin": 662,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 662,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 662,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 662,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 662,
											"end": 687,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"upgrade/Erc20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"\\u4f5c\\u4e1a 1\\uff1aERC20 \\u4ee3\\u5e01 \\u4efb\\u52a1\\uff1a\\u53c2\\u8003 openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\\u5b9e\\u73b0\\u4e00\\u4e2a\\u7b80\\u5355\\u7684 ERC20 \\u4ee3\\u5e01\\u5408\\u7ea6\\u3002\\u8981\\u6c42\\uff1a  1.\\u5408\\u7ea6\\u5305\\u542b\\u4ee5\\u4e0b\\u6807\\u51c6 ERC20 \\u529f\\u80fd\\uff1a 2.balanceOf\\uff1a\\u67e5\\u8be2\\u8d26\\u6237\\u4f59\\u989d\\u3002 3.transfer\\uff1a\\u8f6c\\u8d26\\u3002 4.approve \\u548c transferFrom\\uff1a\\u6388\\u6743\\u548c\\u4ee3\\u6263\\u8f6c\\u8d26\\u3002 5.\\u4f7f\\u7528 event \\u8bb0\\u5f55\\u8f6c\\u8d26\\u548c\\u6388\\u6743\\u64cd\\u4f5c\\u3002 6.\\u63d0\\u4f9b mint \\u51fd\\u6570\\uff0c\\u5141\\u8bb8\\u5408\\u7ea6\\u6240\\u6709\\u8005\\u589e\\u53d1\\u4ee3\\u5e01\\u3002 \\u63d0\\u793a\\uff1a \\u4f7f\\u7528 mapping \\u5b58\\u50a8\\u8d26\\u6237\\u4f59\\u989d\\u548c\\u6388\\u6743\\u4fe1\\u606f\\u3002 \\u4f7f\\u7528 event \\u5b9a\\u4e49 Transfer \\u548c Approval \\u4e8b\\u4ef6\\u3002 \\u90e8\\u7f72\\u5230sepolia \\u6d4b\\u8bd5\\u7f51\\uff0c\\u5bfc\\u5165\\u5230\\u81ea\\u5df1\\u7684\\u94b1\\u5305\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"upgrade/Erc20.sol\":\"Erc20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"upgrade/Erc20.sol\":{\"keccak256\":\"0xc9322eb5565bea609b6eb61f228bfb824a4ed0e1f61eca1f5c54caa35bb1100a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c36e8d0c7a002b7427d0ea0aaea823b86843720da31f68cbb897a2eda3b8ed1\",\"dweb:/ipfs/Qmb4ZZbBUj7HFX7qA6nbdGC3CqRDWCkiK5uxf43oeXHVGg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "作业 1：ERC20 代币 任务：参考 openzeppelin-contracts/contracts/token/ERC20/IERC20.sol实现一个简单的 ERC20 代币合约。要求：  1.合约包含以下标准 ERC20 功能： 2.balanceOf：查询账户余额。 3.transfer：转账。 4.approve 和 transferFrom：授权和代扣转账。 5.使用 event 记录转账和授权操作。 6.提供 mint 函数，允许合约所有者增发代币。 提示： 使用 mapping 存储账户余额和授权信息。 使用 event 定义 Transfer 和 Approval 事件。 部署到sepolia 测试网，导入到自己的钱包",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"upgrade/Erc20.sol": {
				"ast": {
					"absolutePath": "upgrade/Erc20.sol",
					"exportedSymbols": {
						"Erc20": [
							3
						]
					},
					"id": 4,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"~",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Erc20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "60:600:0",
								"text": "作业 1：ERC20 代币\n任务：参考 openzeppelin-contracts/contracts/token/ERC20/IERC20.sol实现一个简单的 ERC20 代币合约。要求： \n1.合约包含以下标准 ERC20 功能：\n2.balanceOf：查询账户余额。\n3.transfer：转账。\n4.approve 和 transferFrom：授权和代扣转账。\n5.使用 event 记录转账和授权操作。\n6.提供 mint 函数，允许合约所有者增发代币。\n提示：\n使用 mapping 存储账户余额和授权信息。\n使用 event 定义 Transfer 和 Approval 事件。\n部署到sepolia 测试网，导入到自己的钱包"
							},
							"fullyImplemented": true,
							"id": 3,
							"linearizedBaseContracts": [
								3
							],
							"name": "Erc20",
							"nameLocation": "671:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 4,
							"src": "662:25:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:654:0"
				},
				"id": 0
			}
		}
	}
}