{
	"id": "aaeb2102f2f5fd9154c69eb65229d6ff",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"basic/Voting.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n/**\r\n 1.创建一个名为Voting的合约，包含以下功能：\r\n一个mapping来存储候选人的得票数\r\n一个vote函数，允许用户投票给某个候选人\r\n一个getVotes函数，返回某个候选人的得票数\r\n一个resetVotes函数，重置所有候选人的得票数\r\n**/\r\ncontract Voting is Ownable{\r\n    event VoteReset(string indexed name, uint256 oldCount);\r\n    mapping(string name => uint256 counts) private _voteCounts;\r\n    \r\n    constructor() Ownable(msg.sender) {}\r\n\r\n    function vote(string memory name) external  {\r\n        _voteCounts[name] += 1;    \r\n    }\r\n\r\n    function getVotes(string memory name) external view returns (uint256) {\r\n        return _voteCounts[name];\r\n    }\r\n    receive() external payable { }\r\n    //  function resetVotes() public {\r\n    //     delete _voteCounts;\r\n    // }\r\n    \r\n     function resetVotes(string memory name) public onlyOwner{\r\n        require(bytes(name).length>0, \"Name must input\");\r\n        uint256 oldCount = _voteCounts[name];\r\n        delete _voteCounts[name];\r\n        emit VoteReset(name, oldCount);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"basic/Voting.sol": {
				"Voting": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldCount",
									"type": "uint256"
								}
							],
							"name": "VoteReset",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "getVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "resetVotes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"basic/Voting.sol\":407:1206  contract Voting is Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"basic/Voting.sol\":572:608  constructor() Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"basic/Voting.sol\":594:604  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"basic/Voting.sol\":407:1206  contract Voting is Ownable{... */\n  jump(tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_13:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_14:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_19\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_13\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_15:\n    /* \"#utility.yul\":328:352   */\n  tag_21\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_14\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_7:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_23\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"basic/Voting.sol\":407:1206  contract Voting is Ownable{... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"basic/Voting.sol\":407:1206  contract Voting is Ownable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x805265e5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf3fa4226\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfc36e15b\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      revert(0x00, 0x00)\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"basic/Voting.sol\":713:826  function getVotes(string memory name) external view returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_14:\n      pop\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      revert(0x00, 0x00)\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      revert(0x00, 0x00)\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"basic/Voting.sol\":957:1203  function resetVotes(string memory name) public onlyOwner{... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      revert(0x00, 0x00)\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      stop\n        /* \"basic/Voting.sol\":616:705  function vote(string memory name) external  {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      revert(0x00, 0x00)\n    tag_35:\n      pop\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_43\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"basic/Voting.sol\":713:826  function getVotes(string memory name) external view returns (uint256) {... */\n    tag_18:\n        /* \"basic/Voting.sol\":774:781  uint256 */\n      0x00\n        /* \"basic/Voting.sol\":801:812  _voteCounts */\n      0x01\n        /* \"basic/Voting.sol\":813:817  name */\n      dup3\n        /* \"basic/Voting.sol\":801:818  _voteCounts[name] */\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"basic/Voting.sol\":794:818  return _voteCounts[name] */\n      swap1\n      pop\n        /* \"basic/Voting.sol\":713:826  function getVotes(string memory name) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_52\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"basic/Voting.sol\":957:1203  function resetVotes(string memory name) public onlyOwner{... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_56:\n        /* \"basic/Voting.sol\":1051:1052  0 */\n      0x00\n        /* \"basic/Voting.sol\":1038:1042  name */\n      dup2\n        /* \"basic/Voting.sol\":1032:1050  bytes(name).length */\n      mload\n        /* \"basic/Voting.sol\":1032:1052  bytes(name).length>0 */\n      gt\n        /* \"basic/Voting.sol\":1024:1072  require(bytes(name).length>0, \"Name must input\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"basic/Voting.sol\":1083:1099  uint256 oldCount */\n      0x00\n        /* \"basic/Voting.sol\":1102:1113  _voteCounts */\n      0x01\n        /* \"basic/Voting.sol\":1114:1118  name */\n      dup3\n        /* \"basic/Voting.sol\":1102:1119  _voteCounts[name] */\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_61:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"basic/Voting.sol\":1083:1119  uint256 oldCount = _voteCounts[name] */\n      swap1\n      pop\n        /* \"basic/Voting.sol\":1137:1148  _voteCounts */\n      0x01\n        /* \"basic/Voting.sol\":1149:1153  name */\n      dup3\n        /* \"basic/Voting.sol\":1137:1154  _voteCounts[name] */\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_62:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"basic/Voting.sol\":1130:1154  delete _voteCounts[name] */\n      0x00\n      swap1\n      sstore\n        /* \"basic/Voting.sol\":1180:1184  name */\n      dup2\n        /* \"basic/Voting.sol\":1170:1195  VoteReset(name, oldCount) */\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x2d6afb89a283acc39c9f4ad71725bf5d3b3a3c46032838e2ad76961f426b7371\n        /* \"basic/Voting.sol\":1186:1194  oldCount */\n      dup3\n        /* \"basic/Voting.sol\":1170:1195  VoteReset(name, oldCount) */\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"basic/Voting.sol\":1013:1203  {... */\n      pop\n        /* \"basic/Voting.sol\":957:1203  function resetVotes(string memory name) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"basic/Voting.sol\":616:705  function vote(string memory name) external  {... */\n    tag_38:\n        /* \"basic/Voting.sol\":692:693  1 */\n      0x01\n        /* \"basic/Voting.sol\":671:682  _voteCounts */\n      dup1\n        /* \"basic/Voting.sol\":683:687  name */\n      dup3\n        /* \"basic/Voting.sol\":671:688  _voteCounts[name] */\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_66:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n        /* \"basic/Voting.sol\":671:693  _voteCounts[name] += 1 */\n      dup3\n      dup3\n      sload\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"basic/Voting.sol\":616:705  function vote(string memory name) external  {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_23\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_73\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_78:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_79:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_80:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_81:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      0x00\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_82:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      0x00\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:682   */\n    tag_83:\n        /* \"#utility.yul\":621:627   */\n      0x00\n        /* \"#utility.yul\":672:674   */\n      0x1f\n        /* \"#utility.yul\":668:675   */\n      not\n        /* \"#utility.yul\":663:665   */\n      0x1f\n        /* \"#utility.yul\":656:661   */\n      dup4\n        /* \"#utility.yul\":652:666   */\n      add\n        /* \"#utility.yul\":648:676   */\n      and\n        /* \"#utility.yul\":638:676   */\n      swap1\n      pop\n        /* \"#utility.yul\":580:682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":688:868   */\n    tag_84:\n        /* \"#utility.yul\":736:813   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":733:734   */\n      0x00\n        /* \"#utility.yul\":726:814   */\n      mstore\n        /* \"#utility.yul\":833:837   */\n      0x41\n        /* \"#utility.yul\":830:831   */\n      0x04\n        /* \"#utility.yul\":823:838   */\n      mstore\n        /* \"#utility.yul\":857:861   */\n      0x24\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":847:862   */\n      revert\n        /* \"#utility.yul\":874:1155   */\n    tag_85:\n        /* \"#utility.yul\":957:984   */\n      tag_115\n        /* \"#utility.yul\":979:983   */\n      dup3\n        /* \"#utility.yul\":957:984   */\n      tag_83\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":949:955   */\n      dup2\n        /* \"#utility.yul\":945:985   */\n      add\n        /* \"#utility.yul\":1087:1093   */\n      dup2\n        /* \"#utility.yul\":1075:1085   */\n      dup2\n        /* \"#utility.yul\":1072:1094   */\n      lt\n        /* \"#utility.yul\":1051:1069   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1039:1049   */\n      dup3\n        /* \"#utility.yul\":1036:1070   */\n      gt\n        /* \"#utility.yul\":1033:1095   */\n      or\n        /* \"#utility.yul\":1030:1118   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":1098:1116   */\n      tag_117\n      tag_84\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1030:1118   */\n    tag_116:\n        /* \"#utility.yul\":1138:1148   */\n      dup1\n        /* \"#utility.yul\":1134:1136   */\n      0x40\n        /* \"#utility.yul\":1127:1149   */\n      mstore\n        /* \"#utility.yul\":917:1155   */\n      pop\n        /* \"#utility.yul\":874:1155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1161:1290   */\n    tag_86:\n        /* \"#utility.yul\":1195:1201   */\n      0x00\n        /* \"#utility.yul\":1222:1242   */\n      tag_119\n      tag_78\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1212:1242   */\n      swap1\n      pop\n        /* \"#utility.yul\":1251:1284   */\n      tag_120\n        /* \"#utility.yul\":1279:1283   */\n      dup3\n        /* \"#utility.yul\":1271:1277   */\n      dup3\n        /* \"#utility.yul\":1251:1284   */\n      tag_85\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1161:1290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1296:1604   */\n    tag_87:\n        /* \"#utility.yul\":1358:1362   */\n      0x00\n        /* \"#utility.yul\":1448:1466   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1440:1446   */\n      dup3\n        /* \"#utility.yul\":1437:1467   */\n      gt\n        /* \"#utility.yul\":1434:1490   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":1470:1488   */\n      tag_123\n      tag_84\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":1434:1490   */\n    tag_122:\n        /* \"#utility.yul\":1508:1537   */\n      tag_124\n        /* \"#utility.yul\":1530:1536   */\n      dup3\n        /* \"#utility.yul\":1508:1537   */\n      tag_83\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1500:1537   */\n      swap1\n      pop\n        /* \"#utility.yul\":1592:1596   */\n      0x20\n        /* \"#utility.yul\":1586:1590   */\n      dup2\n        /* \"#utility.yul\":1582:1597   */\n      add\n        /* \"#utility.yul\":1574:1597   */\n      swap1\n      pop\n        /* \"#utility.yul\":1296:1604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1758   */\n    tag_88:\n        /* \"#utility.yul\":1708:1714   */\n      dup3\n        /* \"#utility.yul\":1703:1706   */\n      dup2\n        /* \"#utility.yul\":1698:1701   */\n      dup4\n        /* \"#utility.yul\":1685:1715   */\n      calldatacopy\n        /* \"#utility.yul\":1749:1750   */\n      0x00\n        /* \"#utility.yul\":1740:1746   */\n      dup4\n        /* \"#utility.yul\":1735:1738   */\n      dup4\n        /* \"#utility.yul\":1731:1747   */\n      add\n        /* \"#utility.yul\":1724:1751   */\n      mstore\n        /* \"#utility.yul\":1610:1758   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1764:2189   */\n    tag_89:\n        /* \"#utility.yul\":1842:1847   */\n      0x00\n        /* \"#utility.yul\":1867:1933   */\n      tag_127\n        /* \"#utility.yul\":1883:1932   */\n      tag_128\n        /* \"#utility.yul\":1925:1931   */\n      dup5\n        /* \"#utility.yul\":1883:1932   */\n      tag_87\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1867:1933   */\n      tag_86\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":1858:1933   */\n      swap1\n      pop\n        /* \"#utility.yul\":1956:1962   */\n      dup3\n        /* \"#utility.yul\":1949:1954   */\n      dup2\n        /* \"#utility.yul\":1942:1963   */\n      mstore\n        /* \"#utility.yul\":1994:1998   */\n      0x20\n        /* \"#utility.yul\":1987:1992   */\n      dup2\n        /* \"#utility.yul\":1983:1999   */\n      add\n        /* \"#utility.yul\":2032:2035   */\n      dup5\n        /* \"#utility.yul\":2023:2029   */\n      dup5\n        /* \"#utility.yul\":2018:2021   */\n      dup5\n        /* \"#utility.yul\":2014:2030   */\n      add\n        /* \"#utility.yul\":2011:2036   */\n      gt\n        /* \"#utility.yul\":2008:2120   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":2039:2118   */\n      tag_130\n      tag_82\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2008:2120   */\n    tag_129:\n        /* \"#utility.yul\":2129:2183   */\n      tag_131\n        /* \"#utility.yul\":2176:2182   */\n      dup5\n        /* \"#utility.yul\":2171:2174   */\n      dup3\n        /* \"#utility.yul\":2166:2169   */\n      dup6\n        /* \"#utility.yul\":2129:2183   */\n      tag_88\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1848:2189   */\n      pop\n        /* \"#utility.yul\":1764:2189   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2549   */\n    tag_90:\n        /* \"#utility.yul\":2265:2270   */\n      0x00\n        /* \"#utility.yul\":2314:2317   */\n      dup3\n        /* \"#utility.yul\":2307:2311   */\n      0x1f\n        /* \"#utility.yul\":2299:2305   */\n      dup4\n        /* \"#utility.yul\":2295:2312   */\n      add\n        /* \"#utility.yul\":2291:2318   */\n      slt\n        /* \"#utility.yul\":2281:2403   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":2322:2401   */\n      tag_134\n      tag_81\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2281:2403   */\n    tag_133:\n        /* \"#utility.yul\":2439:2445   */\n      dup2\n        /* \"#utility.yul\":2426:2446   */\n      calldataload\n        /* \"#utility.yul\":2464:2543   */\n      tag_135\n        /* \"#utility.yul\":2539:2542   */\n      dup5\n        /* \"#utility.yul\":2531:2537   */\n      dup3\n        /* \"#utility.yul\":2524:2528   */\n      0x20\n        /* \"#utility.yul\":2516:2522   */\n      dup7\n        /* \"#utility.yul\":2512:2529   */\n      add\n        /* \"#utility.yul\":2464:2543   */\n      tag_89\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":2455:2543   */\n      swap2\n      pop\n        /* \"#utility.yul\":2271:2549   */\n      pop\n        /* \"#utility.yul\":2209:2549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2555:3064   */\n    tag_17:\n        /* \"#utility.yul\":2624:2630   */\n      0x00\n        /* \"#utility.yul\":2673:2675   */\n      0x20\n        /* \"#utility.yul\":2661:2670   */\n      dup3\n        /* \"#utility.yul\":2652:2659   */\n      dup5\n        /* \"#utility.yul\":2648:2671   */\n      sub\n        /* \"#utility.yul\":2644:2676   */\n      slt\n        /* \"#utility.yul\":2641:2760   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":2679:2758   */\n      tag_138\n      tag_79\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":2641:2760   */\n    tag_137:\n        /* \"#utility.yul\":2827:2828   */\n      0x00\n        /* \"#utility.yul\":2816:2825   */\n      dup3\n        /* \"#utility.yul\":2812:2829   */\n      add\n        /* \"#utility.yul\":2799:2830   */\n      calldataload\n        /* \"#utility.yul\":2857:2875   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2849:2855   */\n      dup2\n        /* \"#utility.yul\":2846:2876   */\n      gt\n        /* \"#utility.yul\":2843:2960   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":2879:2958   */\n      tag_140\n      tag_80\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":2843:2960   */\n    tag_139:\n        /* \"#utility.yul\":2984:3047   */\n      tag_141\n        /* \"#utility.yul\":3039:3046   */\n      dup5\n        /* \"#utility.yul\":3030:3036   */\n      dup3\n        /* \"#utility.yul\":3019:3028   */\n      dup6\n        /* \"#utility.yul\":3015:3037   */\n      add\n        /* \"#utility.yul\":2984:3047   */\n      tag_90\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":2974:3047   */\n      swap2\n      pop\n        /* \"#utility.yul\":2770:3057   */\n      pop\n        /* \"#utility.yul\":2555:3064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3070:3147   */\n    tag_91:\n        /* \"#utility.yul\":3107:3114   */\n      0x00\n        /* \"#utility.yul\":3136:3141   */\n      dup2\n        /* \"#utility.yul\":3125:3141   */\n      swap1\n      pop\n        /* \"#utility.yul\":3070:3147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3153:3271   */\n    tag_92:\n        /* \"#utility.yul\":3240:3264   */\n      tag_144\n        /* \"#utility.yul\":3258:3263   */\n      dup2\n        /* \"#utility.yul\":3240:3264   */\n      tag_91\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3235:3238   */\n      dup3\n        /* \"#utility.yul\":3228:3265   */\n      mstore\n        /* \"#utility.yul\":3153:3271   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3277:3499   */\n    tag_20:\n        /* \"#utility.yul\":3370:3374   */\n      0x00\n        /* \"#utility.yul\":3408:3410   */\n      0x20\n        /* \"#utility.yul\":3397:3406   */\n      dup3\n        /* \"#utility.yul\":3393:3411   */\n      add\n        /* \"#utility.yul\":3385:3411   */\n      swap1\n      pop\n        /* \"#utility.yul\":3421:3492   */\n      tag_146\n        /* \"#utility.yul\":3489:3490   */\n      0x00\n        /* \"#utility.yul\":3478:3487   */\n      dup4\n        /* \"#utility.yul\":3474:3491   */\n      add\n        /* \"#utility.yul\":3465:3471   */\n      dup5\n        /* \"#utility.yul\":3421:3492   */\n      tag_92\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3277:3499   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3505:3631   */\n    tag_93:\n        /* \"#utility.yul\":3542:3549   */\n      0x00\n        /* \"#utility.yul\":3582:3624   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3575:3580   */\n      dup3\n        /* \"#utility.yul\":3571:3625   */\n      and\n        /* \"#utility.yul\":3560:3625   */\n      swap1\n      pop\n        /* \"#utility.yul\":3505:3631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3637:3733   */\n    tag_94:\n        /* \"#utility.yul\":3674:3681   */\n      0x00\n        /* \"#utility.yul\":3703:3727   */\n      tag_149\n        /* \"#utility.yul\":3721:3726   */\n      dup3\n        /* \"#utility.yul\":3703:3727   */\n      tag_93\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":3692:3727   */\n      swap1\n      pop\n        /* \"#utility.yul\":3637:3733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3739:3857   */\n    tag_95:\n        /* \"#utility.yul\":3826:3850   */\n      tag_151\n        /* \"#utility.yul\":3844:3849   */\n      dup2\n        /* \"#utility.yul\":3826:3850   */\n      tag_94\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":3821:3824   */\n      dup3\n        /* \"#utility.yul\":3814:3851   */\n      mstore\n        /* \"#utility.yul\":3739:3857   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3863:4085   */\n    tag_25:\n        /* \"#utility.yul\":3956:3960   */\n      0x00\n        /* \"#utility.yul\":3994:3996   */\n      0x20\n        /* \"#utility.yul\":3983:3992   */\n      dup3\n        /* \"#utility.yul\":3979:3997   */\n      add\n        /* \"#utility.yul\":3971:3997   */\n      swap1\n      pop\n        /* \"#utility.yul\":4007:4078   */\n      tag_153\n        /* \"#utility.yul\":4075:4076   */\n      0x00\n        /* \"#utility.yul\":4064:4073   */\n      dup4\n        /* \"#utility.yul\":4060:4077   */\n      add\n        /* \"#utility.yul\":4051:4057   */\n      dup5\n        /* \"#utility.yul\":4007:4078   */\n      tag_95\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":3863:4085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4091:4213   */\n    tag_96:\n        /* \"#utility.yul\":4164:4188   */\n      tag_155\n        /* \"#utility.yul\":4182:4187   */\n      dup2\n        /* \"#utility.yul\":4164:4188   */\n      tag_94\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":4157:4162   */\n      dup2\n        /* \"#utility.yul\":4154:4189   */\n      eq\n        /* \"#utility.yul\":4144:4207   */\n      tag_156\n      jumpi\n        /* \"#utility.yul\":4203:4204   */\n      0x00\n        /* \"#utility.yul\":4200:4201   */\n      0x00\n        /* \"#utility.yul\":4193:4205   */\n      revert\n        /* \"#utility.yul\":4144:4207   */\n    tag_156:\n        /* \"#utility.yul\":4091:4213   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4219:4358   */\n    tag_97:\n        /* \"#utility.yul\":4265:4270   */\n      0x00\n        /* \"#utility.yul\":4303:4309   */\n      dup2\n        /* \"#utility.yul\":4290:4310   */\n      calldataload\n        /* \"#utility.yul\":4281:4310   */\n      swap1\n      pop\n        /* \"#utility.yul\":4319:4352   */\n      tag_158\n        /* \"#utility.yul\":4346:4351   */\n      dup2\n        /* \"#utility.yul\":4319:4352   */\n      tag_96\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":4219:4358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4364:4693   */\n    tag_29:\n        /* \"#utility.yul\":4423:4429   */\n      0x00\n        /* \"#utility.yul\":4472:4474   */\n      0x20\n        /* \"#utility.yul\":4460:4469   */\n      dup3\n        /* \"#utility.yul\":4451:4458   */\n      dup5\n        /* \"#utility.yul\":4447:4470   */\n      sub\n        /* \"#utility.yul\":4443:4475   */\n      slt\n        /* \"#utility.yul\":4440:4559   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":4478:4557   */\n      tag_161\n      tag_79\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":4440:4559   */\n    tag_160:\n        /* \"#utility.yul\":4598:4599   */\n      0x00\n        /* \"#utility.yul\":4623:4676   */\n      tag_162\n        /* \"#utility.yul\":4668:4675   */\n      dup5\n        /* \"#utility.yul\":4659:4665   */\n      dup3\n        /* \"#utility.yul\":4648:4657   */\n      dup6\n        /* \"#utility.yul\":4644:4666   */\n      add\n        /* \"#utility.yul\":4623:4676   */\n      tag_97\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4613:4676   */\n      swap2\n      pop\n        /* \"#utility.yul\":4569:4686   */\n      pop\n        /* \"#utility.yul\":4364:4693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4699:4798   */\n    tag_98:\n        /* \"#utility.yul\":4751:4757   */\n      0x00\n        /* \"#utility.yul\":4785:4790   */\n      dup2\n        /* \"#utility.yul\":4779:4791   */\n      mload\n        /* \"#utility.yul\":4769:4791   */\n      swap1\n      pop\n        /* \"#utility.yul\":4699:4798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4804:4952   */\n    tag_99:\n        /* \"#utility.yul\":4906:4917   */\n      0x00\n        /* \"#utility.yul\":4943:4946   */\n      dup2\n        /* \"#utility.yul\":4928:4946   */\n      swap1\n      pop\n        /* \"#utility.yul\":4804:4952   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4958:5097   */\n    tag_100:\n        /* \"#utility.yul\":5047:5053   */\n      dup3\n        /* \"#utility.yul\":5042:5045   */\n      dup2\n        /* \"#utility.yul\":5037:5040   */\n      dup4\n        /* \"#utility.yul\":5031:5054   */\n      mcopy\n        /* \"#utility.yul\":5088:5089   */\n      0x00\n        /* \"#utility.yul\":5079:5085   */\n      dup4\n        /* \"#utility.yul\":5074:5077   */\n      dup4\n        /* \"#utility.yul\":5070:5086   */\n      add\n        /* \"#utility.yul\":5063:5090   */\n      mstore\n        /* \"#utility.yul\":4958:5097   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5103:5493   */\n    tag_101:\n        /* \"#utility.yul\":5209:5212   */\n      0x00\n        /* \"#utility.yul\":5237:5276   */\n      tag_167\n        /* \"#utility.yul\":5270:5275   */\n      dup3\n        /* \"#utility.yul\":5237:5276   */\n      tag_98\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":5292:5381   */\n      tag_168\n        /* \"#utility.yul\":5374:5380   */\n      dup2\n        /* \"#utility.yul\":5369:5372   */\n      dup6\n        /* \"#utility.yul\":5292:5381   */\n      tag_99\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":5285:5381   */\n      swap4\n      pop\n        /* \"#utility.yul\":5390:5455   */\n      tag_169\n        /* \"#utility.yul\":5448:5454   */\n      dup2\n        /* \"#utility.yul\":5443:5446   */\n      dup6\n        /* \"#utility.yul\":5436:5440   */\n      0x20\n        /* \"#utility.yul\":5429:5434   */\n      dup7\n        /* \"#utility.yul\":5425:5441   */\n      add\n        /* \"#utility.yul\":5390:5455   */\n      tag_100\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":5480:5486   */\n      dup1\n        /* \"#utility.yul\":5475:5478   */\n      dup5\n        /* \"#utility.yul\":5471:5487   */\n      add\n        /* \"#utility.yul\":5464:5487   */\n      swap2\n      pop\n        /* \"#utility.yul\":5213:5493   */\n      pop\n        /* \"#utility.yul\":5103:5493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5499:5774   */\n    tag_47:\n        /* \"#utility.yul\":5631:5634   */\n      0x00\n        /* \"#utility.yul\":5653:5748   */\n      tag_171\n        /* \"#utility.yul\":5744:5747   */\n      dup3\n        /* \"#utility.yul\":5735:5741   */\n      dup5\n        /* \"#utility.yul\":5653:5748   */\n      tag_101\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":5646:5748   */\n      swap2\n      pop\n        /* \"#utility.yul\":5765:5768   */\n      dup2\n        /* \"#utility.yul\":5758:5768   */\n      swap1\n      pop\n        /* \"#utility.yul\":5499:5774   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5780:5949   */\n    tag_102:\n        /* \"#utility.yul\":5864:5875   */\n      0x00\n        /* \"#utility.yul\":5898:5904   */\n      dup3\n        /* \"#utility.yul\":5893:5896   */\n      dup3\n        /* \"#utility.yul\":5886:5905   */\n      mstore\n        /* \"#utility.yul\":5938:5942   */\n      0x20\n        /* \"#utility.yul\":5933:5936   */\n      dup3\n        /* \"#utility.yul\":5929:5943   */\n      add\n        /* \"#utility.yul\":5914:5943   */\n      swap1\n      pop\n        /* \"#utility.yul\":5780:5949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5955:6120   */\n    tag_103:\n        /* \"#utility.yul\":6095:6112   */\n      0x4e616d65206d75737420696e7075740000000000000000000000000000000000\n        /* \"#utility.yul\":6091:6092   */\n      0x00\n        /* \"#utility.yul\":6083:6089   */\n      dup3\n        /* \"#utility.yul\":6079:6093   */\n      add\n        /* \"#utility.yul\":6072:6113   */\n      mstore\n        /* \"#utility.yul\":5955:6120   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6126:6492   */\n    tag_104:\n        /* \"#utility.yul\":6268:6271   */\n      0x00\n        /* \"#utility.yul\":6289:6356   */\n      tag_175\n        /* \"#utility.yul\":6353:6355   */\n      0x0f\n        /* \"#utility.yul\":6348:6351   */\n      dup4\n        /* \"#utility.yul\":6289:6356   */\n      tag_102\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":6282:6356   */\n      swap2\n      pop\n        /* \"#utility.yul\":6365:6458   */\n      tag_176\n        /* \"#utility.yul\":6454:6457   */\n      dup3\n        /* \"#utility.yul\":6365:6458   */\n      tag_103\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":6483:6485   */\n      0x20\n        /* \"#utility.yul\":6478:6481   */\n      dup3\n        /* \"#utility.yul\":6474:6486   */\n      add\n        /* \"#utility.yul\":6467:6486   */\n      swap1\n      pop\n        /* \"#utility.yul\":6126:6492   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6498:6917   */\n    tag_60:\n        /* \"#utility.yul\":6664:6668   */\n      0x00\n        /* \"#utility.yul\":6702:6704   */\n      0x20\n        /* \"#utility.yul\":6691:6700   */\n      dup3\n        /* \"#utility.yul\":6687:6705   */\n      add\n        /* \"#utility.yul\":6679:6705   */\n      swap1\n      pop\n        /* \"#utility.yul\":6751:6760   */\n      dup2\n        /* \"#utility.yul\":6745:6749   */\n      dup2\n        /* \"#utility.yul\":6741:6761   */\n      sub\n        /* \"#utility.yul\":6737:6738   */\n      0x00\n        /* \"#utility.yul\":6726:6735   */\n      dup4\n        /* \"#utility.yul\":6722:6739   */\n      add\n        /* \"#utility.yul\":6715:6762   */\n      mstore\n        /* \"#utility.yul\":6779:6910   */\n      tag_178\n        /* \"#utility.yul\":6905:6909   */\n      dup2\n        /* \"#utility.yul\":6779:6910   */\n      tag_104\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":6771:6910   */\n      swap1\n      pop\n        /* \"#utility.yul\":6498:6917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6923:7103   */\n    tag_105:\n        /* \"#utility.yul\":6971:7048   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6968:6969   */\n      0x00\n        /* \"#utility.yul\":6961:7049   */\n      mstore\n        /* \"#utility.yul\":7068:7072   */\n      0x11\n        /* \"#utility.yul\":7065:7066   */\n      0x04\n        /* \"#utility.yul\":7058:7073   */\n      mstore\n        /* \"#utility.yul\":7092:7096   */\n      0x24\n        /* \"#utility.yul\":7089:7090   */\n      0x00\n        /* \"#utility.yul\":7082:7097   */\n      revert\n        /* \"#utility.yul\":7109:7300   */\n    tag_68:\n        /* \"#utility.yul\":7149:7152   */\n      0x00\n        /* \"#utility.yul\":7168:7188   */\n      tag_181\n        /* \"#utility.yul\":7186:7187   */\n      dup3\n        /* \"#utility.yul\":7168:7188   */\n      tag_91\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":7163:7188   */\n      swap2\n      pop\n        /* \"#utility.yul\":7202:7222   */\n      tag_182\n        /* \"#utility.yul\":7220:7221   */\n      dup4\n        /* \"#utility.yul\":7202:7222   */\n      tag_91\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":7197:7222   */\n      swap3\n      pop\n        /* \"#utility.yul\":7245:7246   */\n      dup3\n        /* \"#utility.yul\":7242:7243   */\n      dup3\n        /* \"#utility.yul\":7238:7247   */\n      add\n        /* \"#utility.yul\":7231:7247   */\n      swap1\n      pop\n        /* \"#utility.yul\":7266:7269   */\n      dup1\n        /* \"#utility.yul\":7263:7264   */\n      dup3\n        /* \"#utility.yul\":7260:7270   */\n      gt\n        /* \"#utility.yul\":7257:7293   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":7273:7291   */\n      tag_184\n      tag_105\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":7257:7293   */\n    tag_183:\n        /* \"#utility.yul\":7109:7300   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c9431d44a8f8de0f3ebdb574483427d96f7631f94312c5703ef3c82c23bca30064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_201": {
									"entryPoint": null,
									"id": 201,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 150,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:3",
										"nodeType": "YulBlock",
										"src": "0:590:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100789190610196565b60405180910390fd5b6100908161009660201b60201c565b506101af565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018082610157565b9050919050565b61019081610176565b82525050565b5f6020820190506101a95f830184610187565b92915050565b610889806101bc5f395ff3fe608060405260043610610058575f3560e01c8063715018a614610063578063805265e5146100795780638da5cb5b146100b5578063f2fde38b146100df578063f3fa422614610107578063fc36e15b1461012f5761005f565b3661005f57005b5f5ffd5b34801561006e575f5ffd5b50610077610157565b005b348015610084575f5ffd5b5061009f600480360381019061009a91906105ee565b61016a565b6040516100ac919061064d565b60405180910390f35b3480156100c0575f5ffd5b506100c9610191565b6040516100d691906106a5565b60405180910390f35b3480156100ea575f5ffd5b50610105600480360381019061010091906106e8565b6101b8565b005b348015610112575f5ffd5b5061012d600480360381019061012891906105ee565b61023c565b005b34801561013a575f5ffd5b50610155600480360381019061015091906105ee565b61031b565b005b61015f610352565b6101685f6103d9565b565b5f60018260405161017b9190610765565b9081526020016040518091039020549050919050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101c0610352565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610230575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161022791906106a5565b60405180910390fd5b610239816103d9565b50565b610244610352565b5f815111610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027e906107d5565b60405180910390fd5b5f6001826040516102989190610765565b90815260200160405180910390205490506001826040516102b99190610765565b90815260200160405180910390205f9055816040516102d89190610765565b60405180910390207f2d6afb89a283acc39c9f4ad71725bf5d3b3a3c46032838e2ad76961f426b73718260405161030f919061064d565b60405180910390a25050565b6001808260405161032c9190610765565b90815260200160405180910390205f8282546103489190610820565b9250508190555050565b61035a61049a565b73ffffffffffffffffffffffffffffffffffffffff16610378610191565b73ffffffffffffffffffffffffffffffffffffffff16146103d75761039b61049a565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016103ce91906106a5565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610500826104ba565b810181811067ffffffffffffffff8211171561051f5761051e6104ca565b5b80604052505050565b5f6105316104a1565b905061053d82826104f7565b919050565b5f67ffffffffffffffff82111561055c5761055b6104ca565b5b610565826104ba565b9050602081019050919050565b828183375f83830152505050565b5f61059261058d84610542565b610528565b9050828152602081018484840111156105ae576105ad6104b6565b5b6105b9848285610572565b509392505050565b5f82601f8301126105d5576105d46104b2565b5b81356105e5848260208601610580565b91505092915050565b5f60208284031215610603576106026104aa565b5b5f82013567ffffffffffffffff8111156106205761061f6104ae565b5b61062c848285016105c1565b91505092915050565b5f819050919050565b61064781610635565b82525050565b5f6020820190506106605f83018461063e565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61068f82610666565b9050919050565b61069f81610685565b82525050565b5f6020820190506106b85f830184610696565b92915050565b6106c781610685565b81146106d1575f5ffd5b50565b5f813590506106e2816106be565b92915050565b5f602082840312156106fd576106fc6104aa565b5b5f61070a848285016106d4565b91505092915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f61073f82610713565b610749818561071d565b9350610759818560208601610727565b80840191505092915050565b5f6107708284610735565b915081905092915050565b5f82825260208201905092915050565b7f4e616d65206d75737420696e70757400000000000000000000000000000000005f82015250565b5f6107bf600f8361077b565b91506107ca8261078b565b602082019050919050565b5f6020820190508181035f8301526107ec816107b3565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61082a82610635565b915061083583610635565b925082820190508082111561084d5761084c6107f3565b5b9291505056fea2646970667358221220c9431d44a8f8de0f3ebdb574483427d96f7631f94312c5703ef3c82c23bca30064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x96 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1AF JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180 DUP3 PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x190 DUP2 PUSH2 0x176 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x187 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x889 DUP1 PUSH2 0x1BC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x805265E5 EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0xF3FA4226 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0xFC36E15B EQ PUSH2 0x12F JUMPI PUSH2 0x5F JUMP JUMPDEST CALLDATASIZE PUSH2 0x5F JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x77 PUSH2 0x157 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xC9 PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x1B8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x112 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15F PUSH2 0x352 JUMP JUMPDEST PUSH2 0x168 PUSH0 PUSH2 0x3D9 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x765 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x352 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x230 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x239 DUP2 PUSH2 0x3D9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x244 PUSH2 0x352 JUMP JUMPDEST PUSH0 DUP2 MLOAD GT PUSH2 0x287 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27E SWAP1 PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x765 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP1 POP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x765 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SSTORE DUP2 PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x765 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0x2D6AFB89A283ACC39C9F4AD71725BF5D3B3A3C46032838E2AD76961F426B7371 DUP3 PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x765 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x35A PUSH2 0x49A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x378 PUSH2 0x191 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3D7 JUMPI PUSH2 0x39B PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x500 DUP3 PUSH2 0x4BA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x51F JUMPI PUSH2 0x51E PUSH2 0x4CA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x531 PUSH2 0x4A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x53D DUP3 DUP3 PUSH2 0x4F7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x55C JUMPI PUSH2 0x55B PUSH2 0x4CA JUMP JUMPDEST JUMPDEST PUSH2 0x565 DUP3 PUSH2 0x4BA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x592 PUSH2 0x58D DUP5 PUSH2 0x542 JUMP JUMPDEST PUSH2 0x528 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5AE JUMPI PUSH2 0x5AD PUSH2 0x4B6 JUMP JUMPDEST JUMPDEST PUSH2 0x5B9 DUP5 DUP3 DUP6 PUSH2 0x572 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5D5 JUMPI PUSH2 0x5D4 PUSH2 0x4B2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5E5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x580 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x603 JUMPI PUSH2 0x602 PUSH2 0x4AA JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x620 JUMPI PUSH2 0x61F PUSH2 0x4AE JUMP JUMPDEST JUMPDEST PUSH2 0x62C DUP5 DUP3 DUP6 ADD PUSH2 0x5C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x647 DUP2 PUSH2 0x635 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x660 PUSH0 DUP4 ADD DUP5 PUSH2 0x63E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x68F DUP3 PUSH2 0x666 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x69F DUP2 PUSH2 0x685 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6B8 PUSH0 DUP4 ADD DUP5 PUSH2 0x696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6C7 DUP2 PUSH2 0x685 JUMP JUMPDEST DUP2 EQ PUSH2 0x6D1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6E2 DUP2 PUSH2 0x6BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6FD JUMPI PUSH2 0x6FC PUSH2 0x4AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x70A DUP5 DUP3 DUP6 ADD PUSH2 0x6D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x73F DUP3 PUSH2 0x713 JUMP JUMPDEST PUSH2 0x749 DUP2 DUP6 PUSH2 0x71D JUMP JUMPDEST SWAP4 POP PUSH2 0x759 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x727 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x770 DUP3 DUP5 PUSH2 0x735 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E616D65206D75737420696E7075740000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7BF PUSH1 0xF DUP4 PUSH2 0x77B JUMP JUMPDEST SWAP2 POP PUSH2 0x7CA DUP3 PUSH2 0x78B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7EC DUP2 PUSH2 0x7B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x82A DUP3 PUSH2 0x635 JUMP JUMPDEST SWAP2 POP PUSH2 0x835 DUP4 PUSH2 0x635 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x84D JUMPI PUSH2 0x84C PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 NUMBER SAR PREVRANDAO 0xA8 EXTCALL 0xDE 0xF RETURNDATACOPY 0xBD 0xB5 PUSH21 0x483427D96F7631F94312C5703EF3C82C23BCA30064 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "407:799:2:-:0;;;572:36;;;;;;;;;;594:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;407:799:2;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;407:799:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_229": {
									"entryPoint": null,
									"id": 229,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 850,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 1178,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 985,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getVotes_225": {
									"entryPoint": 362,
									"id": 225,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 401,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 343,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@resetVotes_264": {
									"entryPoint": 572,
									"id": 264,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 440,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@vote_213": {
									"entryPoint": 795,
									"id": 213,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 1408,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 1473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 1518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f7f1ebd3a5710177ce09cf8ae86dba1b16661028bbf7b29523ad3c3175d0583d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f7f1ebd3a5710177ce09cf8ae86dba1b16661028bbf7b29523ad3c3175d0583d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1185,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 1394,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1831,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1226,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1202,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1206,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1198,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1194,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_f7f1ebd3a5710177ce09cf8ae86dba1b16661028bbf7b29523ad3c3175d0583d": {
									"entryPoint": 1931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7303:3",
										"nodeType": "YulBlock",
										"src": "0:7303:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "423:28:3",
													"nodeType": "YulBlock",
													"src": "423:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:3",
																		"nodeType": "YulLiteral",
																		"src": "440:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:3",
																		"nodeType": "YulLiteral",
																		"src": "443:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:3"
																},
																"nativeSrc": "433:12:3",
																"nodeType": "YulFunctionCall",
																"src": "433:12:3"
															},
															"nativeSrc": "433:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:3"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:3"
											},
											{
												"body": {
													"nativeSrc": "546:28:3",
													"nodeType": "YulBlock",
													"src": "546:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:3",
																		"nodeType": "YulLiteral",
																		"src": "563:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:3",
																		"nodeType": "YulLiteral",
																		"src": "566:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:3"
																},
																"nativeSrc": "556:12:3",
																"nodeType": "YulFunctionCall",
																"src": "556:12:3"
															},
															"nativeSrc": "556:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:3"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:3"
											},
											{
												"body": {
													"nativeSrc": "628:54:3",
													"nodeType": "YulBlock",
													"src": "628:54:3",
													"statements": [
														{
															"nativeSrc": "638:38:3",
															"nodeType": "YulAssignment",
															"src": "638:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:3",
																				"nodeType": "YulLiteral",
																				"src": "663:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:3"
																		},
																		"nativeSrc": "652:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:3",
																				"nodeType": "YulLiteral",
																				"src": "672:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:3"
																		},
																		"nativeSrc": "668:7:3",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:3"
																},
																"nativeSrc": "648:28:3",
																"nodeType": "YulFunctionCall",
																"src": "648:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:3",
														"nodeType": "YulTypedName",
														"src": "611:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:3",
														"nodeType": "YulTypedName",
														"src": "621:6:3",
														"type": ""
													}
												],
												"src": "580:102:3"
											},
											{
												"body": {
													"nativeSrc": "716:152:3",
													"nodeType": "YulBlock",
													"src": "716:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:3",
																		"nodeType": "YulLiteral",
																		"src": "733:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:3",
																		"nodeType": "YulLiteral",
																		"src": "736:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:3"
																},
																"nativeSrc": "726:88:3",
																"nodeType": "YulFunctionCall",
																"src": "726:88:3"
															},
															"nativeSrc": "726:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:3",
																		"nodeType": "YulLiteral",
																		"src": "830:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:3",
																		"nodeType": "YulLiteral",
																		"src": "833:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:3"
																},
																"nativeSrc": "823:15:3",
																"nodeType": "YulFunctionCall",
																"src": "823:15:3"
															},
															"nativeSrc": "823:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:3",
																		"nodeType": "YulLiteral",
																		"src": "854:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:3",
																		"nodeType": "YulLiteral",
																		"src": "857:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:3"
																},
																"nativeSrc": "847:15:3",
																"nodeType": "YulFunctionCall",
																"src": "847:15:3"
															},
															"nativeSrc": "847:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:3"
											},
											{
												"body": {
													"nativeSrc": "917:238:3",
													"nodeType": "YulBlock",
													"src": "917:238:3",
													"statements": [
														{
															"nativeSrc": "927:58:3",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:3",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:3"
																		},
																		"nativeSrc": "957:27:3",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:3"
																},
																"nativeSrc": "945:40:3",
																"nodeType": "YulFunctionCall",
																"src": "945:40:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:3",
																	"nodeType": "YulTypedName",
																	"src": "931:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:3",
																"nodeType": "YulBlock",
																"src": "1096:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:3"
																			},
																			"nativeSrc": "1098:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:3"
																		},
																		"nativeSrc": "1098:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:3",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:3",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:3"
																		},
																		"nativeSrc": "1036:34:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:3",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:3"
																		},
																		"nativeSrc": "1072:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:3"
																},
																"nativeSrc": "1033:62:3",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:3"
															},
															"nativeSrc": "1030:88:3",
															"nodeType": "YulIf",
															"src": "1030:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:3",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:3"
																},
																"nativeSrc": "1127:22:3",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:3"
															},
															"nativeSrc": "1127:22:3",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:3"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:3",
														"nodeType": "YulTypedName",
														"src": "903:6:3",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:3",
														"nodeType": "YulTypedName",
														"src": "911:4:3",
														"type": ""
													}
												],
												"src": "874:281:3"
											},
											{
												"body": {
													"nativeSrc": "1202:88:3",
													"nodeType": "YulBlock",
													"src": "1202:88:3",
													"statements": [
														{
															"nativeSrc": "1212:30:3",
															"nodeType": "YulAssignment",
															"src": "1212:30:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:3",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:3"
																},
																"nativeSrc": "1222:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:3"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:3"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:3",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:3"
																},
																"nativeSrc": "1251:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:3"
															},
															"nativeSrc": "1251:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:3"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:3",
														"nodeType": "YulTypedName",
														"src": "1186:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:3",
														"nodeType": "YulTypedName",
														"src": "1195:6:3",
														"type": ""
													}
												],
												"src": "1161:129:3"
											},
											{
												"body": {
													"nativeSrc": "1363:241:3",
													"nodeType": "YulBlock",
													"src": "1363:241:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:3",
																"nodeType": "YulBlock",
																"src": "1468:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:3"
																			},
																			"nativeSrc": "1470:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:3"
																		},
																		"nativeSrc": "1470:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:3",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:3"
																},
																"nativeSrc": "1437:30:3",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:3"
															},
															"nativeSrc": "1434:56:3",
															"nodeType": "YulIf",
															"src": "1434:56:3"
														},
														{
															"nativeSrc": "1500:37:3",
															"nodeType": "YulAssignment",
															"src": "1500:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:3"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:3",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:3"
																},
																"nativeSrc": "1508:29:3",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:3"
																}
															]
														},
														{
															"nativeSrc": "1574:23:3",
															"nodeType": "YulAssignment",
															"src": "1574:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:3"
																},
																"nativeSrc": "1582:15:3",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:3"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:3",
														"nodeType": "YulTypedName",
														"src": "1347:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:3",
														"nodeType": "YulTypedName",
														"src": "1358:4:3",
														"type": ""
													}
												],
												"src": "1296:308:3"
											},
											{
												"body": {
													"nativeSrc": "1674:84:3",
													"nodeType": "YulBlock",
													"src": "1674:84:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1698:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1698:3:3"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1703:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1703:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1708:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1708:6:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1685:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1685:12:3"
																},
																"nativeSrc": "1685:30:3",
																"nodeType": "YulFunctionCall",
																"src": "1685:30:3"
															},
															"nativeSrc": "1685:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "1685:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1735:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "1735:3:3"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1740:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1740:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1731:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1731:3:3"
																		},
																		"nativeSrc": "1731:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1731:16:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1749:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1724:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1724:6:3"
																},
																"nativeSrc": "1724:27:3",
																"nodeType": "YulFunctionCall",
																"src": "1724:27:3"
															},
															"nativeSrc": "1724:27:3",
															"nodeType": "YulExpressionStatement",
															"src": "1724:27:3"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "1610:148:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1656:3:3",
														"nodeType": "YulTypedName",
														"src": "1656:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1661:3:3",
														"nodeType": "YulTypedName",
														"src": "1661:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1666:6:3",
														"nodeType": "YulTypedName",
														"src": "1666:6:3",
														"type": ""
													}
												],
												"src": "1610:148:3"
											},
											{
												"body": {
													"nativeSrc": "1848:341:3",
													"nodeType": "YulBlock",
													"src": "1848:341:3",
													"statements": [
														{
															"nativeSrc": "1858:75:3",
															"nodeType": "YulAssignment",
															"src": "1858:75:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1925:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1925:6:3"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1883:41:3",
																			"nodeType": "YulIdentifier",
																			"src": "1883:41:3"
																		},
																		"nativeSrc": "1883:49:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1883:49:3"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1867:15:3",
																	"nodeType": "YulIdentifier",
																	"src": "1867:15:3"
																},
																"nativeSrc": "1867:66:3",
																"nodeType": "YulFunctionCall",
																"src": "1867:66:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1858:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1858:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1949:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1949:5:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1956:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1956:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1942:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1942:6:3"
																},
																"nativeSrc": "1942:21:3",
																"nodeType": "YulFunctionCall",
																"src": "1942:21:3"
															},
															"nativeSrc": "1942:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "1942:21:3"
														},
														{
															"nativeSrc": "1972:27:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1972:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1987:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1987:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1994:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1994:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1983:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:3"
																},
																"nativeSrc": "1983:16:3",
																"nodeType": "YulFunctionCall",
																"src": "1983:16:3"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1976:3:3",
																	"nodeType": "YulTypedName",
																	"src": "1976:3:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2037:83:3",
																"nodeType": "YulBlock",
																"src": "2037:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2039:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2039:77:3"
																			},
																			"nativeSrc": "2039:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2039:79:3"
																		},
																		"nativeSrc": "2039:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2039:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2018:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "2018:3:3"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2023:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2023:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2014:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2014:3:3"
																		},
																		"nativeSrc": "2014:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2014:16:3"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2032:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2032:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2011:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "2011:2:3"
																},
																"nativeSrc": "2011:25:3",
																"nodeType": "YulFunctionCall",
																"src": "2011:25:3"
															},
															"nativeSrc": "2008:112:3",
															"nodeType": "YulIf",
															"src": "2008:112:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:3"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "2129:36:3",
																	"nodeType": "YulIdentifier",
																	"src": "2129:36:3"
																},
																"nativeSrc": "2129:54:3",
																"nodeType": "YulFunctionCall",
																"src": "2129:54:3"
															},
															"nativeSrc": "2129:54:3",
															"nodeType": "YulExpressionStatement",
															"src": "2129:54:3"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "1764:425:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1821:3:3",
														"nodeType": "YulTypedName",
														"src": "1821:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1826:6:3",
														"nodeType": "YulTypedName",
														"src": "1826:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1834:3:3",
														"nodeType": "YulTypedName",
														"src": "1834:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1842:5:3",
														"nodeType": "YulTypedName",
														"src": "1842:5:3",
														"type": ""
													}
												],
												"src": "1764:425:3"
											},
											{
												"body": {
													"nativeSrc": "2271:278:3",
													"nodeType": "YulBlock",
													"src": "2271:278:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2320:83:3",
																"nodeType": "YulBlock",
																"src": "2320:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2322:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2322:77:3"
																			},
																			"nativeSrc": "2322:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2322:79:3"
																		},
																		"nativeSrc": "2322:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2322:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2299:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2299:6:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2307:4:3",
																						"nodeType": "YulLiteral",
																						"src": "2307:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2295:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2295:3:3"
																				},
																				"nativeSrc": "2295:17:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2295:17:3"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2314:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2291:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2291:3:3"
																		},
																		"nativeSrc": "2291:27:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2291:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2284:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:3"
																},
																"nativeSrc": "2284:35:3",
																"nodeType": "YulFunctionCall",
																"src": "2284:35:3"
															},
															"nativeSrc": "2281:122:3",
															"nodeType": "YulIf",
															"src": "2281:122:3"
														},
														{
															"nativeSrc": "2412:34:3",
															"nodeType": "YulVariableDeclaration",
															"src": "2412:34:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2439:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2439:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2426:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "2426:12:3"
																},
																"nativeSrc": "2426:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2426:20:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2416:6:3",
																	"nodeType": "YulTypedName",
																	"src": "2416:6:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2455:88:3",
															"nodeType": "YulAssignment",
															"src": "2455:88:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2516:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2516:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2524:4:3",
																				"nodeType": "YulLiteral",
																				"src": "2524:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2512:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2512:3:3"
																		},
																		"nativeSrc": "2512:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2512:17:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2531:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2531:6:3"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2539:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2539:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "2464:47:3",
																	"nodeType": "YulIdentifier",
																	"src": "2464:47:3"
																},
																"nativeSrc": "2464:79:3",
																"nodeType": "YulFunctionCall",
																"src": "2464:79:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2455:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2455:5:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "2209:340:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2249:6:3",
														"nodeType": "YulTypedName",
														"src": "2249:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2257:3:3",
														"nodeType": "YulTypedName",
														"src": "2257:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2265:5:3",
														"nodeType": "YulTypedName",
														"src": "2265:5:3",
														"type": ""
													}
												],
												"src": "2209:340:3"
											},
											{
												"body": {
													"nativeSrc": "2631:433:3",
													"nodeType": "YulBlock",
													"src": "2631:433:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2677:83:3",
																"nodeType": "YulBlock",
																"src": "2677:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2679:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2679:77:3"
																			},
																			"nativeSrc": "2679:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2679:79:3"
																		},
																		"nativeSrc": "2679:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2679:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2652:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2652:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2661:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2661:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2648:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2648:3:3"
																		},
																		"nativeSrc": "2648:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2648:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2673:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2673:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2644:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:3"
																},
																"nativeSrc": "2644:32:3",
																"nodeType": "YulFunctionCall",
																"src": "2644:32:3"
															},
															"nativeSrc": "2641:119:3",
															"nodeType": "YulIf",
															"src": "2641:119:3"
														},
														{
															"nativeSrc": "2770:287:3",
															"nodeType": "YulBlock",
															"src": "2770:287:3",
															"statements": [
																{
																	"nativeSrc": "2785:45:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2785:45:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2816:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2816:9:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2827:1:3",
																						"nodeType": "YulLiteral",
																						"src": "2827:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2812:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2812:3:3"
																				},
																				"nativeSrc": "2812:17:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2812:17:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2799:12:3",
																			"nodeType": "YulIdentifier",
																			"src": "2799:12:3"
																		},
																		"nativeSrc": "2799:31:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2799:31:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2789:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2789:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2877:83:3",
																		"nodeType": "YulBlock",
																		"src": "2877:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2879:77:3",
																						"nodeType": "YulIdentifier",
																						"src": "2879:77:3"
																					},
																					"nativeSrc": "2879:79:3",
																					"nodeType": "YulFunctionCall",
																					"src": "2879:79:3"
																				},
																				"nativeSrc": "2879:79:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "2879:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2849:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2849:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2857:18:3",
																				"nodeType": "YulLiteral",
																				"src": "2857:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2846:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "2846:2:3"
																		},
																		"nativeSrc": "2846:30:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2846:30:3"
																	},
																	"nativeSrc": "2843:117:3",
																	"nodeType": "YulIf",
																	"src": "2843:117:3"
																},
																{
																	"nativeSrc": "2974:73:3",
																	"nodeType": "YulAssignment",
																	"src": "2974:73:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3019:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3019:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3030:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3030:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3015:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3015:3:3"
																				},
																				"nativeSrc": "3015:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3015:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3039:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3039:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "2984:30:3",
																			"nodeType": "YulIdentifier",
																			"src": "2984:30:3"
																		},
																		"nativeSrc": "2984:63:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2984:63:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2974:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2974:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "2555:509:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2601:9:3",
														"nodeType": "YulTypedName",
														"src": "2601:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2612:7:3",
														"nodeType": "YulTypedName",
														"src": "2612:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2624:6:3",
														"nodeType": "YulTypedName",
														"src": "2624:6:3",
														"type": ""
													}
												],
												"src": "2555:509:3"
											},
											{
												"body": {
													"nativeSrc": "3115:32:3",
													"nodeType": "YulBlock",
													"src": "3115:32:3",
													"statements": [
														{
															"nativeSrc": "3125:16:3",
															"nodeType": "YulAssignment",
															"src": "3125:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "3136:5:3",
																"nodeType": "YulIdentifier",
																"src": "3136:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3125:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "3125:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3070:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3097:5:3",
														"nodeType": "YulTypedName",
														"src": "3097:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3107:7:3",
														"nodeType": "YulTypedName",
														"src": "3107:7:3",
														"type": ""
													}
												],
												"src": "3070:77:3"
											},
											{
												"body": {
													"nativeSrc": "3218:53:3",
													"nodeType": "YulBlock",
													"src": "3218:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3235:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3235:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3258:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3258:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3240:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "3240:17:3"
																		},
																		"nativeSrc": "3240:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3240:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3228:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3228:6:3"
																},
																"nativeSrc": "3228:37:3",
																"nodeType": "YulFunctionCall",
																"src": "3228:37:3"
															},
															"nativeSrc": "3228:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "3228:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3153:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3206:5:3",
														"nodeType": "YulTypedName",
														"src": "3206:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3213:3:3",
														"nodeType": "YulTypedName",
														"src": "3213:3:3",
														"type": ""
													}
												],
												"src": "3153:118:3"
											},
											{
												"body": {
													"nativeSrc": "3375:124:3",
													"nodeType": "YulBlock",
													"src": "3375:124:3",
													"statements": [
														{
															"nativeSrc": "3385:26:3",
															"nodeType": "YulAssignment",
															"src": "3385:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3397:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3397:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3408:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3408:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3393:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3393:3:3"
																},
																"nativeSrc": "3393:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3393:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3385:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3385:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3465:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3465:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3478:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3478:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3489:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3489:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3474:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3474:3:3"
																		},
																		"nativeSrc": "3474:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3474:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3421:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "3421:43:3"
																},
																"nativeSrc": "3421:71:3",
																"nodeType": "YulFunctionCall",
																"src": "3421:71:3"
															},
															"nativeSrc": "3421:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "3421:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3277:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3347:9:3",
														"nodeType": "YulTypedName",
														"src": "3347:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3359:6:3",
														"nodeType": "YulTypedName",
														"src": "3359:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3370:4:3",
														"nodeType": "YulTypedName",
														"src": "3370:4:3",
														"type": ""
													}
												],
												"src": "3277:222:3"
											},
											{
												"body": {
													"nativeSrc": "3550:81:3",
													"nodeType": "YulBlock",
													"src": "3550:81:3",
													"statements": [
														{
															"nativeSrc": "3560:65:3",
															"nodeType": "YulAssignment",
															"src": "3560:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3575:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "3575:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3582:42:3",
																		"nodeType": "YulLiteral",
																		"src": "3582:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3571:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3571:3:3"
																},
																"nativeSrc": "3571:54:3",
																"nodeType": "YulFunctionCall",
																"src": "3571:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3560:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "3560:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3505:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3532:5:3",
														"nodeType": "YulTypedName",
														"src": "3532:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3542:7:3",
														"nodeType": "YulTypedName",
														"src": "3542:7:3",
														"type": ""
													}
												],
												"src": "3505:126:3"
											},
											{
												"body": {
													"nativeSrc": "3682:51:3",
													"nodeType": "YulBlock",
													"src": "3682:51:3",
													"statements": [
														{
															"nativeSrc": "3692:35:3",
															"nodeType": "YulAssignment",
															"src": "3692:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3721:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "3721:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3703:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "3703:17:3"
																},
																"nativeSrc": "3703:24:3",
																"nodeType": "YulFunctionCall",
																"src": "3703:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3692:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "3692:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3637:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3664:5:3",
														"nodeType": "YulTypedName",
														"src": "3664:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3674:7:3",
														"nodeType": "YulTypedName",
														"src": "3674:7:3",
														"type": ""
													}
												],
												"src": "3637:96:3"
											},
											{
												"body": {
													"nativeSrc": "3804:53:3",
													"nodeType": "YulBlock",
													"src": "3804:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3821:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3821:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3844:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3844:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3826:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "3826:17:3"
																		},
																		"nativeSrc": "3826:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3826:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3814:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3814:6:3"
																},
																"nativeSrc": "3814:37:3",
																"nodeType": "YulFunctionCall",
																"src": "3814:37:3"
															},
															"nativeSrc": "3814:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "3814:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3739:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3792:5:3",
														"nodeType": "YulTypedName",
														"src": "3792:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3799:3:3",
														"nodeType": "YulTypedName",
														"src": "3799:3:3",
														"type": ""
													}
												],
												"src": "3739:118:3"
											},
											{
												"body": {
													"nativeSrc": "3961:124:3",
													"nodeType": "YulBlock",
													"src": "3961:124:3",
													"statements": [
														{
															"nativeSrc": "3971:26:3",
															"nodeType": "YulAssignment",
															"src": "3971:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3983:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3983:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3994:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3979:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3979:3:3"
																},
																"nativeSrc": "3979:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3979:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3971:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3971:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4051:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4051:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4064:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4064:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4075:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4075:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4060:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4060:3:3"
																		},
																		"nativeSrc": "4060:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4060:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4007:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "4007:43:3"
																},
																"nativeSrc": "4007:71:3",
																"nodeType": "YulFunctionCall",
																"src": "4007:71:3"
															},
															"nativeSrc": "4007:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "4007:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3863:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3933:9:3",
														"nodeType": "YulTypedName",
														"src": "3933:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3945:6:3",
														"nodeType": "YulTypedName",
														"src": "3945:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3956:4:3",
														"nodeType": "YulTypedName",
														"src": "3956:4:3",
														"type": ""
													}
												],
												"src": "3863:222:3"
											},
											{
												"body": {
													"nativeSrc": "4134:79:3",
													"nodeType": "YulBlock",
													"src": "4134:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "4191:16:3",
																"nodeType": "YulBlock",
																"src": "4191:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4200:1:3",
																					"nodeType": "YulLiteral",
																					"src": "4200:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4203:1:3",
																					"nodeType": "YulLiteral",
																					"src": "4203:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4193:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4193:6:3"
																			},
																			"nativeSrc": "4193:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4193:12:3"
																		},
																		"nativeSrc": "4193:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4193:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4157:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "4157:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4182:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "4182:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4164:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "4164:17:3"
																				},
																				"nativeSrc": "4164:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4164:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4154:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "4154:2:3"
																		},
																		"nativeSrc": "4154:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4154:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4147:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4147:6:3"
																},
																"nativeSrc": "4147:43:3",
																"nodeType": "YulFunctionCall",
																"src": "4147:43:3"
															},
															"nativeSrc": "4144:63:3",
															"nodeType": "YulIf",
															"src": "4144:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4091:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4127:5:3",
														"nodeType": "YulTypedName",
														"src": "4127:5:3",
														"type": ""
													}
												],
												"src": "4091:122:3"
											},
											{
												"body": {
													"nativeSrc": "4271:87:3",
													"nodeType": "YulBlock",
													"src": "4271:87:3",
													"statements": [
														{
															"nativeSrc": "4281:29:3",
															"nodeType": "YulAssignment",
															"src": "4281:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4303:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4303:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4290:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "4290:12:3"
																},
																"nativeSrc": "4290:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4290:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4281:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "4281:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4346:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "4346:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4319:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "4319:26:3"
																},
																"nativeSrc": "4319:33:3",
																"nodeType": "YulFunctionCall",
																"src": "4319:33:3"
															},
															"nativeSrc": "4319:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "4319:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4219:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4249:6:3",
														"nodeType": "YulTypedName",
														"src": "4249:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4257:3:3",
														"nodeType": "YulTypedName",
														"src": "4257:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4265:5:3",
														"nodeType": "YulTypedName",
														"src": "4265:5:3",
														"type": ""
													}
												],
												"src": "4219:139:3"
											},
											{
												"body": {
													"nativeSrc": "4430:263:3",
													"nodeType": "YulBlock",
													"src": "4430:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "4476:83:3",
																"nodeType": "YulBlock",
																"src": "4476:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4478:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "4478:77:3"
																			},
																			"nativeSrc": "4478:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4478:79:3"
																		},
																		"nativeSrc": "4478:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4478:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4451:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "4451:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4460:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4460:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4447:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4447:3:3"
																		},
																		"nativeSrc": "4447:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4472:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4472:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4443:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4443:3:3"
																},
																"nativeSrc": "4443:32:3",
																"nodeType": "YulFunctionCall",
																"src": "4443:32:3"
															},
															"nativeSrc": "4440:119:3",
															"nodeType": "YulIf",
															"src": "4440:119:3"
														},
														{
															"nativeSrc": "4569:117:3",
															"nodeType": "YulBlock",
															"src": "4569:117:3",
															"statements": [
																{
																	"nativeSrc": "4584:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4584:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4598:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4598:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4588:6:3",
																			"nodeType": "YulTypedName",
																			"src": "4588:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4613:63:3",
																	"nodeType": "YulAssignment",
																	"src": "4613:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4648:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "4648:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4659:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "4659:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4644:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "4644:3:3"
																				},
																				"nativeSrc": "4644:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4644:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4668:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "4668:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4623:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "4623:20:3"
																		},
																		"nativeSrc": "4623:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4623:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4613:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "4613:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4364:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4400:9:3",
														"nodeType": "YulTypedName",
														"src": "4400:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4411:7:3",
														"nodeType": "YulTypedName",
														"src": "4411:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4423:6:3",
														"nodeType": "YulTypedName",
														"src": "4423:6:3",
														"type": ""
													}
												],
												"src": "4364:329:3"
											},
											{
												"body": {
													"nativeSrc": "4758:40:3",
													"nodeType": "YulBlock",
													"src": "4758:40:3",
													"statements": [
														{
															"nativeSrc": "4769:22:3",
															"nodeType": "YulAssignment",
															"src": "4769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4785:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "4785:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4779:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "4779:5:3"
																},
																"nativeSrc": "4779:12:3",
																"nodeType": "YulFunctionCall",
																"src": "4779:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4769:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4769:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4699:99:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4741:5:3",
														"nodeType": "YulTypedName",
														"src": "4741:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4751:6:3",
														"nodeType": "YulTypedName",
														"src": "4751:6:3",
														"type": ""
													}
												],
												"src": "4699:99:3"
											},
											{
												"body": {
													"nativeSrc": "4918:34:3",
													"nodeType": "YulBlock",
													"src": "4918:34:3",
													"statements": [
														{
															"nativeSrc": "4928:18:3",
															"nodeType": "YulAssignment",
															"src": "4928:18:3",
															"value": {
																"name": "pos",
																"nativeSrc": "4943:3:3",
																"nodeType": "YulIdentifier",
																"src": "4943:3:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4928:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "4928:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "4804:148:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4890:3:3",
														"nodeType": "YulTypedName",
														"src": "4890:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4895:6:3",
														"nodeType": "YulTypedName",
														"src": "4895:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4906:11:3",
														"nodeType": "YulTypedName",
														"src": "4906:11:3",
														"type": ""
													}
												],
												"src": "4804:148:3"
											},
											{
												"body": {
													"nativeSrc": "5020:77:3",
													"nodeType": "YulBlock",
													"src": "5020:77:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5037:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5037:3:3"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "5042:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5042:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5047:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5047:6:3"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "5031:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "5031:5:3"
																},
																"nativeSrc": "5031:23:3",
																"nodeType": "YulFunctionCall",
																"src": "5031:23:3"
															},
															"nativeSrc": "5031:23:3",
															"nodeType": "YulExpressionStatement",
															"src": "5031:23:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5074:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "5074:3:3"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5079:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5079:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5070:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5070:3:3"
																		},
																		"nativeSrc": "5070:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5070:16:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5088:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5088:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5063:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5063:6:3"
																},
																"nativeSrc": "5063:27:3",
																"nodeType": "YulFunctionCall",
																"src": "5063:27:3"
															},
															"nativeSrc": "5063:27:3",
															"nodeType": "YulExpressionStatement",
															"src": "5063:27:3"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "4958:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5002:3:3",
														"nodeType": "YulTypedName",
														"src": "5002:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5007:3:3",
														"nodeType": "YulTypedName",
														"src": "5007:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5012:6:3",
														"nodeType": "YulTypedName",
														"src": "5012:6:3",
														"type": ""
													}
												],
												"src": "4958:139:3"
											},
											{
												"body": {
													"nativeSrc": "5213:280:3",
													"nodeType": "YulBlock",
													"src": "5213:280:3",
													"statements": [
														{
															"nativeSrc": "5223:53:3",
															"nodeType": "YulVariableDeclaration",
															"src": "5223:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5270:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "5270:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5237:32:3",
																	"nodeType": "YulIdentifier",
																	"src": "5237:32:3"
																},
																"nativeSrc": "5237:39:3",
																"nodeType": "YulFunctionCall",
																"src": "5237:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5227:6:3",
																	"nodeType": "YulTypedName",
																	"src": "5227:6:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5285:96:3",
															"nodeType": "YulAssignment",
															"src": "5285:96:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5369:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5369:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5374:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5374:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "5292:76:3",
																	"nodeType": "YulIdentifier",
																	"src": "5292:76:3"
																},
																"nativeSrc": "5292:89:3",
																"nodeType": "YulFunctionCall",
																"src": "5292:89:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5285:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5285:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5429:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "5429:5:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5436:4:3",
																				"nodeType": "YulLiteral",
																				"src": "5436:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5425:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5425:3:3"
																		},
																		"nativeSrc": "5425:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5425:16:3"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5443:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5443:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5448:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5448:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5390:34:3",
																	"nodeType": "YulIdentifier",
																	"src": "5390:34:3"
																},
																"nativeSrc": "5390:65:3",
																"nodeType": "YulFunctionCall",
																"src": "5390:65:3"
															},
															"nativeSrc": "5390:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "5390:65:3"
														},
														{
															"nativeSrc": "5464:23:3",
															"nodeType": "YulAssignment",
															"src": "5464:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5475:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5475:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5480:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5480:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5471:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5471:3:3"
																},
																"nativeSrc": "5471:16:3",
																"nodeType": "YulFunctionCall",
																"src": "5471:16:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5464:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5464:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "5103:390:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5194:5:3",
														"nodeType": "YulTypedName",
														"src": "5194:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5201:3:3",
														"nodeType": "YulTypedName",
														"src": "5201:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5209:3:3",
														"nodeType": "YulTypedName",
														"src": "5209:3:3",
														"type": ""
													}
												],
												"src": "5103:390:3"
											},
											{
												"body": {
													"nativeSrc": "5635:139:3",
													"nodeType": "YulBlock",
													"src": "5635:139:3",
													"statements": [
														{
															"nativeSrc": "5646:102:3",
															"nodeType": "YulAssignment",
															"src": "5646:102:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5735:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5735:6:3"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5744:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5744:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "5653:81:3",
																	"nodeType": "YulIdentifier",
																	"src": "5653:81:3"
																},
																"nativeSrc": "5653:95:3",
																"nodeType": "YulFunctionCall",
																"src": "5653:95:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5646:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5646:3:3"
																}
															]
														},
														{
															"nativeSrc": "5758:10:3",
															"nodeType": "YulAssignment",
															"src": "5758:10:3",
															"value": {
																"name": "pos",
																"nativeSrc": "5765:3:3",
																"nodeType": "YulIdentifier",
																"src": "5765:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5758:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5758:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "5499:275:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5614:3:3",
														"nodeType": "YulTypedName",
														"src": "5614:3:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5620:6:3",
														"nodeType": "YulTypedName",
														"src": "5620:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5631:3:3",
														"nodeType": "YulTypedName",
														"src": "5631:3:3",
														"type": ""
													}
												],
												"src": "5499:275:3"
											},
											{
												"body": {
													"nativeSrc": "5876:73:3",
													"nodeType": "YulBlock",
													"src": "5876:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5893:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5893:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5898:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5898:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5886:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5886:6:3"
																},
																"nativeSrc": "5886:19:3",
																"nodeType": "YulFunctionCall",
																"src": "5886:19:3"
															},
															"nativeSrc": "5886:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "5886:19:3"
														},
														{
															"nativeSrc": "5914:29:3",
															"nodeType": "YulAssignment",
															"src": "5914:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5933:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5933:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5938:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5938:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5929:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5929:3:3"
																},
																"nativeSrc": "5929:14:3",
																"nodeType": "YulFunctionCall",
																"src": "5929:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5914:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "5914:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5780:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5848:3:3",
														"nodeType": "YulTypedName",
														"src": "5848:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5853:6:3",
														"nodeType": "YulTypedName",
														"src": "5853:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5864:11:3",
														"nodeType": "YulTypedName",
														"src": "5864:11:3",
														"type": ""
													}
												],
												"src": "5780:169:3"
											},
											{
												"body": {
													"nativeSrc": "6061:59:3",
													"nodeType": "YulBlock",
													"src": "6061:59:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6083:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6083:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6091:1:3",
																				"nodeType": "YulLiteral",
																				"src": "6091:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6079:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6079:3:3"
																		},
																		"nativeSrc": "6079:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6079:14:3"
																	},
																	{
																		"hexValue": "4e616d65206d75737420696e707574",
																		"kind": "string",
																		"nativeSrc": "6095:17:3",
																		"nodeType": "YulLiteral",
																		"src": "6095:17:3",
																		"type": "",
																		"value": "Name must input"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6072:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:3"
																},
																"nativeSrc": "6072:41:3",
																"nodeType": "YulFunctionCall",
																"src": "6072:41:3"
															},
															"nativeSrc": "6072:41:3",
															"nodeType": "YulExpressionStatement",
															"src": "6072:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_f7f1ebd3a5710177ce09cf8ae86dba1b16661028bbf7b29523ad3c3175d0583d",
												"nativeSrc": "5955:165:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6053:6:3",
														"nodeType": "YulTypedName",
														"src": "6053:6:3",
														"type": ""
													}
												],
												"src": "5955:165:3"
											},
											{
												"body": {
													"nativeSrc": "6272:220:3",
													"nodeType": "YulBlock",
													"src": "6272:220:3",
													"statements": [
														{
															"nativeSrc": "6282:74:3",
															"nodeType": "YulAssignment",
															"src": "6282:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6348:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6348:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6353:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6353:2:3",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6289:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "6289:58:3"
																},
																"nativeSrc": "6289:67:3",
																"nodeType": "YulFunctionCall",
																"src": "6289:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6282:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6282:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6454:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6454:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f7f1ebd3a5710177ce09cf8ae86dba1b16661028bbf7b29523ad3c3175d0583d",
																	"nativeSrc": "6365:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "6365:88:3"
																},
																"nativeSrc": "6365:93:3",
																"nodeType": "YulFunctionCall",
																"src": "6365:93:3"
															},
															"nativeSrc": "6365:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "6365:93:3"
														},
														{
															"nativeSrc": "6467:19:3",
															"nodeType": "YulAssignment",
															"src": "6467:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6478:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6478:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6483:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6483:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6474:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6474:3:3"
																},
																"nativeSrc": "6474:12:3",
																"nodeType": "YulFunctionCall",
																"src": "6474:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6467:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6467:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f7f1ebd3a5710177ce09cf8ae86dba1b16661028bbf7b29523ad3c3175d0583d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6126:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6260:3:3",
														"nodeType": "YulTypedName",
														"src": "6260:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6268:3:3",
														"nodeType": "YulTypedName",
														"src": "6268:3:3",
														"type": ""
													}
												],
												"src": "6126:366:3"
											},
											{
												"body": {
													"nativeSrc": "6669:248:3",
													"nodeType": "YulBlock",
													"src": "6669:248:3",
													"statements": [
														{
															"nativeSrc": "6679:26:3",
															"nodeType": "YulAssignment",
															"src": "6679:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6691:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6691:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6702:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6702:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6687:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6687:3:3"
																},
																"nativeSrc": "6687:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6687:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6679:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6679:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6726:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6726:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6737:1:3",
																				"nodeType": "YulLiteral",
																				"src": "6737:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6722:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6722:3:3"
																		},
																		"nativeSrc": "6722:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6722:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6745:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "6745:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6751:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6751:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6741:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6741:3:3"
																		},
																		"nativeSrc": "6741:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6741:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6715:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6715:6:3"
																},
																"nativeSrc": "6715:47:3",
																"nodeType": "YulFunctionCall",
																"src": "6715:47:3"
															},
															"nativeSrc": "6715:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "6715:47:3"
														},
														{
															"nativeSrc": "6771:139:3",
															"nodeType": "YulAssignment",
															"src": "6771:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6905:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "6905:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f7f1ebd3a5710177ce09cf8ae86dba1b16661028bbf7b29523ad3c3175d0583d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6779:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "6779:124:3"
																},
																"nativeSrc": "6779:131:3",
																"nodeType": "YulFunctionCall",
																"src": "6779:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6771:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6771:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f7f1ebd3a5710177ce09cf8ae86dba1b16661028bbf7b29523ad3c3175d0583d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6498:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6649:9:3",
														"nodeType": "YulTypedName",
														"src": "6649:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6664:4:3",
														"nodeType": "YulTypedName",
														"src": "6664:4:3",
														"type": ""
													}
												],
												"src": "6498:419:3"
											},
											{
												"body": {
													"nativeSrc": "6951:152:3",
													"nodeType": "YulBlock",
													"src": "6951:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6968:1:3",
																		"nodeType": "YulLiteral",
																		"src": "6968:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6971:77:3",
																		"nodeType": "YulLiteral",
																		"src": "6971:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6961:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6961:6:3"
																},
																"nativeSrc": "6961:88:3",
																"nodeType": "YulFunctionCall",
																"src": "6961:88:3"
															},
															"nativeSrc": "6961:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "6961:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7065:1:3",
																		"nodeType": "YulLiteral",
																		"src": "7065:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7068:4:3",
																		"nodeType": "YulLiteral",
																		"src": "7068:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7058:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7058:6:3"
																},
																"nativeSrc": "7058:15:3",
																"nodeType": "YulFunctionCall",
																"src": "7058:15:3"
															},
															"nativeSrc": "7058:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "7058:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7089:1:3",
																		"nodeType": "YulLiteral",
																		"src": "7089:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7092:4:3",
																		"nodeType": "YulLiteral",
																		"src": "7092:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7082:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7082:6:3"
																},
																"nativeSrc": "7082:15:3",
																"nodeType": "YulFunctionCall",
																"src": "7082:15:3"
															},
															"nativeSrc": "7082:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "7082:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6923:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "6923:180:3"
											},
											{
												"body": {
													"nativeSrc": "7153:147:3",
													"nodeType": "YulBlock",
													"src": "7153:147:3",
													"statements": [
														{
															"nativeSrc": "7163:25:3",
															"nodeType": "YulAssignment",
															"src": "7163:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7186:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7186:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7168:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "7168:17:3"
																},
																"nativeSrc": "7168:20:3",
																"nodeType": "YulFunctionCall",
																"src": "7168:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7163:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "7163:1:3"
																}
															]
														},
														{
															"nativeSrc": "7197:25:3",
															"nodeType": "YulAssignment",
															"src": "7197:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7220:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7220:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7202:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "7202:17:3"
																},
																"nativeSrc": "7202:20:3",
																"nodeType": "YulFunctionCall",
																"src": "7202:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7197:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "7197:1:3"
																}
															]
														},
														{
															"nativeSrc": "7231:16:3",
															"nodeType": "YulAssignment",
															"src": "7231:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7242:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7242:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7245:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7245:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7238:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7238:3:3"
																},
																"nativeSrc": "7238:9:3",
																"nodeType": "YulFunctionCall",
																"src": "7238:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7231:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7231:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7271:22:3",
																"nodeType": "YulBlock",
																"src": "7271:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7273:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "7273:16:3"
																			},
																			"nativeSrc": "7273:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "7273:18:3"
																		},
																		"nativeSrc": "7273:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "7273:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7263:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7263:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7266:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "7266:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7260:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "7260:2:3"
																},
																"nativeSrc": "7260:10:3",
																"nodeType": "YulFunctionCall",
																"src": "7260:10:3"
															},
															"nativeSrc": "7257:36:3",
															"nodeType": "YulIf",
															"src": "7257:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7109:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7140:1:3",
														"nodeType": "YulTypedName",
														"src": "7140:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7143:1:3",
														"nodeType": "YulTypedName",
														"src": "7143:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7149:3:3",
														"nodeType": "YulTypedName",
														"src": "7149:3:3",
														"type": ""
													}
												],
												"src": "7109:191:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f7f1ebd3a5710177ce09cf8ae86dba1b16661028bbf7b29523ad3c3175d0583d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Name must input\")\n\n    }\n\n    function abi_encode_t_stringliteral_f7f1ebd3a5710177ce09cf8ae86dba1b16661028bbf7b29523ad3c3175d0583d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_f7f1ebd3a5710177ce09cf8ae86dba1b16661028bbf7b29523ad3c3175d0583d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f7f1ebd3a5710177ce09cf8ae86dba1b16661028bbf7b29523ad3c3175d0583d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f7f1ebd3a5710177ce09cf8ae86dba1b16661028bbf7b29523ad3c3175d0583d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610058575f3560e01c8063715018a614610063578063805265e5146100795780638da5cb5b146100b5578063f2fde38b146100df578063f3fa422614610107578063fc36e15b1461012f5761005f565b3661005f57005b5f5ffd5b34801561006e575f5ffd5b50610077610157565b005b348015610084575f5ffd5b5061009f600480360381019061009a91906105ee565b61016a565b6040516100ac919061064d565b60405180910390f35b3480156100c0575f5ffd5b506100c9610191565b6040516100d691906106a5565b60405180910390f35b3480156100ea575f5ffd5b50610105600480360381019061010091906106e8565b6101b8565b005b348015610112575f5ffd5b5061012d600480360381019061012891906105ee565b61023c565b005b34801561013a575f5ffd5b50610155600480360381019061015091906105ee565b61031b565b005b61015f610352565b6101685f6103d9565b565b5f60018260405161017b9190610765565b9081526020016040518091039020549050919050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101c0610352565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610230575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161022791906106a5565b60405180910390fd5b610239816103d9565b50565b610244610352565b5f815111610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027e906107d5565b60405180910390fd5b5f6001826040516102989190610765565b90815260200160405180910390205490506001826040516102b99190610765565b90815260200160405180910390205f9055816040516102d89190610765565b60405180910390207f2d6afb89a283acc39c9f4ad71725bf5d3b3a3c46032838e2ad76961f426b73718260405161030f919061064d565b60405180910390a25050565b6001808260405161032c9190610765565b90815260200160405180910390205f8282546103489190610820565b9250508190555050565b61035a61049a565b73ffffffffffffffffffffffffffffffffffffffff16610378610191565b73ffffffffffffffffffffffffffffffffffffffff16146103d75761039b61049a565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016103ce91906106a5565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610500826104ba565b810181811067ffffffffffffffff8211171561051f5761051e6104ca565b5b80604052505050565b5f6105316104a1565b905061053d82826104f7565b919050565b5f67ffffffffffffffff82111561055c5761055b6104ca565b5b610565826104ba565b9050602081019050919050565b828183375f83830152505050565b5f61059261058d84610542565b610528565b9050828152602081018484840111156105ae576105ad6104b6565b5b6105b9848285610572565b509392505050565b5f82601f8301126105d5576105d46104b2565b5b81356105e5848260208601610580565b91505092915050565b5f60208284031215610603576106026104aa565b5b5f82013567ffffffffffffffff8111156106205761061f6104ae565b5b61062c848285016105c1565b91505092915050565b5f819050919050565b61064781610635565b82525050565b5f6020820190506106605f83018461063e565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61068f82610666565b9050919050565b61069f81610685565b82525050565b5f6020820190506106b85f830184610696565b92915050565b6106c781610685565b81146106d1575f5ffd5b50565b5f813590506106e2816106be565b92915050565b5f602082840312156106fd576106fc6104aa565b5b5f61070a848285016106d4565b91505092915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f61073f82610713565b610749818561071d565b9350610759818560208601610727565b80840191505092915050565b5f6107708284610735565b915081905092915050565b5f82825260208201905092915050565b7f4e616d65206d75737420696e70757400000000000000000000000000000000005f82015250565b5f6107bf600f8361077b565b91506107ca8261078b565b602082019050919050565b5f6020820190508181035f8301526107ec816107b3565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61082a82610635565b915061083583610635565b925082820190508082111561084d5761084c6107f3565b5b9291505056fea2646970667358221220c9431d44a8f8de0f3ebdb574483427d96f7631f94312c5703ef3c82c23bca30064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x805265E5 EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0xF3FA4226 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0xFC36E15B EQ PUSH2 0x12F JUMPI PUSH2 0x5F JUMP JUMPDEST CALLDATASIZE PUSH2 0x5F JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x77 PUSH2 0x157 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xC9 PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x1B8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x112 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15F PUSH2 0x352 JUMP JUMPDEST PUSH2 0x168 PUSH0 PUSH2 0x3D9 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x765 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x352 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x230 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x239 DUP2 PUSH2 0x3D9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x244 PUSH2 0x352 JUMP JUMPDEST PUSH0 DUP2 MLOAD GT PUSH2 0x287 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27E SWAP1 PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x765 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP1 POP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x765 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SSTORE DUP2 PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x765 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0x2D6AFB89A283ACC39C9F4AD71725BF5D3B3A3C46032838E2AD76961F426B7371 DUP3 PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x765 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x35A PUSH2 0x49A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x378 PUSH2 0x191 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3D7 JUMPI PUSH2 0x39B PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x500 DUP3 PUSH2 0x4BA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x51F JUMPI PUSH2 0x51E PUSH2 0x4CA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x531 PUSH2 0x4A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x53D DUP3 DUP3 PUSH2 0x4F7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x55C JUMPI PUSH2 0x55B PUSH2 0x4CA JUMP JUMPDEST JUMPDEST PUSH2 0x565 DUP3 PUSH2 0x4BA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x592 PUSH2 0x58D DUP5 PUSH2 0x542 JUMP JUMPDEST PUSH2 0x528 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5AE JUMPI PUSH2 0x5AD PUSH2 0x4B6 JUMP JUMPDEST JUMPDEST PUSH2 0x5B9 DUP5 DUP3 DUP6 PUSH2 0x572 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5D5 JUMPI PUSH2 0x5D4 PUSH2 0x4B2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5E5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x580 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x603 JUMPI PUSH2 0x602 PUSH2 0x4AA JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x620 JUMPI PUSH2 0x61F PUSH2 0x4AE JUMP JUMPDEST JUMPDEST PUSH2 0x62C DUP5 DUP3 DUP6 ADD PUSH2 0x5C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x647 DUP2 PUSH2 0x635 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x660 PUSH0 DUP4 ADD DUP5 PUSH2 0x63E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x68F DUP3 PUSH2 0x666 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x69F DUP2 PUSH2 0x685 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6B8 PUSH0 DUP4 ADD DUP5 PUSH2 0x696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6C7 DUP2 PUSH2 0x685 JUMP JUMPDEST DUP2 EQ PUSH2 0x6D1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6E2 DUP2 PUSH2 0x6BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6FD JUMPI PUSH2 0x6FC PUSH2 0x4AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x70A DUP5 DUP3 DUP6 ADD PUSH2 0x6D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x73F DUP3 PUSH2 0x713 JUMP JUMPDEST PUSH2 0x749 DUP2 DUP6 PUSH2 0x71D JUMP JUMPDEST SWAP4 POP PUSH2 0x759 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x727 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x770 DUP3 DUP5 PUSH2 0x735 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E616D65206D75737420696E7075740000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7BF PUSH1 0xF DUP4 PUSH2 0x77B JUMP JUMPDEST SWAP2 POP PUSH2 0x7CA DUP3 PUSH2 0x78B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7EC DUP2 PUSH2 0x7B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x82A DUP3 PUSH2 0x635 JUMP JUMPDEST SWAP2 POP PUSH2 0x835 DUP4 PUSH2 0x635 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x84D JUMPI PUSH2 0x84C PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 NUMBER SAR PREVRANDAO 0xA8 EXTCALL 0xDE 0xF RETURNDATACOPY 0xBD 0xB5 PUSH21 0x483427D96F7631F94312C5703EF3C82C23BCA30064 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "407:799:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;713:113:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;957:246:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;616:89;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;713:113:2:-;774:7;801:11;813:4;801:17;;;;;;:::i;:::-;;;;;;;;;;;;;;794:24;;713:113;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2543:215::-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;957:246:2:-;1531:13:0;:11;:13::i;:::-;1051:1:2::1;1038:4;1032:18;:20;1024:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1083:16;1102:11;1114:4;1102:17;;;;;;:::i;:::-;;;;;;;;;;;;;;1083:36;;1137:11;1149:4;1137:17;;;;;;:::i;:::-;;;;;;;;;;;;;1130:24;;;1180:4;1170:25;;;;;;:::i;:::-;;;;;;;;;1186:8;1170:25;;;;;;:::i;:::-;;;;;;;;1013:190;957:246:::0;:::o;616:89::-;692:1;671:11;683:4;671:17;;;;;;:::i;:::-;;;;;;;;;;;;;;:22;;;;;;;:::i;:::-;;;;;;;;616:89;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;7:75:3:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:148::-;1708:6;1703:3;1698;1685:30;1749:1;1740:6;1735:3;1731:16;1724:27;1610:148;;;:::o;1764:425::-;1842:5;1867:66;1883:49;1925:6;1883:49;:::i;:::-;1867:66;:::i;:::-;1858:75;;1956:6;1949:5;1942:21;1994:4;1987:5;1983:16;2032:3;2023:6;2018:3;2014:16;2011:25;2008:112;;;2039:79;;:::i;:::-;2008:112;2129:54;2176:6;2171:3;2166;2129:54;:::i;:::-;1848:341;1764:425;;;;;:::o;2209:340::-;2265:5;2314:3;2307:4;2299:6;2295:17;2291:27;2281:122;;2322:79;;:::i;:::-;2281:122;2439:6;2426:20;2464:79;2539:3;2531:6;2524:4;2516:6;2512:17;2464:79;:::i;:::-;2455:88;;2271:278;2209:340;;;;:::o;2555:509::-;2624:6;2673:2;2661:9;2652:7;2648:23;2644:32;2641:119;;;2679:79;;:::i;:::-;2641:119;2827:1;2816:9;2812:17;2799:31;2857:18;2849:6;2846:30;2843:117;;;2879:79;;:::i;:::-;2843:117;2984:63;3039:7;3030:6;3019:9;3015:22;2984:63;:::i;:::-;2974:73;;2770:287;2555:509;;;;:::o;3070:77::-;3107:7;3136:5;3125:16;;3070:77;;;:::o;3153:118::-;3240:24;3258:5;3240:24;:::i;:::-;3235:3;3228:37;3153:118;;:::o;3277:222::-;3370:4;3408:2;3397:9;3393:18;3385:26;;3421:71;3489:1;3478:9;3474:17;3465:6;3421:71;:::i;:::-;3277:222;;;;:::o;3505:126::-;3542:7;3582:42;3575:5;3571:54;3560:65;;3505:126;;;:::o;3637:96::-;3674:7;3703:24;3721:5;3703:24;:::i;:::-;3692:35;;3637:96;;;:::o;3739:118::-;3826:24;3844:5;3826:24;:::i;:::-;3821:3;3814:37;3739:118;;:::o;3863:222::-;3956:4;3994:2;3983:9;3979:18;3971:26;;4007:71;4075:1;4064:9;4060:17;4051:6;4007:71;:::i;:::-;3863:222;;;;:::o;4091:122::-;4164:24;4182:5;4164:24;:::i;:::-;4157:5;4154:35;4144:63;;4203:1;4200;4193:12;4144:63;4091:122;:::o;4219:139::-;4265:5;4303:6;4290:20;4281:29;;4319:33;4346:5;4319:33;:::i;:::-;4219:139;;;;:::o;4364:329::-;4423:6;4472:2;4460:9;4451:7;4447:23;4443:32;4440:119;;;4478:79;;:::i;:::-;4440:119;4598:1;4623:53;4668:7;4659:6;4648:9;4644:22;4623:53;:::i;:::-;4613:63;;4569:117;4364:329;;;;:::o;4699:99::-;4751:6;4785:5;4779:12;4769:22;;4699:99;;;:::o;4804:148::-;4906:11;4943:3;4928:18;;4804:148;;;;:::o;4958:139::-;5047:6;5042:3;5037;5031:23;5088:1;5079:6;5074:3;5070:16;5063:27;4958:139;;;:::o;5103:390::-;5209:3;5237:39;5270:5;5237:39;:::i;:::-;5292:89;5374:6;5369:3;5292:89;:::i;:::-;5285:96;;5390:65;5448:6;5443:3;5436:4;5429:5;5425:16;5390:65;:::i;:::-;5480:6;5475:3;5471:16;5464:23;;5213:280;5103:390;;;;:::o;5499:275::-;5631:3;5653:95;5744:3;5735:6;5653:95;:::i;:::-;5646:102;;5765:3;5758:10;;5499:275;;;;:::o;5780:169::-;5864:11;5898:6;5893:3;5886:19;5938:4;5933:3;5929:14;5914:29;;5780:169;;;;:::o;5955:165::-;6095:17;6091:1;6083:6;6079:14;6072:41;5955:165;:::o;6126:366::-;6268:3;6289:67;6353:2;6348:3;6289:67;:::i;:::-;6282:74;;6365:93;6454:3;6365:93;:::i;:::-;6483:2;6478:3;6474:12;6467:19;;6126:366;;;:::o;6498:419::-;6664:4;6702:2;6691:9;6687:18;6679:26;;6751:9;6745:4;6741:20;6737:1;6726:9;6722:17;6715:47;6779:131;6905:4;6779:131;:::i;:::-;6771:139;;6498:419;;;:::o;6923:180::-;6971:77;6968:1;6961:88;7068:4;7065:1;7058:15;7092:4;7089:1;7082:15;7109:191;7149:3;7168:20;7186:1;7168:20;:::i;:::-;7163:25;;7202:20;7220:1;7202:20;:::i;:::-;7197:25;;7245:1;7242;7238:9;7231:16;;7266:3;7263:1;7260:10;7257:36;;;7273:18;;:::i;:::-;7257:36;7109:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "437000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getVotes(string)": "infinite",
								"owner()": "2536",
								"renounceOwnership()": "infinite",
								"resetVotes(string)": "infinite",
								"transferOwnership(address)": "infinite",
								"vote(string)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 407,
									"end": 1206,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 407,
									"end": 1206,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 407,
									"end": 1206,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 572,
									"end": 608,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 572,
									"end": 608,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 572,
									"end": 608,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 572,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 572,
									"end": 608,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 572,
									"end": 608,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 572,
									"end": 608,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 572,
									"end": 608,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 572,
									"end": 608,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 572,
									"end": 608,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 572,
									"end": 608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 604,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 407,
									"end": 1206,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 407,
									"end": 1206,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 407,
									"end": 1206,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 407,
									"end": 1206,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 407,
									"end": 1206,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 407,
									"end": 1206,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 407,
									"end": 1206,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 407,
									"end": 1206,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 407,
									"end": 1206,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 407,
									"end": 1206,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 407,
									"end": 1206,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c9431d44a8f8de0f3ebdb574483427d96f7631f94312c5703ef3c82c23bca30064736f6c634300081e0033",
									".code": [
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "805265E5"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "F3FA4226"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "FC36E15B"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 1206,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 713,
											"end": 826,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 713,
											"end": 826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 713,
											"end": 826,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 826,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 826,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 713,
											"end": 826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 713,
											"end": 826,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 713,
											"end": 826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 713,
											"end": 826,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 713,
											"end": 826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 713,
											"end": 826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 713,
											"end": 826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 713,
											"end": 826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 826,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 713,
											"end": 826,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 713,
											"end": 826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 713,
											"end": 826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 826,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 957,
											"end": 1203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 957,
											"end": 1203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 616,
											"end": 705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 616,
											"end": 705,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 705,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 705,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 616,
											"end": 705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 616,
											"end": 705,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 616,
											"end": 705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 616,
											"end": 705,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 616,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 616,
											"end": 705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 616,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 616,
											"end": 705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 713,
											"end": 826,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 713,
											"end": 826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 774,
											"end": 781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 812,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 813,
											"end": 817,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 801,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 818,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 801,
											"end": 818,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 801,
											"end": 818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 801,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 801,
											"end": 818,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 801,
											"end": 818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 801,
											"end": 818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 818,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 801,
											"end": 818,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 801,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 801,
											"end": 818,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 818,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 818,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 818,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 801,
											"end": 818,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 801,
											"end": 818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 818,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 801,
											"end": 818,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 794,
											"end": 818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 794,
											"end": 818,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 713,
											"end": 826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1042,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1050,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1052,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1024,
											"end": 1072,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1024,
											"end": 1072,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1083,
											"end": 1099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1114,
											"end": 1118,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1102,
											"end": 1119,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1119,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1083,
											"end": 1119,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1083,
											"end": 1119,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1148,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1149,
											"end": 1153,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1154,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1137,
											"end": 1154,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1137,
											"end": 1154,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1137,
											"end": 1154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1154,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1154,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1154,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1154,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1154,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1154,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1154,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1180,
											"end": 1184,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1170,
											"end": 1195,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2D6AFB89A283ACC39C9F4AD71725BF5D3B3A3C46032838E2AD76961F426B7371"
										},
										{
											"begin": 1186,
											"end": 1194,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1195,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1203,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 616,
											"end": 705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 692,
											"end": 693,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 682,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 683,
											"end": 687,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 671,
											"end": 688,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 671,
											"end": 688,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 671,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 671,
											"end": 688,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 671,
											"end": 688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 671,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 671,
											"end": 688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 671,
											"end": 688,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 671,
											"end": 688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 671,
											"end": 688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 671,
											"end": 688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 671,
											"end": 688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 671,
											"end": 688,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 671,
											"end": 688,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 671,
											"end": 688,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 671,
											"end": 688,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 671,
											"end": 688,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 671,
											"end": 688,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 671,
											"end": 688,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 671,
											"end": 688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 671,
											"end": 688,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 671,
											"end": 688,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 693,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 671,
											"end": 693,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 671,
											"end": 693,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 671,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 671,
											"end": 693,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 671,
											"end": 693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 671,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 671,
											"end": 693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 671,
											"end": 693,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 671,
											"end": 693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 671,
											"end": 693,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 671,
											"end": 693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 671,
											"end": 693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 671,
											"end": 693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 671,
											"end": 693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 671,
											"end": 693,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 671,
											"end": 693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 616,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 580,
											"end": 682,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 580,
											"end": 682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 621,
											"end": 627,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 674,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 668,
											"end": 675,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 663,
											"end": 665,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 648,
											"end": 676,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 638,
											"end": 676,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 638,
											"end": 676,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 580,
											"end": 682,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 580,
											"end": 682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 688,
											"end": 868,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 688,
											"end": 868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 736,
											"end": 813,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 733,
											"end": 734,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 814,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 833,
											"end": 837,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 823,
											"end": 838,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 862,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 979,
											"end": 983,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 957,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 957,
											"end": 984,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 957,
											"end": 984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 949,
											"end": 955,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 945,
											"end": 985,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1049,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1070,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1033,
											"end": 1095,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1098,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1149,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 1155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1222,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1251,
											"end": 1284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1466,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1446,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1470,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1530,
											"end": 1536,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1508,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1592,
											"end": 1596,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1590,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 1706,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1701,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1749,
											"end": 1750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1746,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1738,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1724,
											"end": 1751,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1847,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1925,
											"end": 1931,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1883,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1867,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1933,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1933,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1954,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1994,
											"end": 1998,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 1992,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 1999,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2035,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2023,
											"end": 2029,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2018,
											"end": 2021,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2030,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2036,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2039,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2171,
											"end": 2174,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2129,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 2189,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1764,
											"end": 2189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2265,
											"end": 2270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2317,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2307,
											"end": 2311,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2318,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2322,
											"end": 2401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2439,
											"end": 2445,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2446,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2539,
											"end": 2542,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2464,
											"end": 2543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2271,
											"end": 2549,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2209,
											"end": 2549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 2630,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2661,
											"end": 2670,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2671,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2644,
											"end": 2676,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2679,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2827,
											"end": 2828,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2825,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2812,
											"end": 2829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2830,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2857,
											"end": 2875,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2846,
											"end": 2876,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2879,
											"end": 2958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3039,
											"end": 3046,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3030,
											"end": 3036,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2984,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2974,
											"end": 3047,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2974,
											"end": 3047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2770,
											"end": 3057,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2555,
											"end": 3064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3147,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3070,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3107,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3141,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3147,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3147,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3147,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3153,
											"end": 3271,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3153,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3240,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3258,
											"end": 3263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3240,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3240,
											"end": 3264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3240,
											"end": 3264,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3240,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3238,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3265,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3153,
											"end": 3271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3153,
											"end": 3271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3153,
											"end": 3271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3277,
											"end": 3499,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3277,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3370,
											"end": 3374,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3410,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3397,
											"end": 3406,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3385,
											"end": 3411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3385,
											"end": 3411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3489,
											"end": 3490,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3478,
											"end": 3487,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3474,
											"end": 3491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3421,
											"end": 3492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3492,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3421,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3277,
											"end": 3499,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3277,
											"end": 3499,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3277,
											"end": 3499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3277,
											"end": 3499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3277,
											"end": 3499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3505,
											"end": 3631,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3505,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3549,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3624,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3575,
											"end": 3580,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3571,
											"end": 3625,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3625,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3625,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3505,
											"end": 3631,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3505,
											"end": 3631,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3505,
											"end": 3631,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3505,
											"end": 3631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3637,
											"end": 3733,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3637,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3674,
											"end": 3681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3703,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3721,
											"end": 3726,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3703,
											"end": 3727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3727,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3703,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3727,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3637,
											"end": 3733,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3637,
											"end": 3733,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3637,
											"end": 3733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3637,
											"end": 3733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3739,
											"end": 3857,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3739,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3826,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3844,
											"end": 3849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3826,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3826,
											"end": 3850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3826,
											"end": 3850,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3826,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3821,
											"end": 3824,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3739,
											"end": 3857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3739,
											"end": 3857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3739,
											"end": 3857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3863,
											"end": 4085,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3863,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3956,
											"end": 3960,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3983,
											"end": 3992,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 3997,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3971,
											"end": 3997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3971,
											"end": 3997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4007,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 4075,
											"end": 4076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4073,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4060,
											"end": 4077,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4051,
											"end": 4057,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4007,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4007,
											"end": 4078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4007,
											"end": 4078,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 4007,
											"end": 4078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3863,
											"end": 4085,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3863,
											"end": 4085,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3863,
											"end": 4085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3863,
											"end": 4085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3863,
											"end": 4085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4213,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4091,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4164,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4182,
											"end": 4187,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4164,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4164,
											"end": 4188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4164,
											"end": 4188,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4164,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4157,
											"end": 4162,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4154,
											"end": 4189,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4144,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4144,
											"end": 4207,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4203,
											"end": 4204,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4193,
											"end": 4205,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4144,
											"end": 4207,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4144,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4219,
											"end": 4358,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4219,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4265,
											"end": 4270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4310,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4281,
											"end": 4310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4281,
											"end": 4310,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4319,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 4346,
											"end": 4351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4319,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4319,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4319,
											"end": 4352,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 4319,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4219,
											"end": 4358,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4219,
											"end": 4358,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4219,
											"end": 4358,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4219,
											"end": 4358,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4219,
											"end": 4358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4693,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 4364,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4474,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4460,
											"end": 4469,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4458,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4470,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4443,
											"end": 4475,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4440,
											"end": 4559,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4440,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4440,
											"end": 4559,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4478,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4478,
											"end": 4557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4557,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4478,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4440,
											"end": 4559,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4440,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4598,
											"end": 4599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4668,
											"end": 4675,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4665,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4648,
											"end": 4657,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4644,
											"end": 4666,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4623,
											"end": 4676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4676,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4623,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4569,
											"end": 4686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4693,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4693,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4699,
											"end": 4798,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4699,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4751,
											"end": 4757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4785,
											"end": 4790,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4779,
											"end": 4791,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4699,
											"end": 4798,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4699,
											"end": 4798,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4699,
											"end": 4798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4699,
											"end": 4798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4804,
											"end": 4952,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4804,
											"end": 4952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4943,
											"end": 4946,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4928,
											"end": 4946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4928,
											"end": 4946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4804,
											"end": 4952,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4804,
											"end": 4952,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4804,
											"end": 4952,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4804,
											"end": 4952,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4804,
											"end": 4952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4958,
											"end": 5097,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4958,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5047,
											"end": 5053,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5042,
											"end": 5045,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5037,
											"end": 5040,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "MCOPY",
											"source": 3
										},
										{
											"begin": 5088,
											"end": 5089,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5079,
											"end": 5085,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5074,
											"end": 5077,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5070,
											"end": 5086,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5063,
											"end": 5090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4958,
											"end": 5097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4958,
											"end": 5097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4958,
											"end": 5097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4958,
											"end": 5097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5493,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5103,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5209,
											"end": 5212,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5270,
											"end": 5275,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 5237,
											"end": 5276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5237,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5292,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5374,
											"end": 5380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5369,
											"end": 5372,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5292,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 5292,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5292,
											"end": 5381,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5292,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5285,
											"end": 5381,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5285,
											"end": 5381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5390,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 5448,
											"end": 5454,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5443,
											"end": 5446,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5436,
											"end": 5440,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5429,
											"end": 5434,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5441,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5390,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5390,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5390,
											"end": 5455,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 5390,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5480,
											"end": 5486,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5478,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5471,
											"end": 5487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5464,
											"end": 5487,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5464,
											"end": 5487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5213,
											"end": 5493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5499,
											"end": 5774,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 5499,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5631,
											"end": 5634,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5653,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 5744,
											"end": 5747,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5741,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5653,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5653,
											"end": 5748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5653,
											"end": 5748,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 5653,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5646,
											"end": 5748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5646,
											"end": 5748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5765,
											"end": 5768,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5758,
											"end": 5768,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5758,
											"end": 5768,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5499,
											"end": 5774,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5499,
											"end": 5774,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5499,
											"end": 5774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5499,
											"end": 5774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5499,
											"end": 5774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5949,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 5780,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5864,
											"end": 5875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5893,
											"end": 5896,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5886,
											"end": 5905,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 5942,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5933,
											"end": 5936,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5929,
											"end": 5943,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5914,
											"end": 5943,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5914,
											"end": 5943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5949,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5949,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5955,
											"end": 6120,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 5955,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6095,
											"end": 6112,
											"name": "PUSH",
											"source": 3,
											"value": "4E616D65206D75737420696E7075740000000000000000000000000000000000"
										},
										{
											"begin": 6091,
											"end": 6092,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6083,
											"end": 6089,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6079,
											"end": 6093,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6072,
											"end": 6113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5955,
											"end": 6120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5955,
											"end": 6120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6126,
											"end": 6492,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 6126,
											"end": 6492,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6268,
											"end": 6271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6289,
											"end": 6356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 6353,
											"end": 6355,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 6348,
											"end": 6351,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6289,
											"end": 6356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 6289,
											"end": 6356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6289,
											"end": 6356,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 6289,
											"end": 6356,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6356,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6356,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6365,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 6454,
											"end": 6457,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6365,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 6365,
											"end": 6458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6365,
											"end": 6458,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 6365,
											"end": 6458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6483,
											"end": 6485,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6478,
											"end": 6481,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6474,
											"end": 6486,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6486,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6126,
											"end": 6492,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6126,
											"end": 6492,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6126,
											"end": 6492,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6126,
											"end": 6492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6498,
											"end": 6917,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6498,
											"end": 6917,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6664,
											"end": 6668,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6702,
											"end": 6704,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6691,
											"end": 6700,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6705,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6679,
											"end": 6705,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6679,
											"end": 6705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6751,
											"end": 6760,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6745,
											"end": 6749,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6741,
											"end": 6761,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6737,
											"end": 6738,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6726,
											"end": 6735,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6722,
											"end": 6739,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6715,
											"end": 6762,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 6905,
											"end": 6909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 6779,
											"end": 6910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6910,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 6779,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6771,
											"end": 6910,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6771,
											"end": 6910,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6498,
											"end": 6917,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6498,
											"end": 6917,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6498,
											"end": 6917,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6498,
											"end": 6917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6923,
											"end": 7103,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 6923,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6971,
											"end": 7048,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6968,
											"end": 6969,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6961,
											"end": 7049,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7068,
											"end": 7072,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 7065,
											"end": 7066,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7058,
											"end": 7073,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7089,
											"end": 7090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7082,
											"end": 7097,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7109,
											"end": 7300,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 7109,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7149,
											"end": 7152,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7168,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 7186,
											"end": 7187,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 7168,
											"end": 7188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7188,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 7168,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7188,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7188,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7202,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7220,
											"end": 7221,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7202,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 7202,
											"end": 7222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7202,
											"end": 7222,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7202,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7197,
											"end": 7222,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7197,
											"end": 7222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7245,
											"end": 7246,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7242,
											"end": 7243,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7238,
											"end": 7247,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7231,
											"end": 7247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7231,
											"end": 7247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7266,
											"end": 7269,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7263,
											"end": 7264,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7260,
											"end": 7270,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7293,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7257,
											"end": 7293,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7273,
											"end": 7291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 7273,
											"end": 7291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 7273,
											"end": 7291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7273,
											"end": 7291,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 7273,
											"end": 7291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7293,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7257,
											"end": 7293,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7109,
											"end": 7300,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7109,
											"end": 7300,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7109,
											"end": 7300,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7109,
											"end": 7300,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7109,
											"end": 7300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"basic/Voting.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getVotes(string)": "805265e5",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"resetVotes(string)": "f3fa4226",
							"transferOwnership(address)": "f2fde38b",
							"vote(string)": "fc36e15b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldCount\",\"type\":\"uint256\"}],\"name\":\"VoteReset\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"resetVotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"1.\\u521b\\u5efa\\u4e00\\u4e2a\\u540d\\u4e3aVoting\\u7684\\u5408\\u7ea6\\uff0c\\u5305\\u542b\\u4ee5\\u4e0b\\u529f\\u80fd\\uff1a \\u4e00\\u4e2amapping\\u6765\\u5b58\\u50a8\\u5019\\u9009\\u4eba\\u7684\\u5f97\\u7968\\u6570 \\u4e00\\u4e2avote\\u51fd\\u6570\\uff0c\\u5141\\u8bb8\\u7528\\u6237\\u6295\\u7968\\u7ed9\\u67d0\\u4e2a\\u5019\\u9009\\u4eba \\u4e00\\u4e2agetVotes\\u51fd\\u6570\\uff0c\\u8fd4\\u56de\\u67d0\\u4e2a\\u5019\\u9009\\u4eba\\u7684\\u5f97\\u7968\\u6570 \\u4e00\\u4e2aresetVotes\\u51fd\\u6570\\uff0c\\u91cd\\u7f6e\\u6240\\u6709\\u5019\\u9009\\u4eba\\u7684\\u5f97\\u7968\\u6570*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"basic/Voting.sol\":\"Voting\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"basic/Voting.sol\":{\"keccak256\":\"0xb753faa8e32d76754da28e796e838e01bcce11da46aeeb16dd9d9adde0cf9c0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://198162473734b48f8ead75e8259b70a19d80535c435a390034f63e002afaa442\",\"dweb:/ipfs/QmezpG4DuVBJahnL4o1NggARhx57uNHqkqLpoJFQDdQR9v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "basic/Voting.sol:Voting",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 193,
								"contract": "basic/Voting.sol:Voting",
								"label": "_voteCounts",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_string_memory_ptr,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_string_memory_ptr,t_uint256)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "1.创建一个名为Voting的合约，包含以下功能： 一个mapping来存储候选人的得票数 一个vote函数，允许用户投票给某个候选人 一个getVotes函数，返回某个候选人的得票数 一个resetVotes函数，重置所有候选人的得票数*",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"basic/Voting.sol": {
				"ast": {
					"absolutePath": "basic/Voting.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						],
						"Voting": [
							265
						]
					},
					"id": 266,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 266,
							"sourceUnit": 148,
							"src": "61:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 182,
										"name": "Ownable",
										"nameLocations": [
											"426:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "426:7:2"
									},
									"id": 183,
									"nodeType": "InheritanceSpecifier",
									"src": "426:7:2"
								}
							],
							"canonicalName": "Voting",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 181,
								"nodeType": "StructuredDocumentation",
								"src": "115:290:2",
								"text": "1.创建一个名为Voting的合约，包含以下功能：\n一个mapping来存储候选人的得票数\n一个vote函数，允许用户投票给某个候选人\n一个getVotes函数，返回某个候选人的得票数\n一个resetVotes函数，重置所有候选人的得票数*"
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265,
								147,
								177
							],
							"name": "Voting",
							"nameLocation": "416:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "2d6afb89a283acc39c9f4ad71725bf5d3b3a3c46032838e2ad76961f426b7371",
									"id": 189,
									"name": "VoteReset",
									"nameLocation": "446:9:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"indexed": true,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "471:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "456:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 184,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "456:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldCount",
												"nameLocation": "485:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "477:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "455:39:2"
									},
									"src": "440:55:2"
								},
								{
									"constant": false,
									"id": 193,
									"mutability": "mutable",
									"name": "_voteCounts",
									"nameLocation": "548:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 265,
									"src": "501:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
										"typeString": "mapping(string => uint256)"
									},
									"typeName": {
										"id": 192,
										"keyName": "name",
										"keyNameLocation": "516:4:2",
										"keyType": {
											"id": 190,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "509:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "501:38:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
											"typeString": "mapping(string => uint256)"
										},
										"valueName": "counts",
										"valueNameLocation": "532:6:2",
										"valueType": {
											"id": 191,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "524:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "606:2:2",
										"statements": []
									},
									"id": 201,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 196,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "594:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "598:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "594:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 198,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 195,
												"name": "Ownable",
												"nameLocations": [
													"586:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "586:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "586:19:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "583:2:2"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:0:2"
									},
									"scope": 265,
									"src": "572:36:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "660:45:2",
										"statements": [
											{
												"expression": {
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 206,
															"name": "_voteCounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "671:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																"typeString": "mapping(string memory => uint256)"
															}
														},
														"id": 208,
														"indexExpression": {
															"id": 207,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "683:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "671:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "692:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "671:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "671:22:2"
											}
										]
									},
									"functionSelector": "fc36e15b",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nameLocation": "625:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "644:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "630:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 202,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "630:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "629:20:2"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "660:0:2"
									},
									"scope": 265,
									"src": "616:89:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "783:43:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 220,
														"name": "_voteCounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "801:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
															"typeString": "mapping(string memory => uint256)"
														}
													},
													"id": 222,
													"indexExpression": {
														"id": 221,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "813:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "801:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 219,
												"id": 223,
												"nodeType": "Return",
												"src": "794:24:2"
											}
										]
									},
									"functionSelector": "805265e5",
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVotes",
									"nameLocation": "722:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "745:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "731:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 214,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "731:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:20:2"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "774:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:9:2"
									},
									"scope": 265,
									"src": "713:113:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "859:3:2",
										"statements": []
									},
									"id": 229,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "839:2:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "859:0:2"
									},
									"scope": 265,
									"src": "832:30:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "1013:190:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 239,
																			"name": "name",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 231,
																			"src": "1038:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1032:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 237,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "1032:5:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1032:11:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1044:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1032:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1051:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1032:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e616d65206d75737420696e707574",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1054:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f7f1ebd3a5710177ce09cf8ae86dba1b16661028bbf7b29523ad3c3175d0583d",
																"typeString": "literal_string \"Name must input\""
															},
															"value": "Name must input"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f7f1ebd3a5710177ce09cf8ae86dba1b16661028bbf7b29523ad3c3175d0583d",
																"typeString": "literal_string \"Name must input\""
															}
														],
														"id": 236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1024:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1024:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "1024:48:2"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "oldCount",
														"nameLocation": "1091:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "1083:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 247,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1083:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 252,
												"initialValue": {
													"baseExpression": {
														"id": 249,
														"name": "_voteCounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "1102:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
															"typeString": "mapping(string memory => uint256)"
														}
													},
													"id": 251,
													"indexExpression": {
														"id": 250,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "1114:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1102:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1083:36:2"
											},
											{
												"expression": {
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1130:24:2",
													"subExpression": {
														"baseExpression": {
															"id": 253,
															"name": "_voteCounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "1137:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																"typeString": "mapping(string memory => uint256)"
															}
														},
														"id": 255,
														"indexExpression": {
															"id": 254,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "1149:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1137:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "1130:24:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 259,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "1180:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 260,
															"name": "oldCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "1186:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 258,
														"name": "VoteReset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "1170:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1170:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 262,
												"nodeType": "EmitStatement",
												"src": "1165:30:2"
											}
										]
									},
									"functionSelector": "f3fa4226",
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 234,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 233,
												"name": "onlyOwner",
												"nameLocations": [
													"1004:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1004:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1004:9:2"
										}
									],
									"name": "resetVotes",
									"nameLocation": "966:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "991:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "977:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 230,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "977:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:20:2"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:0:2"
									},
									"scope": 265,
									"src": "957:246:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 266,
							"src": "407:799:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								189
							]
						}
					],
					"src": "33:1173:2"
				},
				"id": 2
			}
		}
	}
}