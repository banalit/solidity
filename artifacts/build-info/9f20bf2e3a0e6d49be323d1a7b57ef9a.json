{
	"id": "9f20bf2e3a0e6d49be323d1a7b57ef9a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"upgrade/MyErc20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ~0.8.0;\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n/**\r\n 作业 1：ERC20 代币\r\n任务：参考 openzeppelin-contracts/contracts/token/ERC20/IERC20.sol实现一个简单的 ERC20 代币合约。要求： \r\n1.合约包含以下标准 ERC20 功能：\r\n2.balanceOf：查询账户余额。\r\n3.transfer：转账。\r\n4.approve 和 transferFrom：授权和代扣转账。\r\n5.使用 event 记录转账和授权操作。\r\n6.提供 mint 函数，允许合约所有者增发代币。\r\n提示：\r\n 使用 mapping 存储账户余额和授权信息。\r\n使用 event 定义 Transfer 和 Approval 事件。\r\n部署到sepolia 测试网，导入到自己的钱包\r\n */\r\ncontract MyERC20 is IERC20 {\r\n    // 代币名称\r\n    string public name = \"MIMILuke\";\r\n    // 代币符号\r\n    string public symbol = \"ML\";\r\n    // 小数位数\r\n    uint256 public decimals = 18;\r\n    // 总供应量\r\n    uint256 public totalSupply;\r\n\r\n    event Transfer(address indexed from, address to, uint256 value, uint256 indexed timestamp);\r\n    \r\n    event Approval(address indexed from, address to, uint256 value, uint256 indexed timestamp);\r\n    \r\n    // 账户余额映射\r\n    mapping(address account => uint256 value) private _balances;\r\n    // 授权映射: 所有者 => 被授权者 => 授权金额\r\n    mapping(address from=> mapping(address to => uint256 value)) private _allowances;\r\n    \r\n    // 合约所有者\r\n    address private _owner;\r\n\r\n    /**\r\n     * @dev 构造函数，初始化代币信息并设置所有者\r\n     */\r\n    constructor(string memory _name, string memory _symbol, uint256 initialSupply) {\r\n        name = _name;\r\n        symbol = _symbol;\r\n        _owner = msg.sender;\r\n        // 初始发行并分配给部署者\r\n        _mint(msg.sender, initialSupply * 10 **decimals);\r\n    }\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256) {\r\n          return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev 检查调用者是否为所有者\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == msg.sender, \" caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev 实现IERC20接口的balanceOf函数\r\n     * @return 账户的代币余额\r\n     */\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n          return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev 实现IERC20接口的transfer函数\r\n     * @return 操作是否成功\r\n     */\r\n     function transfer(address to, uint256 amount) public override returns (bool){\r\n          address from = msg.sender;\r\n          _transfer(from, to, amount);\r\n          return true;\r\n     }\r\n\r\n    /**\r\n     * @dev 实现IERC20接口的approve函数\r\n     * @return 操作是否成功\r\n     */\r\n     function approve(address spender, uint256 amount) public override returns (bool) {\r\n          address from = msg.sender;\r\n          _approve(from, spender, amount);\r\n          return true;\r\n     }\r\n\r\n    /**\r\n     * @dev 实现IERC20接口的transferFrom函数\r\n     * @return 操作是否成功\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public override returns (bool) {\r\n        address spender = msg.sender;\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev 内部转账逻辑\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal {\r\n        require(from != address(0), \" transfer from the zero address\");\r\n        require(to != address(0), \" transfer to the zero address\");\r\n        require(_balances[from] >= amount, \" insufficient balance\");\r\n\r\n        unchecked {\r\n            _balances[from] -= amount;\r\n            _balances[to] += amount;\r\n        }\r\n\r\n        emit Transfer(from, to, amount, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @dev 内部授权逻辑\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal {\r\n        require(owner != address(0), \" approve from the zero address\");\r\n        require(spender != address(0), \" approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @dev 消耗授权额度\r\n     */\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal {\r\n        uint256 currentAllowance = _allowances[owner][spender];\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \" allowance exceeded\");\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev 增发代币，仅所有者可调用\r\n     */\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        require(to != address(0), \" mint to the zero address\");\r\n        _mint(to, amount * 10** uint256(decimals));\r\n    }\r\n\r\n    /**\r\n     * @dev 内部增发逻辑\r\n     */\r\n    function _mint(address account, uint256 amount) internal {\r\n        require(account != address(0), \" mint to the zero address\");\r\n\r\n        totalSupply += amount;\r\n        unchecked {\r\n          _balances[account] += amount;\r\n        }\r\n        emit Transfer(address(0), account, amount, block.timestamp);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"upgrade/MyErc20.sol": {
				"MyERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "实现IERC20接口的approve函数",
								"returns": {
									"_0": "操作是否成功"
								}
							},
							"balanceOf(address)": {
								"details": "实现IERC20接口的balanceOf函数",
								"returns": {
									"_0": "账户的代币余额"
								}
							},
							"constructor": {
								"details": "构造函数，初始化代币信息并设置所有者"
							},
							"mint(address,uint256)": {
								"details": "增发代币，仅所有者可调用"
							},
							"transfer(address,uint256)": {
								"details": "实现IERC20接口的transfer函数",
								"returns": {
									"_0": "操作是否成功"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "实现IERC20接口的transferFrom函数",
								"returns": {
									"_0": "操作是否成功"
								}
							}
						},
						"stateVariables": {
							"totalSupply": {
								"details": "Returns the value of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"upgrade/MyErc20.sol\":832:5646  contract MyERC20 is IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"upgrade/MyErc20.sol\":887:918  string public name = \"MIMILuke\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x4d494d494c756b65000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x00\n  swap1\n  dup2\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"upgrade/MyErc20.sol\":946:973  string public symbol = \"ML\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  0x4d4c000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x01\n  swap1\n  dup2\n  tag_3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"upgrade/MyErc20.sol\":1027:1029  18 */\n  0x12\n    /* \"upgrade/MyErc20.sol\":1001:1029  uint256 public decimals = 18 */\n  0x02\n  sstore\n    /* \"upgrade/MyErc20.sol\":1689:1961  constructor(string memory _name, string memory _symbol, uint256 initialSupply) {... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  revert(0x00, 0x00)\ntag_4:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"upgrade/MyErc20.sol\":1786:1791  _name */\n  dup3\n    /* \"upgrade/MyErc20.sol\":1779:1783  name */\n  0x00\n    /* \"upgrade/MyErc20.sol\":1779:1791  name = _name */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_9:\n  pop\n    /* \"upgrade/MyErc20.sol\":1811:1818  _symbol */\n  dup2\n    /* \"upgrade/MyErc20.sol\":1802:1808  symbol */\n  0x01\n    /* \"upgrade/MyErc20.sol\":1802:1818  symbol = _symbol */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_10:\n  pop\n    /* \"upgrade/MyErc20.sol\":1838:1848  msg.sender */\n  caller\n    /* \"upgrade/MyErc20.sol\":1829:1835  _owner */\n  0x06\n  0x00\n    /* \"upgrade/MyErc20.sol\":1829:1848  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"upgrade/MyErc20.sol\":1905:1953  _mint(msg.sender, initialSupply * 10 **decimals) */\n  tag_11\n    /* \"upgrade/MyErc20.sol\":1911:1921  msg.sender */\n  caller\n    /* \"upgrade/MyErc20.sol\":1944:1952  decimals */\n  sload(0x02)\n    /* \"upgrade/MyErc20.sol\":1939:1941  10 */\n  0x0a\n    /* \"upgrade/MyErc20.sol\":1939:1952  10 **decimals */\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"upgrade/MyErc20.sol\":1923:1936  initialSupply */\n  dup4\n    /* \"upgrade/MyErc20.sol\":1923:1952  initialSupply * 10 **decimals */\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"upgrade/MyErc20.sol\":1905:1910  _mint */\n  shl(0x20, tag_16)\n    /* \"upgrade/MyErc20.sol\":1905:1953  _mint(msg.sender, initialSupply * 10 **decimals) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"upgrade/MyErc20.sol\":1689:1961  constructor(string memory _name, string memory _symbol, uint256 initialSupply) {... */\n  pop\n  pop\n  pop\n    /* \"upgrade/MyErc20.sol\":832:5646  contract MyERC20 is IERC20 {... */\n  jump(tag_17)\n    /* \"upgrade/MyErc20.sol\":5331:5643  function _mint(address account, uint256 amount) internal {... */\ntag_16:\n    /* \"upgrade/MyErc20.sol\":5426:5427  0 */\n  0x00\n    /* \"upgrade/MyErc20.sol\":5407:5428  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"upgrade/MyErc20.sol\":5407:5414  account */\n  dup3\n    /* \"upgrade/MyErc20.sol\":5407:5428  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"upgrade/MyErc20.sol\":5399:5458  require(account != address(0), \" mint to the zero address\") */\n  tag_19\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_20\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_19:\n    /* \"upgrade/MyErc20.sol\":5486:5492  amount */\n  dup1\n    /* \"upgrade/MyErc20.sol\":5471:5482  totalSupply */\n  0x03\n  0x00\n    /* \"upgrade/MyErc20.sol\":5471:5492  totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"upgrade/MyErc20.sol\":5548:5554  amount */\n  dup1\n    /* \"upgrade/MyErc20.sol\":5526:5535  _balances */\n  0x04\n    /* \"upgrade/MyErc20.sol\":5526:5544  _balances[account] */\n  0x00\n    /* \"upgrade/MyErc20.sol\":5536:5543  account */\n  dup5\n    /* \"upgrade/MyErc20.sol\":5526:5544  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"upgrade/MyErc20.sol\":5526:5554  _balances[account] += amount */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"upgrade/MyErc20.sol\":5619:5634  block.timestamp */\n  timestamp\n    /* \"upgrade/MyErc20.sol\":5598:5599  0 */\n  0x00\n    /* \"upgrade/MyErc20.sol\":5581:5635  Transfer(address(0), account, amount, block.timestamp) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc44\n    /* \"upgrade/MyErc20.sol\":5602:5609  account */\n  dup5\n    /* \"upgrade/MyErc20.sol\":5611:5617  amount */\n  dup5\n    /* \"upgrade/MyErc20.sol\":5581:5635  Transfer(address(0), account, amount, block.timestamp) */\n  mload(0x40)\n  tag_24\n  swap3\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"upgrade/MyErc20.sol\":5331:5643  function _mint(address account, uint256 amount) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_26:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_27:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_28:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_29:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_76\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_76:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_78\n  tag_28\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":714:798   */\ntag_77:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_30:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_31:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_32:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_33:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_83\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_32\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1429:1468   */\n  tag_84\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_32\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_34:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_35:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_36:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_88\n    /* \"#utility.yul\":1818:1852   */\n  tag_89\n    /* \"#utility.yul\":1827:1851   */\n  tag_90\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_34\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1818:1852   */\n  tag_35\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1800:1853   */\n  tag_34\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_37:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_38:\n    /* \"#utility.yul\":2056:2095   */\n  tag_93\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_36\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2117:2208   */\n  tag_94\n    /* \"#utility.yul\":2166:2207   */\n  tag_95\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_37\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_33\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_39:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2280:2288   */\n  swap1\n  pop\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_40:\n    /* \"#utility.yul\":2377:2409   */\n  tag_98\n  tag_39\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2418:2483   */\n  tag_99\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_38\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_41:\n    /* \"#utility.yul\":2555:2675   */\ntag_101:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_104\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_40\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_101)\ntag_103:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_42:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_107\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_30\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2906:2935   */\n  tag_108\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_31\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_109:\n    /* \"#utility.yul\":3133:3213   */\n  tag_110\n    /* \"#utility.yul\":3189:3211   */\n  tag_111\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_31\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_41\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_106:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_43:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_44:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_114\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_43\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_45:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_116\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_44\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_2:\n    /* \"#utility.yul\":3950:3987   */\n  tag_118\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_26\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_120\n  tag_27\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4038:4094   */\ntag_119:\n    /* \"#utility.yul\":4118:4156   */\n  tag_121\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_29\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4203:4270   */\n  tag_122\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_42\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_124\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_125:\n    /* \"#utility.yul\":5144:5211   */\n  tag_126\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_45\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_123)\n    /* \"#utility.yul\":4365:4983   */\ntag_124:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_127\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_30\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_128:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_128)\ntag_130:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_132\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_44\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_131:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_123:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5309   */\ntag_46:\n    /* \"#utility.yul\":5267:5273   */\n  0x00\n    /* \"#utility.yul\":5300:5302   */\n  0x40\n    /* \"#utility.yul\":5294:5303   */\n  mload\n    /* \"#utility.yul\":5284:5303   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5309   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5315:5432   */\ntag_47:\n    /* \"#utility.yul\":5424:5425   */\n  0x00\n    /* \"#utility.yul\":5421:5422   */\n  0x00\n    /* \"#utility.yul\":5414:5426   */\n  revert\n    /* \"#utility.yul\":5438:5555   */\ntag_48:\n    /* \"#utility.yul\":5547:5548   */\n  0x00\n    /* \"#utility.yul\":5544:5545   */\n  0x00\n    /* \"#utility.yul\":5537:5549   */\n  revert\n    /* \"#utility.yul\":5561:5678   */\ntag_49:\n    /* \"#utility.yul\":5670:5671   */\n  0x00\n    /* \"#utility.yul\":5667:5668   */\n  0x00\n    /* \"#utility.yul\":5660:5672   */\n  revert\n    /* \"#utility.yul\":5684:5801   */\ntag_50:\n    /* \"#utility.yul\":5793:5794   */\n  0x00\n    /* \"#utility.yul\":5790:5791   */\n  0x00\n    /* \"#utility.yul\":5783:5795   */\n  revert\n    /* \"#utility.yul\":5807:5909   */\ntag_51:\n    /* \"#utility.yul\":5848:5854   */\n  0x00\n    /* \"#utility.yul\":5899:5901   */\n  0x1f\n    /* \"#utility.yul\":5895:5902   */\n  not\n    /* \"#utility.yul\":5890:5892   */\n  0x1f\n    /* \"#utility.yul\":5883:5888   */\n  dup4\n    /* \"#utility.yul\":5879:5893   */\n  add\n    /* \"#utility.yul\":5875:5903   */\n  and\n    /* \"#utility.yul\":5865:5903   */\n  swap1\n  pop\n    /* \"#utility.yul\":5807:5909   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5915:6196   */\ntag_52:\n    /* \"#utility.yul\":5998:6025   */\n  tag_140\n    /* \"#utility.yul\":6020:6024   */\n  dup3\n    /* \"#utility.yul\":5998:6025   */\n  tag_51\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":5990:5996   */\n  dup2\n    /* \"#utility.yul\":5986:6026   */\n  add\n    /* \"#utility.yul\":6128:6134   */\n  dup2\n    /* \"#utility.yul\":6116:6126   */\n  dup2\n    /* \"#utility.yul\":6113:6135   */\n  lt\n    /* \"#utility.yul\":6092:6110   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6080:6090   */\n  dup3\n    /* \"#utility.yul\":6077:6111   */\n  gt\n    /* \"#utility.yul\":6074:6136   */\n  or\n    /* \"#utility.yul\":6071:6159   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":6139:6157   */\n  tag_142\n  tag_27\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6071:6159   */\ntag_141:\n    /* \"#utility.yul\":6179:6189   */\n  dup1\n    /* \"#utility.yul\":6175:6177   */\n  0x40\n    /* \"#utility.yul\":6168:6190   */\n  mstore\n    /* \"#utility.yul\":5958:6196   */\n  pop\n    /* \"#utility.yul\":5915:6196   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6202:6331   */\ntag_53:\n    /* \"#utility.yul\":6236:6242   */\n  0x00\n    /* \"#utility.yul\":6263:6283   */\n  tag_144\n  tag_46\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6253:6283   */\n  swap1\n  pop\n    /* \"#utility.yul\":6292:6325   */\n  tag_145\n    /* \"#utility.yul\":6320:6324   */\n  dup3\n    /* \"#utility.yul\":6312:6318   */\n  dup3\n    /* \"#utility.yul\":6292:6325   */\n  tag_52\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6202:6331   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6337:6645   */\ntag_54:\n    /* \"#utility.yul\":6399:6403   */\n  0x00\n    /* \"#utility.yul\":6489:6507   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6481:6487   */\n  dup3\n    /* \"#utility.yul\":6478:6508   */\n  gt\n    /* \"#utility.yul\":6475:6531   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":6511:6529   */\n  tag_148\n  tag_27\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":6475:6531   */\ntag_147:\n    /* \"#utility.yul\":6549:6578   */\n  tag_149\n    /* \"#utility.yul\":6571:6577   */\n  dup3\n    /* \"#utility.yul\":6549:6578   */\n  tag_51\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6541:6578   */\n  swap1\n  pop\n    /* \"#utility.yul\":6633:6637   */\n  0x20\n    /* \"#utility.yul\":6627:6631   */\n  dup2\n    /* \"#utility.yul\":6623:6638   */\n  add\n    /* \"#utility.yul\":6615:6638   */\n  swap1\n  pop\n    /* \"#utility.yul\":6337:6645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6651:6790   */\ntag_55:\n    /* \"#utility.yul\":6740:6746   */\n  dup3\n    /* \"#utility.yul\":6735:6738   */\n  dup2\n    /* \"#utility.yul\":6730:6733   */\n  dup4\n    /* \"#utility.yul\":6724:6747   */\n  mcopy\n    /* \"#utility.yul\":6781:6782   */\n  0x00\n    /* \"#utility.yul\":6772:6778   */\n  dup4\n    /* \"#utility.yul\":6767:6770   */\n  dup4\n    /* \"#utility.yul\":6763:6779   */\n  add\n    /* \"#utility.yul\":6756:6783   */\n  mstore\n    /* \"#utility.yul\":6651:6790   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6796:7230   */\ntag_56:\n    /* \"#utility.yul\":6885:6890   */\n  0x00\n    /* \"#utility.yul\":6910:6976   */\n  tag_152\n    /* \"#utility.yul\":6926:6975   */\n  tag_153\n    /* \"#utility.yul\":6968:6974   */\n  dup5\n    /* \"#utility.yul\":6926:6975   */\n  tag_54\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6910:6976   */\n  tag_53\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6901:6976   */\n  swap1\n  pop\n    /* \"#utility.yul\":6999:7005   */\n  dup3\n    /* \"#utility.yul\":6992:6997   */\n  dup2\n    /* \"#utility.yul\":6985:7006   */\n  mstore\n    /* \"#utility.yul\":7037:7041   */\n  0x20\n    /* \"#utility.yul\":7030:7035   */\n  dup2\n    /* \"#utility.yul\":7026:7042   */\n  add\n    /* \"#utility.yul\":7075:7078   */\n  dup5\n    /* \"#utility.yul\":7066:7072   */\n  dup5\n    /* \"#utility.yul\":7061:7064   */\n  dup5\n    /* \"#utility.yul\":7057:7073   */\n  add\n    /* \"#utility.yul\":7054:7079   */\n  gt\n    /* \"#utility.yul\":7051:7163   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":7082:7161   */\n  tag_155\n  tag_50\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":7051:7163   */\ntag_154:\n    /* \"#utility.yul\":7172:7224   */\n  tag_156\n    /* \"#utility.yul\":7217:7223   */\n  dup5\n    /* \"#utility.yul\":7212:7215   */\n  dup3\n    /* \"#utility.yul\":7207:7210   */\n  dup6\n    /* \"#utility.yul\":7172:7224   */\n  tag_55\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6891:7230   */\n  pop\n    /* \"#utility.yul\":6796:7230   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7250:7605   */\ntag_57:\n    /* \"#utility.yul\":7317:7322   */\n  0x00\n    /* \"#utility.yul\":7366:7369   */\n  dup3\n    /* \"#utility.yul\":7359:7363   */\n  0x1f\n    /* \"#utility.yul\":7351:7357   */\n  dup4\n    /* \"#utility.yul\":7347:7364   */\n  add\n    /* \"#utility.yul\":7343:7370   */\n  slt\n    /* \"#utility.yul\":7333:7455   */\n  tag_158\n  jumpi\n    /* \"#utility.yul\":7374:7453   */\n  tag_159\n  tag_49\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7333:7455   */\ntag_158:\n    /* \"#utility.yul\":7484:7490   */\n  dup2\n    /* \"#utility.yul\":7478:7491   */\n  mload\n    /* \"#utility.yul\":7509:7599   */\n  tag_160\n    /* \"#utility.yul\":7595:7598   */\n  dup5\n    /* \"#utility.yul\":7587:7593   */\n  dup3\n    /* \"#utility.yul\":7580:7584   */\n  0x20\n    /* \"#utility.yul\":7572:7578   */\n  dup7\n    /* \"#utility.yul\":7568:7585   */\n  add\n    /* \"#utility.yul\":7509:7599   */\n  tag_56\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7500:7599   */\n  swap2\n  pop\n    /* \"#utility.yul\":7323:7605   */\n  pop\n    /* \"#utility.yul\":7250:7605   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7611:7733   */\ntag_58:\n    /* \"#utility.yul\":7684:7708   */\n  tag_162\n    /* \"#utility.yul\":7702:7707   */\n  dup2\n    /* \"#utility.yul\":7684:7708   */\n  tag_34\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":7677:7682   */\n  dup2\n    /* \"#utility.yul\":7674:7709   */\n  eq\n    /* \"#utility.yul\":7664:7727   */\n  tag_163\n  jumpi\n    /* \"#utility.yul\":7723:7724   */\n  0x00\n    /* \"#utility.yul\":7720:7721   */\n  0x00\n    /* \"#utility.yul\":7713:7725   */\n  revert\n    /* \"#utility.yul\":7664:7727   */\ntag_163:\n    /* \"#utility.yul\":7611:7733   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7739:7882   */\ntag_59:\n    /* \"#utility.yul\":7796:7801   */\n  0x00\n    /* \"#utility.yul\":7827:7833   */\n  dup2\n    /* \"#utility.yul\":7821:7834   */\n  mload\n    /* \"#utility.yul\":7812:7834   */\n  swap1\n  pop\n    /* \"#utility.yul\":7843:7876   */\n  tag_165\n    /* \"#utility.yul\":7870:7875   */\n  dup2\n    /* \"#utility.yul\":7843:7876   */\n  tag_58\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7739:7882   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7888:8897   */\ntag_6:\n    /* \"#utility.yul\":7996:8002   */\n  0x00\n    /* \"#utility.yul\":8004:8010   */\n  0x00\n    /* \"#utility.yul\":8012:8018   */\n  0x00\n    /* \"#utility.yul\":8061:8063   */\n  0x60\n    /* \"#utility.yul\":8049:8058   */\n  dup5\n    /* \"#utility.yul\":8040:8047   */\n  dup7\n    /* \"#utility.yul\":8036:8059   */\n  sub\n    /* \"#utility.yul\":8032:8064   */\n  slt\n    /* \"#utility.yul\":8029:8148   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":8067:8146   */\n  tag_168\n  tag_47\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":8029:8148   */\ntag_167:\n    /* \"#utility.yul\":8208:8209   */\n  0x00\n    /* \"#utility.yul\":8197:8206   */\n  dup5\n    /* \"#utility.yul\":8193:8210   */\n  add\n    /* \"#utility.yul\":8187:8211   */\n  mload\n    /* \"#utility.yul\":8238:8256   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8230:8236   */\n  dup2\n    /* \"#utility.yul\":8227:8257   */\n  gt\n    /* \"#utility.yul\":8224:8341   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":8260:8339   */\n  tag_170\n  tag_48\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":8224:8341   */\ntag_169:\n    /* \"#utility.yul\":8365:8439   */\n  tag_171\n    /* \"#utility.yul\":8431:8438   */\n  dup7\n    /* \"#utility.yul\":8422:8428   */\n  dup3\n    /* \"#utility.yul\":8411:8420   */\n  dup8\n    /* \"#utility.yul\":8407:8429   */\n  add\n    /* \"#utility.yul\":8365:8439   */\n  tag_57\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8355:8439   */\n  swap4\n  pop\n    /* \"#utility.yul\":8158:8449   */\n  pop\n    /* \"#utility.yul\":8509:8511   */\n  0x20\n    /* \"#utility.yul\":8498:8507   */\n  dup5\n    /* \"#utility.yul\":8494:8512   */\n  add\n    /* \"#utility.yul\":8488:8513   */\n  mload\n    /* \"#utility.yul\":8540:8558   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8532:8538   */\n  dup2\n    /* \"#utility.yul\":8529:8559   */\n  gt\n    /* \"#utility.yul\":8526:8643   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":8562:8641   */\n  tag_173\n  tag_48\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8526:8643   */\ntag_172:\n    /* \"#utility.yul\":8667:8741   */\n  tag_174\n    /* \"#utility.yul\":8733:8740   */\n  dup7\n    /* \"#utility.yul\":8724:8730   */\n  dup3\n    /* \"#utility.yul\":8713:8722   */\n  dup8\n    /* \"#utility.yul\":8709:8731   */\n  add\n    /* \"#utility.yul\":8667:8741   */\n  tag_57\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":8657:8741   */\n  swap3\n  pop\n    /* \"#utility.yul\":8459:8751   */\n  pop\n    /* \"#utility.yul\":8790:8792   */\n  0x40\n    /* \"#utility.yul\":8816:8880   */\n  tag_175\n    /* \"#utility.yul\":8872:8879   */\n  dup7\n    /* \"#utility.yul\":8863:8869   */\n  dup3\n    /* \"#utility.yul\":8852:8861   */\n  dup8\n    /* \"#utility.yul\":8848:8870   */\n  add\n    /* \"#utility.yul\":8816:8880   */\n  tag_59\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":8806:8880   */\n  swap2\n  pop\n    /* \"#utility.yul\":8761:8890   */\n  pop\n    /* \"#utility.yul\":7888:8897   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":8903:9083   */\ntag_60:\n    /* \"#utility.yul\":8951:9028   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":8948:8949   */\n  0x00\n    /* \"#utility.yul\":8941:9029   */\n  mstore\n    /* \"#utility.yul\":9048:9052   */\n  0x11\n    /* \"#utility.yul\":9045:9046   */\n  0x04\n    /* \"#utility.yul\":9038:9053   */\n  mstore\n    /* \"#utility.yul\":9072:9076   */\n  0x24\n    /* \"#utility.yul\":9069:9070   */\n  0x00\n    /* \"#utility.yul\":9062:9077   */\n  revert\n    /* \"#utility.yul\":9089:9191   */\ntag_61:\n    /* \"#utility.yul\":9131:9139   */\n  0x00\n    /* \"#utility.yul\":9178:9183   */\n  dup2\n    /* \"#utility.yul\":9175:9176   */\n  0x01\n    /* \"#utility.yul\":9171:9184   */\n  shr\n    /* \"#utility.yul\":9150:9184   */\n  swap1\n  pop\n    /* \"#utility.yul\":9089:9191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9197:10045   */\ntag_62:\n    /* \"#utility.yul\":9258:9263   */\n  0x00\n    /* \"#utility.yul\":9265:9269   */\n  0x00\n    /* \"#utility.yul\":9289:9295   */\n  dup3\n    /* \"#utility.yul\":9280:9295   */\n  swap2\n  pop\n    /* \"#utility.yul\":9313:9318   */\n  dup4\n    /* \"#utility.yul\":9304:9318   */\n  swap1\n  pop\n    /* \"#utility.yul\":9327:10039   */\ntag_179:\n    /* \"#utility.yul\":9348:9349   */\n  0x01\n    /* \"#utility.yul\":9338:9346   */\n  dup6\n    /* \"#utility.yul\":9335:9350   */\n  gt\n    /* \"#utility.yul\":9327:10039   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":9443:9447   */\n  dup1\n    /* \"#utility.yul\":9438:9441   */\n  dup7\n    /* \"#utility.yul\":9434:9448   */\n  div\n    /* \"#utility.yul\":9428:9432   */\n  dup2\n    /* \"#utility.yul\":9425:9449   */\n  gt\n    /* \"#utility.yul\":9422:9472   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":9452:9470   */\n  tag_183\n  tag_60\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":9422:9472   */\ntag_182:\n    /* \"#utility.yul\":9502:9503   */\n  0x01\n    /* \"#utility.yul\":9492:9500   */\n  dup6\n    /* \"#utility.yul\":9488:9504   */\n  and\n    /* \"#utility.yul\":9485:9936   */\n  iszero\n  tag_184\n  jumpi\n    /* \"#utility.yul\":9917:9921   */\n  dup1\n    /* \"#utility.yul\":9910:9915   */\n  dup3\n    /* \"#utility.yul\":9906:9922   */\n  mul\n    /* \"#utility.yul\":9897:9922   */\n  swap2\n  pop\n    /* \"#utility.yul\":9485:9936   */\ntag_184:\n    /* \"#utility.yul\":9967:9971   */\n  dup1\n    /* \"#utility.yul\":9961:9965   */\n  dup2\n    /* \"#utility.yul\":9957:9972   */\n  mul\n    /* \"#utility.yul\":9949:9972   */\n  swap1\n  pop\n    /* \"#utility.yul\":9997:10029   */\n  tag_185\n    /* \"#utility.yul\":10020:10028   */\n  dup6\n    /* \"#utility.yul\":9997:10029   */\n  tag_61\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":9985:10029   */\n  swap5\n  pop\n    /* \"#utility.yul\":9327:10039   */\n  jump(tag_179)\ntag_181:\n    /* \"#utility.yul\":9197:10045   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10051:11124   */\ntag_63:\n    /* \"#utility.yul\":10105:10110   */\n  0x00\n    /* \"#utility.yul\":10296:10304   */\n  dup3\n    /* \"#utility.yul\":10286:10326   */\n  tag_187\n  jumpi\n    /* \"#utility.yul\":10317:10318   */\n  0x01\n    /* \"#utility.yul\":10308:10318   */\n  swap1\n  pop\n    /* \"#utility.yul\":10319:10324   */\n  jump(tag_186)\n    /* \"#utility.yul\":10286:10326   */\ntag_187:\n    /* \"#utility.yul\":10345:10349   */\n  dup2\n    /* \"#utility.yul\":10335:10371   */\n  tag_188\n  jumpi\n    /* \"#utility.yul\":10362:10363   */\n  0x00\n    /* \"#utility.yul\":10353:10363   */\n  swap1\n  pop\n    /* \"#utility.yul\":10364:10369   */\n  jump(tag_186)\n    /* \"#utility.yul\":10335:10371   */\ntag_188:\n    /* \"#utility.yul\":10431:10435   */\n  dup2\n    /* \"#utility.yul\":10479:10480   */\n  0x01\n    /* \"#utility.yul\":10474:10501   */\n  dup2\n  eq\n  tag_190\n  jumpi\n    /* \"#utility.yul\":10515:10516   */\n  0x02\n    /* \"#utility.yul\":10510:10701   */\n  dup2\n  eq\n  tag_191\n  jumpi\n    /* \"#utility.yul\":10424:10701   */\n  jump(tag_189)\n    /* \"#utility.yul\":10474:10501   */\ntag_190:\n    /* \"#utility.yul\":10492:10493   */\n  0x01\n    /* \"#utility.yul\":10483:10493   */\n  swap2\n  pop\n    /* \"#utility.yul\":10494:10499   */\n  pop\n  jump(tag_186)\n    /* \"#utility.yul\":10510:10701   */\ntag_191:\n    /* \"#utility.yul\":10555:10558   */\n  0xff\n    /* \"#utility.yul\":10545:10553   */\n  dup5\n    /* \"#utility.yul\":10542:10559   */\n  gt\n    /* \"#utility.yul\":10539:10582   */\n  iszero\n  tag_192\n  jumpi\n    /* \"#utility.yul\":10562:10580   */\n  tag_193\n  tag_60\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":10539:10582   */\ntag_192:\n    /* \"#utility.yul\":10611:10619   */\n  dup4\n    /* \"#utility.yul\":10608:10609   */\n  0x02\n    /* \"#utility.yul\":10604:10620   */\n  exp\n    /* \"#utility.yul\":10595:10620   */\n  swap2\n  pop\n    /* \"#utility.yul\":10646:10649   */\n  dup5\n    /* \"#utility.yul\":10639:10644   */\n  dup3\n    /* \"#utility.yul\":10636:10650   */\n  gt\n    /* \"#utility.yul\":10633:10673   */\n  iszero\n  tag_194\n  jumpi\n    /* \"#utility.yul\":10653:10671   */\n  tag_195\n  tag_60\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":10633:10673   */\ntag_194:\n    /* \"#utility.yul\":10686:10691   */\n  pop\n  jump(tag_186)\n    /* \"#utility.yul\":10424:10701   */\ntag_189:\n  pop\n    /* \"#utility.yul\":10810:10812   */\n  0x20\n    /* \"#utility.yul\":10800:10808   */\n  dup4\n    /* \"#utility.yul\":10797:10813   */\n  lt\n    /* \"#utility.yul\":10791:10794   */\n  0x0133\n    /* \"#utility.yul\":10785:10789   */\n  dup4\n    /* \"#utility.yul\":10782:10795   */\n  lt\n    /* \"#utility.yul\":10778:10814   */\n  and\n    /* \"#utility.yul\":10760:10762   */\n  0x4e\n    /* \"#utility.yul\":10750:10758   */\n  dup5\n    /* \"#utility.yul\":10747:10763   */\n  lt\n    /* \"#utility.yul\":10742:10744   */\n  0x0b\n    /* \"#utility.yul\":10736:10740   */\n  dup5\n    /* \"#utility.yul\":10733:10745   */\n  lt\n    /* \"#utility.yul\":10729:10764   */\n  and\n    /* \"#utility.yul\":10713:10824   */\n  or\n    /* \"#utility.yul\":10710:10956   */\n  iszero\n  tag_196\n  jumpi\n    /* \"#utility.yul\":10866:10874   */\n  dup3\n    /* \"#utility.yul\":10860:10864   */\n  dup3\n    /* \"#utility.yul\":10856:10875   */\n  exp\n    /* \"#utility.yul\":10847:10875   */\n  swap1\n  pop\n    /* \"#utility.yul\":10901:10904   */\n  dup4\n    /* \"#utility.yul\":10894:10899   */\n  dup2\n    /* \"#utility.yul\":10891:10905   */\n  gt\n    /* \"#utility.yul\":10888:10928   */\n  iszero\n  tag_197\n  jumpi\n    /* \"#utility.yul\":10908:10926   */\n  tag_198\n  tag_60\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":10888:10928   */\ntag_197:\n    /* \"#utility.yul\":10941:10946   */\n  jump(tag_186)\n    /* \"#utility.yul\":10710:10956   */\ntag_196:\n    /* \"#utility.yul\":10981:11023   */\n  tag_199\n    /* \"#utility.yul\":11019:11022   */\n  dup5\n    /* \"#utility.yul\":11009:11017   */\n  dup5\n    /* \"#utility.yul\":11003:11007   */\n  dup5\n    /* \"#utility.yul\":11000:11001   */\n  0x01\n    /* \"#utility.yul\":10981:11023   */\n  tag_62\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":10966:11023   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":11055:11059   */\n  dup2\n    /* \"#utility.yul\":11050:11053   */\n  dup5\n    /* \"#utility.yul\":11046:11060   */\n  div\n    /* \"#utility.yul\":11039:11044   */\n  dup2\n    /* \"#utility.yul\":11036:11061   */\n  gt\n    /* \"#utility.yul\":11033:11084   */\n  iszero\n  tag_200\n  jumpi\n    /* \"#utility.yul\":11064:11082   */\n  tag_201\n  tag_60\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":11033:11084   */\ntag_200:\n    /* \"#utility.yul\":11113:11117   */\n  dup2\n    /* \"#utility.yul\":11106:11111   */\n  dup2\n    /* \"#utility.yul\":11102:11118   */\n  mul\n    /* \"#utility.yul\":11093:11118   */\n  swap1\n  pop\n    /* \"#utility.yul\":10051:11124   */\ntag_186:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11130:11415   */\ntag_13:\n    /* \"#utility.yul\":11190:11195   */\n  0x00\n    /* \"#utility.yul\":11214:11237   */\n  tag_203\n    /* \"#utility.yul\":11232:11236   */\n  dup3\n    /* \"#utility.yul\":11214:11237   */\n  tag_34\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":11206:11237   */\n  swap2\n  pop\n    /* \"#utility.yul\":11258:11285   */\n  tag_204\n    /* \"#utility.yul\":11276:11284   */\n  dup4\n    /* \"#utility.yul\":11258:11285   */\n  tag_34\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":11246:11285   */\n  swap3\n  pop\n    /* \"#utility.yul\":11304:11408   */\n  tag_205\n    /* \"#utility.yul\":11341:11407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":11331:11339   */\n  dup5\n    /* \"#utility.yul\":11325:11329   */\n  dup5\n    /* \"#utility.yul\":11304:11408   */\n  tag_63\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":11295:11408   */\n  swap1\n  pop\n    /* \"#utility.yul\":11130:11415   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11421:11831   */\ntag_15:\n    /* \"#utility.yul\":11461:11468   */\n  0x00\n    /* \"#utility.yul\":11484:11504   */\n  tag_207\n    /* \"#utility.yul\":11502:11503   */\n  dup3\n    /* \"#utility.yul\":11484:11504   */\n  tag_34\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":11479:11504   */\n  swap2\n  pop\n    /* \"#utility.yul\":11518:11538   */\n  tag_208\n    /* \"#utility.yul\":11536:11537   */\n  dup4\n    /* \"#utility.yul\":11518:11538   */\n  tag_34\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":11513:11538   */\n  swap3\n  pop\n    /* \"#utility.yul\":11573:11574   */\n  dup3\n    /* \"#utility.yul\":11570:11571   */\n  dup3\n    /* \"#utility.yul\":11566:11575   */\n  mul\n    /* \"#utility.yul\":11595:11625   */\n  tag_209\n    /* \"#utility.yul\":11613:11624   */\n  dup2\n    /* \"#utility.yul\":11595:11625   */\n  tag_34\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":11584:11625   */\n  swap2\n  pop\n    /* \"#utility.yul\":11774:11775   */\n  dup3\n    /* \"#utility.yul\":11765:11772   */\n  dup3\n    /* \"#utility.yul\":11761:11776   */\n  div\n    /* \"#utility.yul\":11758:11759   */\n  dup5\n    /* \"#utility.yul\":11755:11777   */\n  eq\n    /* \"#utility.yul\":11735:11736   */\n  dup4\n    /* \"#utility.yul\":11728:11737   */\n  iszero\n    /* \"#utility.yul\":11708:11791   */\n  or\n    /* \"#utility.yul\":11685:11824   */\n  tag_210\n  jumpi\n    /* \"#utility.yul\":11804:11822   */\n  tag_211\n  tag_60\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":11685:11824   */\ntag_210:\n    /* \"#utility.yul\":11469:11831   */\n  pop\n    /* \"#utility.yul\":11421:11831   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11837:12006   */\ntag_64:\n    /* \"#utility.yul\":11921:11932   */\n  0x00\n    /* \"#utility.yul\":11955:11961   */\n  dup3\n    /* \"#utility.yul\":11950:11953   */\n  dup3\n    /* \"#utility.yul\":11943:11962   */\n  mstore\n    /* \"#utility.yul\":11995:11999   */\n  0x20\n    /* \"#utility.yul\":11990:11993   */\n  dup3\n    /* \"#utility.yul\":11986:12000   */\n  add\n    /* \"#utility.yul\":11971:12000   */\n  swap1\n  pop\n    /* \"#utility.yul\":11837:12006   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12012:12187   */\ntag_65:\n    /* \"#utility.yul\":12152:12179   */\n  0x206d696e7420746f20746865207a65726f206164647265737300000000000000\n    /* \"#utility.yul\":12148:12149   */\n  0x00\n    /* \"#utility.yul\":12140:12146   */\n  dup3\n    /* \"#utility.yul\":12136:12150   */\n  add\n    /* \"#utility.yul\":12129:12180   */\n  mstore\n    /* \"#utility.yul\":12012:12187   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12193:12559   */\ntag_66:\n    /* \"#utility.yul\":12335:12338   */\n  0x00\n    /* \"#utility.yul\":12356:12423   */\n  tag_215\n    /* \"#utility.yul\":12420:12422   */\n  0x19\n    /* \"#utility.yul\":12415:12418   */\n  dup4\n    /* \"#utility.yul\":12356:12423   */\n  tag_64\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":12349:12423   */\n  swap2\n  pop\n    /* \"#utility.yul\":12432:12525   */\n  tag_216\n    /* \"#utility.yul\":12521:12524   */\n  dup3\n    /* \"#utility.yul\":12432:12525   */\n  tag_65\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":12550:12552   */\n  0x20\n    /* \"#utility.yul\":12545:12548   */\n  dup3\n    /* \"#utility.yul\":12541:12553   */\n  add\n    /* \"#utility.yul\":12534:12553   */\n  swap1\n  pop\n    /* \"#utility.yul\":12193:12559   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12565:12984   */\ntag_21:\n    /* \"#utility.yul\":12731:12735   */\n  0x00\n    /* \"#utility.yul\":12769:12771   */\n  0x20\n    /* \"#utility.yul\":12758:12767   */\n  dup3\n    /* \"#utility.yul\":12754:12772   */\n  add\n    /* \"#utility.yul\":12746:12772   */\n  swap1\n  pop\n    /* \"#utility.yul\":12818:12827   */\n  dup2\n    /* \"#utility.yul\":12812:12816   */\n  dup2\n    /* \"#utility.yul\":12808:12828   */\n  sub\n    /* \"#utility.yul\":12804:12805   */\n  0x00\n    /* \"#utility.yul\":12793:12802   */\n  dup4\n    /* \"#utility.yul\":12789:12806   */\n  add\n    /* \"#utility.yul\":12782:12829   */\n  mstore\n    /* \"#utility.yul\":12846:12977   */\n  tag_218\n    /* \"#utility.yul\":12972:12976   */\n  dup2\n    /* \"#utility.yul\":12846:12977   */\n  tag_66\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":12838:12977   */\n  swap1\n  pop\n    /* \"#utility.yul\":12565:12984   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12990:13181   */\ntag_23:\n    /* \"#utility.yul\":13030:13033   */\n  0x00\n    /* \"#utility.yul\":13049:13069   */\n  tag_220\n    /* \"#utility.yul\":13067:13068   */\n  dup3\n    /* \"#utility.yul\":13049:13069   */\n  tag_34\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":13044:13069   */\n  swap2\n  pop\n    /* \"#utility.yul\":13083:13103   */\n  tag_221\n    /* \"#utility.yul\":13101:13102   */\n  dup4\n    /* \"#utility.yul\":13083:13103   */\n  tag_34\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":13078:13103   */\n  swap3\n  pop\n    /* \"#utility.yul\":13126:13127   */\n  dup3\n    /* \"#utility.yul\":13123:13124   */\n  dup3\n    /* \"#utility.yul\":13119:13128   */\n  add\n    /* \"#utility.yul\":13112:13128   */\n  swap1\n  pop\n    /* \"#utility.yul\":13147:13150   */\n  dup1\n    /* \"#utility.yul\":13144:13145   */\n  dup3\n    /* \"#utility.yul\":13141:13151   */\n  gt\n    /* \"#utility.yul\":13138:13174   */\n  iszero\n  tag_222\n  jumpi\n    /* \"#utility.yul\":13154:13172   */\n  tag_223\n  tag_60\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":13138:13174   */\ntag_222:\n    /* \"#utility.yul\":12990:13181   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13187:13313   */\ntag_67:\n    /* \"#utility.yul\":13224:13231   */\n  0x00\n    /* \"#utility.yul\":13264:13306   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":13257:13262   */\n  dup3\n    /* \"#utility.yul\":13253:13307   */\n  and\n    /* \"#utility.yul\":13242:13307   */\n  swap1\n  pop\n    /* \"#utility.yul\":13187:13313   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13319:13415   */\ntag_68:\n    /* \"#utility.yul\":13356:13363   */\n  0x00\n    /* \"#utility.yul\":13385:13409   */\n  tag_226\n    /* \"#utility.yul\":13403:13408   */\n  dup3\n    /* \"#utility.yul\":13385:13409   */\n  tag_67\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":13374:13409   */\n  swap1\n  pop\n    /* \"#utility.yul\":13319:13415   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13421:13539   */\ntag_69:\n    /* \"#utility.yul\":13508:13532   */\n  tag_228\n    /* \"#utility.yul\":13526:13531   */\n  dup2\n    /* \"#utility.yul\":13508:13532   */\n  tag_68\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":13503:13506   */\n  dup3\n    /* \"#utility.yul\":13496:13533   */\n  mstore\n    /* \"#utility.yul\":13421:13539   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13545:13663   */\ntag_70:\n    /* \"#utility.yul\":13632:13656   */\n  tag_230\n    /* \"#utility.yul\":13650:13655   */\n  dup2\n    /* \"#utility.yul\":13632:13656   */\n  tag_34\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":13627:13630   */\n  dup3\n    /* \"#utility.yul\":13620:13657   */\n  mstore\n    /* \"#utility.yul\":13545:13663   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13669:14001   */\ntag_25:\n    /* \"#utility.yul\":13790:13794   */\n  0x00\n    /* \"#utility.yul\":13828:13830   */\n  0x40\n    /* \"#utility.yul\":13817:13826   */\n  dup3\n    /* \"#utility.yul\":13813:13831   */\n  add\n    /* \"#utility.yul\":13805:13831   */\n  swap1\n  pop\n    /* \"#utility.yul\":13841:13912   */\n  tag_232\n    /* \"#utility.yul\":13909:13910   */\n  0x00\n    /* \"#utility.yul\":13898:13907   */\n  dup4\n    /* \"#utility.yul\":13894:13911   */\n  add\n    /* \"#utility.yul\":13885:13891   */\n  dup6\n    /* \"#utility.yul\":13841:13912   */\n  tag_69\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":13922:13994   */\n  tag_233\n    /* \"#utility.yul\":13990:13992   */\n  0x20\n    /* \"#utility.yul\":13979:13988   */\n  dup4\n    /* \"#utility.yul\":13975:13993   */\n  add\n    /* \"#utility.yul\":13966:13972   */\n  dup5\n    /* \"#utility.yul\":13922:13994   */\n  tag_70\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":13669:14001   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"upgrade/MyErc20.sol\":832:5646  contract MyERC20 is IERC20 {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"upgrade/MyErc20.sol\":832:5646  contract MyERC20 is IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"upgrade/MyErc20.sol\":887:918  string public name = \"MIMILuke\" */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"upgrade/MyErc20.sol\":2932:3128  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"upgrade/MyErc20.sol\":1057:1083  uint256 public totalSupply */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"upgrade/MyErc20.sol\":3242:3527  function transferFrom(... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"upgrade/MyErc20.sol\":1001:1029  uint256 public decimals = 18 */\n    tag_7:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"upgrade/MyErc20.sol\":5088:5273  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      stop\n        /* \"upgrade/MyErc20.sol\":2403:2524  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_9:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"upgrade/MyErc20.sol\":946:973  string public symbol = \"ML\" */\n    tag_10:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"upgrade/MyErc20.sol\":2635:2822  function transfer(address to, uint256 amount) public override returns (bool){... */\n    tag_11:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"upgrade/MyErc20.sol\":1969:2107  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_12:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"upgrade/MyErc20.sol\":887:918  string public name = \"MIMILuke\" */\n    tag_15:\n      0x00\n      dup1\n      sload\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_58\n      swap1\n      tag_57\n      jump\t// in\n    tag_58:\n      dup1\n      iszero\n      tag_59\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_60\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_59)\n    tag_60:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_61:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_61\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"upgrade/MyErc20.sol\":2932:3128  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_21:\n        /* \"upgrade/MyErc20.sol\":3007:3011  bool */\n      0x00\n        /* \"upgrade/MyErc20.sol\":3026:3038  address from */\n      0x00\n        /* \"upgrade/MyErc20.sol\":3041:3051  msg.sender */\n      caller\n        /* \"upgrade/MyErc20.sol\":3026:3051  address from = msg.sender */\n      swap1\n      pop\n        /* \"upgrade/MyErc20.sol\":3064:3095  _approve(from, spender, amount) */\n      tag_63\n        /* \"upgrade/MyErc20.sol\":3073:3077  from */\n      dup2\n        /* \"upgrade/MyErc20.sol\":3079:3086  spender */\n      dup6\n        /* \"upgrade/MyErc20.sol\":3088:3094  amount */\n      dup6\n        /* \"upgrade/MyErc20.sol\":3064:3072  _approve */\n      tag_64\n        /* \"upgrade/MyErc20.sol\":3064:3095  _approve(from, spender, amount) */\n      jump\t// in\n    tag_63:\n        /* \"upgrade/MyErc20.sol\":3115:3119  true */\n      0x01\n        /* \"upgrade/MyErc20.sol\":3108:3119  return true */\n      swap2\n      pop\n      pop\n        /* \"upgrade/MyErc20.sol\":2932:3128  function approve(address spender, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"upgrade/MyErc20.sol\":1057:1083  uint256 public totalSupply */\n    tag_25:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"upgrade/MyErc20.sol\":3242:3527  function transferFrom(... */\n    tag_31:\n        /* \"upgrade/MyErc20.sol\":3365:3369  bool */\n      0x00\n        /* \"upgrade/MyErc20.sol\":3382:3397  address spender */\n      0x00\n        /* \"upgrade/MyErc20.sol\":3400:3410  msg.sender */\n      caller\n        /* \"upgrade/MyErc20.sol\":3382:3410  address spender = msg.sender */\n      swap1\n      pop\n        /* \"upgrade/MyErc20.sol\":3421:3459  _spendAllowance(from, spender, amount) */\n      tag_66\n        /* \"upgrade/MyErc20.sol\":3437:3441  from */\n      dup6\n        /* \"upgrade/MyErc20.sol\":3443:3450  spender */\n      dup3\n        /* \"upgrade/MyErc20.sol\":3452:3458  amount */\n      dup6\n        /* \"upgrade/MyErc20.sol\":3421:3436  _spendAllowance */\n      tag_67\n        /* \"upgrade/MyErc20.sol\":3421:3459  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_66:\n        /* \"upgrade/MyErc20.sol\":3470:3497  _transfer(from, to, amount) */\n      tag_68\n        /* \"upgrade/MyErc20.sol\":3480:3484  from */\n      dup6\n        /* \"upgrade/MyErc20.sol\":3486:3488  to */\n      dup6\n        /* \"upgrade/MyErc20.sol\":3490:3496  amount */\n      dup6\n        /* \"upgrade/MyErc20.sol\":3470:3479  _transfer */\n      tag_69\n        /* \"upgrade/MyErc20.sol\":3470:3497  _transfer(from, to, amount) */\n      jump\t// in\n    tag_68:\n        /* \"upgrade/MyErc20.sol\":3515:3519  true */\n      0x01\n        /* \"upgrade/MyErc20.sol\":3508:3519  return true */\n      swap2\n      pop\n      pop\n        /* \"upgrade/MyErc20.sol\":3242:3527  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"upgrade/MyErc20.sol\":1001:1029  uint256 public decimals = 18 */\n    tag_34:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"upgrade/MyErc20.sol\":5088:5273  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_38:\n        /* \"upgrade/MyErc20.sol\":2230:2240  msg.sender */\n      caller\n        /* \"upgrade/MyErc20.sol\":2220:2240  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgrade/MyErc20.sol\":2220:2226  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgrade/MyErc20.sol\":2220:2240  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"upgrade/MyErc20.sol\":2212:2269  require(_owner == msg.sender, \" caller is not the owner\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"upgrade/MyErc20.sol\":5180:5181  0 */\n      0x00\n        /* \"upgrade/MyErc20.sol\":5166:5182  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgrade/MyErc20.sol\":5166:5168  to */\n      dup3\n        /* \"upgrade/MyErc20.sol\":5166:5182  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"upgrade/MyErc20.sol\":5158:5212  require(to != address(0), \" mint to the zero address\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"upgrade/MyErc20.sol\":5223:5265  _mint(to, amount * 10** uint256(decimals)) */\n      tag_78\n        /* \"upgrade/MyErc20.sol\":5229:5231  to */\n      dup3\n        /* \"upgrade/MyErc20.sol\":5255:5263  decimals */\n      sload(0x02)\n        /* \"upgrade/MyErc20.sol\":5242:5244  10 */\n      0x0a\n        /* \"upgrade/MyErc20.sol\":5242:5264  10** uint256(decimals) */\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"upgrade/MyErc20.sol\":5233:5239  amount */\n      dup4\n        /* \"upgrade/MyErc20.sol\":5233:5264  amount * 10** uint256(decimals) */\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"upgrade/MyErc20.sol\":5223:5228  _mint */\n      tag_83\n        /* \"upgrade/MyErc20.sol\":5223:5265  _mint(to, amount * 10** uint256(decimals)) */\n      jump\t// in\n    tag_78:\n        /* \"upgrade/MyErc20.sol\":5088:5273  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"upgrade/MyErc20.sol\":2403:2524  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_42:\n        /* \"upgrade/MyErc20.sol\":2469:2476  uint256 */\n      0x00\n        /* \"upgrade/MyErc20.sol\":2498:2507  _balances */\n      0x04\n        /* \"upgrade/MyErc20.sol\":2498:2516  _balances[account] */\n      0x00\n        /* \"upgrade/MyErc20.sol\":2508:2515  account */\n      dup4\n        /* \"upgrade/MyErc20.sol\":2498:2516  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"upgrade/MyErc20.sol\":2491:2516  return _balances[account] */\n      swap1\n      pop\n        /* \"upgrade/MyErc20.sol\":2403:2524  function balanceOf(address account) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"upgrade/MyErc20.sol\":946:973  string public symbol = \"ML\" */\n    tag_45:\n      0x01\n      dup1\n      sload\n      tag_85\n      swap1\n      tag_57\n      jump\t// in\n    tag_85:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_57\n      jump\t// in\n    tag_86:\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_88\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_87)\n    tag_88:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_89:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_89\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"upgrade/MyErc20.sol\":2635:2822  function transfer(address to, uint256 amount) public override returns (bool){... */\n    tag_49:\n        /* \"upgrade/MyErc20.sol\":2706:2710  bool */\n      0x00\n        /* \"upgrade/MyErc20.sol\":2724:2736  address from */\n      0x00\n        /* \"upgrade/MyErc20.sol\":2739:2749  msg.sender */\n      caller\n        /* \"upgrade/MyErc20.sol\":2724:2749  address from = msg.sender */\n      swap1\n      pop\n        /* \"upgrade/MyErc20.sol\":2762:2789  _transfer(from, to, amount) */\n      tag_91\n        /* \"upgrade/MyErc20.sol\":2772:2776  from */\n      dup2\n        /* \"upgrade/MyErc20.sol\":2778:2780  to */\n      dup6\n        /* \"upgrade/MyErc20.sol\":2782:2788  amount */\n      dup6\n        /* \"upgrade/MyErc20.sol\":2762:2771  _transfer */\n      tag_69\n        /* \"upgrade/MyErc20.sol\":2762:2789  _transfer(from, to, amount) */\n      jump\t// in\n    tag_91:\n        /* \"upgrade/MyErc20.sol\":2809:2813  true */\n      0x01\n        /* \"upgrade/MyErc20.sol\":2802:2813  return true */\n      swap2\n      pop\n      pop\n        /* \"upgrade/MyErc20.sol\":2635:2822  function transfer(address to, uint256 amount) public override returns (bool){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"upgrade/MyErc20.sol\":1969:2107  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_54:\n        /* \"upgrade/MyErc20.sol\":2043:2050  uint256 */\n      0x00\n        /* \"upgrade/MyErc20.sol\":2072:2083  _allowances */\n      0x05\n        /* \"upgrade/MyErc20.sol\":2072:2090  _allowances[owner] */\n      0x00\n        /* \"upgrade/MyErc20.sol\":2084:2089  owner */\n      dup5\n        /* \"upgrade/MyErc20.sol\":2072:2090  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"upgrade/MyErc20.sol\":2072:2099  _allowances[owner][spender] */\n      0x00\n        /* \"upgrade/MyErc20.sol\":2091:2098  spender */\n      dup4\n        /* \"upgrade/MyErc20.sol\":2072:2099  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"upgrade/MyErc20.sol\":2065:2099  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"upgrade/MyErc20.sol\":1969:2107  function allowance(address owner, address spender) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"upgrade/MyErc20.sol\":4140:4517  function _approve(... */\n    tag_64:\n        /* \"upgrade/MyErc20.sol\":4285:4286  0 */\n      0x00\n        /* \"upgrade/MyErc20.sol\":4268:4287  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgrade/MyErc20.sol\":4268:4273  owner */\n      dup4\n        /* \"upgrade/MyErc20.sol\":4268:4287  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"upgrade/MyErc20.sol\":4260:4322  require(owner != address(0), \" approve from the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"upgrade/MyErc20.sol\":4360:4361  0 */\n      0x00\n        /* \"upgrade/MyErc20.sol\":4341:4362  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgrade/MyErc20.sol\":4341:4348  spender */\n      dup3\n        /* \"upgrade/MyErc20.sol\":4341:4362  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"upgrade/MyErc20.sol\":4333:4395  require(spender != address(0), \" approve to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"upgrade/MyErc20.sol\":4438:4444  amount */\n      dup1\n        /* \"upgrade/MyErc20.sol\":4408:4419  _allowances */\n      0x05\n        /* \"upgrade/MyErc20.sol\":4408:4426  _allowances[owner] */\n      0x00\n        /* \"upgrade/MyErc20.sol\":4420:4425  owner */\n      dup6\n        /* \"upgrade/MyErc20.sol\":4408:4426  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"upgrade/MyErc20.sol\":4408:4435  _allowances[owner][spender] */\n      0x00\n        /* \"upgrade/MyErc20.sol\":4427:4434  spender */\n      dup5\n        /* \"upgrade/MyErc20.sol\":4408:4435  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"upgrade/MyErc20.sol\":4408:4444  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"upgrade/MyErc20.sol\":4493:4508  block.timestamp */\n      timestamp\n        /* \"upgrade/MyErc20.sol\":4469:4474  owner */\n      dup4\n        /* \"upgrade/MyErc20.sol\":4460:4509  Approval(owner, spender, amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a7\n        /* \"upgrade/MyErc20.sol\":4476:4483  spender */\n      dup5\n        /* \"upgrade/MyErc20.sol\":4485:4491  amount */\n      dup5\n        /* \"upgrade/MyErc20.sol\":4460:4509  Approval(owner, spender, amount, block.timestamp) */\n      mload(0x40)\n      tag_100\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"upgrade/MyErc20.sol\":4140:4517  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"upgrade/MyErc20.sol\":4575:5012  function _spendAllowance(... */\n    tag_67:\n        /* \"upgrade/MyErc20.sol\":4702:4726  uint256 currentAllowance */\n      0x00\n        /* \"upgrade/MyErc20.sol\":4729:4740  _allowances */\n      0x05\n        /* \"upgrade/MyErc20.sol\":4729:4747  _allowances[owner] */\n      0x00\n        /* \"upgrade/MyErc20.sol\":4741:4746  owner */\n      dup6\n        /* \"upgrade/MyErc20.sol\":4729:4747  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"upgrade/MyErc20.sol\":4729:4756  _allowances[owner][spender] */\n      0x00\n        /* \"upgrade/MyErc20.sol\":4748:4755  spender */\n      dup5\n        /* \"upgrade/MyErc20.sol\":4729:4756  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"upgrade/MyErc20.sol\":4702:4756  uint256 currentAllowance = _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"upgrade/MyErc20.sol\":4791:4808  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"upgrade/MyErc20.sol\":4771:4787  currentAllowance */\n      dup2\n        /* \"upgrade/MyErc20.sol\":4771:4808  currentAllowance != type(uint256).max */\n      eq\n        /* \"upgrade/MyErc20.sol\":4767:5005  if (currentAllowance != type(uint256).max) {... */\n      tag_103\n      jumpi\n        /* \"upgrade/MyErc20.sol\":4853:4859  amount */\n      dup2\n        /* \"upgrade/MyErc20.sol\":4833:4849  currentAllowance */\n      dup2\n        /* \"upgrade/MyErc20.sol\":4833:4859  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"upgrade/MyErc20.sol\":4825:4883  require(currentAllowance >= amount, \" allowance exceeded\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"upgrade/MyErc20.sol\":4927:4978  _approve(owner, spender, currentAllowance - amount) */\n      tag_107\n        /* \"upgrade/MyErc20.sol\":4936:4941  owner */\n      dup5\n        /* \"upgrade/MyErc20.sol\":4943:4950  spender */\n      dup5\n        /* \"upgrade/MyErc20.sol\":4971:4977  amount */\n      dup5\n        /* \"upgrade/MyErc20.sol\":4952:4968  currentAllowance */\n      dup5\n        /* \"upgrade/MyErc20.sol\":4952:4977  currentAllowance - amount */\n      sub\n        /* \"upgrade/MyErc20.sol\":4927:4935  _approve */\n      tag_64\n        /* \"upgrade/MyErc20.sol\":4927:4978  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_107:\n        /* \"upgrade/MyErc20.sol\":4767:5005  if (currentAllowance != type(uint256).max) {... */\n    tag_103:\n        /* \"upgrade/MyErc20.sol\":4691:5012  {... */\n      pop\n        /* \"upgrade/MyErc20.sol\":4575:5012  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"upgrade/MyErc20.sol\":3585:4082  function _transfer(... */\n    tag_69:\n        /* \"upgrade/MyErc20.sol\":3724:3725  0 */\n      0x00\n        /* \"upgrade/MyErc20.sol\":3708:3726  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgrade/MyErc20.sol\":3708:3712  from */\n      dup4\n        /* \"upgrade/MyErc20.sol\":3708:3726  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"upgrade/MyErc20.sol\":3700:3762  require(from != address(0), \" transfer from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"upgrade/MyErc20.sol\":3795:3796  0 */\n      0x00\n        /* \"upgrade/MyErc20.sol\":3781:3797  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgrade/MyErc20.sol\":3781:3783  to */\n      dup3\n        /* \"upgrade/MyErc20.sol\":3781:3797  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"upgrade/MyErc20.sol\":3773:3831  require(to != address(0), \" transfer to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"upgrade/MyErc20.sol\":3869:3875  amount */\n      dup1\n        /* \"upgrade/MyErc20.sol\":3850:3859  _balances */\n      0x04\n        /* \"upgrade/MyErc20.sol\":3850:3865  _balances[from] */\n      0x00\n        /* \"upgrade/MyErc20.sol\":3860:3864  from */\n      dup6\n        /* \"upgrade/MyErc20.sol\":3850:3865  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"upgrade/MyErc20.sol\":3850:3875  _balances[from] >= amount */\n      lt\n      iszero\n        /* \"upgrade/MyErc20.sol\":3842:3901  require(_balances[from] >= amount, \" insufficient balance\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"upgrade/MyErc20.sol\":3958:3964  amount */\n      dup1\n        /* \"upgrade/MyErc20.sol\":3939:3948  _balances */\n      0x04\n        /* \"upgrade/MyErc20.sol\":3939:3954  _balances[from] */\n      0x00\n        /* \"upgrade/MyErc20.sol\":3949:3953  from */\n      dup6\n        /* \"upgrade/MyErc20.sol\":3939:3954  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"upgrade/MyErc20.sol\":3939:3964  _balances[from] -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"upgrade/MyErc20.sol\":3996:4002  amount */\n      dup1\n        /* \"upgrade/MyErc20.sol\":3979:3988  _balances */\n      0x04\n        /* \"upgrade/MyErc20.sol\":3979:3992  _balances[to] */\n      0x00\n        /* \"upgrade/MyErc20.sol\":3989:3991  to */\n      dup5\n        /* \"upgrade/MyErc20.sol\":3979:3992  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"upgrade/MyErc20.sol\":3979:4002  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"upgrade/MyErc20.sol\":4058:4073  block.timestamp */\n      timestamp\n        /* \"upgrade/MyErc20.sol\":4040:4044  from */\n      dup4\n        /* \"upgrade/MyErc20.sol\":4031:4074  Transfer(from, to, amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc44\n        /* \"upgrade/MyErc20.sol\":4046:4048  to */\n      dup5\n        /* \"upgrade/MyErc20.sol\":4050:4056  amount */\n      dup5\n        /* \"upgrade/MyErc20.sol\":4031:4074  Transfer(from, to, amount, block.timestamp) */\n      mload(0x40)\n      tag_118\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"upgrade/MyErc20.sol\":3585:4082  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"upgrade/MyErc20.sol\":5331:5643  function _mint(address account, uint256 amount) internal {... */\n    tag_83:\n        /* \"upgrade/MyErc20.sol\":5426:5427  0 */\n      0x00\n        /* \"upgrade/MyErc20.sol\":5407:5428  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgrade/MyErc20.sol\":5407:5414  account */\n      dup3\n        /* \"upgrade/MyErc20.sol\":5407:5428  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"upgrade/MyErc20.sol\":5399:5458  require(account != address(0), \" mint to the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_77\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"upgrade/MyErc20.sol\":5486:5492  amount */\n      dup1\n        /* \"upgrade/MyErc20.sol\":5471:5482  totalSupply */\n      0x03\n      0x00\n        /* \"upgrade/MyErc20.sol\":5471:5492  totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"upgrade/MyErc20.sol\":5548:5554  amount */\n      dup1\n        /* \"upgrade/MyErc20.sol\":5526:5535  _balances */\n      0x04\n        /* \"upgrade/MyErc20.sol\":5526:5544  _balances[account] */\n      0x00\n        /* \"upgrade/MyErc20.sol\":5536:5543  account */\n      dup5\n        /* \"upgrade/MyErc20.sol\":5526:5544  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"upgrade/MyErc20.sol\":5526:5554  _balances[account] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"upgrade/MyErc20.sol\":5619:5634  block.timestamp */\n      timestamp\n        /* \"upgrade/MyErc20.sol\":5598:5599  0 */\n      0x00\n        /* \"upgrade/MyErc20.sol\":5581:5635  Transfer(address(0), account, amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc44\n        /* \"upgrade/MyErc20.sol\":5602:5609  account */\n      dup5\n        /* \"upgrade/MyErc20.sol\":5611:5617  amount */\n      dup5\n        /* \"upgrade/MyErc20.sol\":5581:5635  Transfer(address(0), account, amount, block.timestamp) */\n      mload(0x40)\n      tag_124\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"upgrade/MyErc20.sol\":5331:5643  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_125:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_126:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_127:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_128:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_129:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_171\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_125\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":711:782   */\n      tag_172\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_126\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_173\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_127\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":881:910   */\n      tag_174\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_128\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_17:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_176\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_129\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_131:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_133:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_134:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_182\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_133\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_135:\n        /* \"#utility.yul\":1876:1900   */\n      tag_184\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_134\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_185\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_185:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_136:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_187\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_135\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_137:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_138:\n        /* \"#utility.yul\":2232:2256   */\n      tag_190\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_137\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_191\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_191:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_139:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_193\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_138\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_20:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_196\n      tag_131\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2525:2644   */\n    tag_195:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_197\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_136\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_198\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_139\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_140:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_141:\n        /* \"#utility.yul\":3089:3110   */\n      tag_201\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_140\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_23:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_203\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_141\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_142:\n        /* \"#utility.yul\":3426:3450   */\n      tag_205\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_137\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_27:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_207\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_142\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_30:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_210\n      tag_131\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":3801:3920   */\n    tag_209:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_211\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_136\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_212\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_136\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_213\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_139\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4645   */\n    tag_41:\n        /* \"#utility.yul\":4375:4381   */\n      0x00\n        /* \"#utility.yul\":4424:4426   */\n      0x20\n        /* \"#utility.yul\":4412:4421   */\n      dup3\n        /* \"#utility.yul\":4403:4410   */\n      dup5\n        /* \"#utility.yul\":4399:4422   */\n      sub\n        /* \"#utility.yul\":4395:4427   */\n      slt\n        /* \"#utility.yul\":4392:4511   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":4430:4509   */\n      tag_216\n      tag_131\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4392:4511   */\n    tag_215:\n        /* \"#utility.yul\":4550:4551   */\n      0x00\n        /* \"#utility.yul\":4575:4628   */\n      tag_217\n        /* \"#utility.yul\":4620:4627   */\n      dup5\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup6\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_136\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4521:4638   */\n      pop\n        /* \"#utility.yul\":4316:4645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4651:5125   */\n    tag_53:\n        /* \"#utility.yul\":4719:4725   */\n      0x00\n        /* \"#utility.yul\":4727:4733   */\n      0x00\n        /* \"#utility.yul\":4776:4778   */\n      0x40\n        /* \"#utility.yul\":4764:4773   */\n      dup4\n        /* \"#utility.yul\":4755:4762   */\n      dup6\n        /* \"#utility.yul\":4751:4774   */\n      sub\n        /* \"#utility.yul\":4747:4779   */\n      slt\n        /* \"#utility.yul\":4744:4863   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":4782:4861   */\n      tag_220\n      tag_131\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":4744:4863   */\n    tag_219:\n        /* \"#utility.yul\":4902:4903   */\n      0x00\n        /* \"#utility.yul\":4927:4980   */\n      tag_221\n        /* \"#utility.yul\":4972:4979   */\n      dup6\n        /* \"#utility.yul\":4963:4969   */\n      dup3\n        /* \"#utility.yul\":4952:4961   */\n      dup7\n        /* \"#utility.yul\":4948:4970   */\n      add\n        /* \"#utility.yul\":4927:4980   */\n      tag_136\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":4917:4980   */\n      swap3\n      pop\n        /* \"#utility.yul\":4873:4990   */\n      pop\n        /* \"#utility.yul\":5029:5031   */\n      0x20\n        /* \"#utility.yul\":5055:5108   */\n      tag_222\n        /* \"#utility.yul\":5100:5107   */\n      dup6\n        /* \"#utility.yul\":5091:5097   */\n      dup3\n        /* \"#utility.yul\":5080:5089   */\n      dup7\n        /* \"#utility.yul\":5076:5098   */\n      add\n        /* \"#utility.yul\":5055:5108   */\n      tag_136\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":5045:5108   */\n      swap2\n      pop\n        /* \"#utility.yul\":5000:5118   */\n      pop\n        /* \"#utility.yul\":4651:5125   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5131:5311   */\n    tag_143:\n        /* \"#utility.yul\":5179:5256   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5176:5177   */\n      0x00\n        /* \"#utility.yul\":5169:5257   */\n      mstore\n        /* \"#utility.yul\":5276:5280   */\n      0x22\n        /* \"#utility.yul\":5273:5274   */\n      0x04\n        /* \"#utility.yul\":5266:5281   */\n      mstore\n        /* \"#utility.yul\":5300:5304   */\n      0x24\n        /* \"#utility.yul\":5297:5298   */\n      0x00\n        /* \"#utility.yul\":5290:5305   */\n      revert\n        /* \"#utility.yul\":5317:5637   */\n    tag_57:\n        /* \"#utility.yul\":5361:5367   */\n      0x00\n        /* \"#utility.yul\":5398:5399   */\n      0x02\n        /* \"#utility.yul\":5392:5396   */\n      dup3\n        /* \"#utility.yul\":5388:5400   */\n      div\n        /* \"#utility.yul\":5378:5400   */\n      swap1\n      pop\n        /* \"#utility.yul\":5445:5446   */\n      0x01\n        /* \"#utility.yul\":5439:5443   */\n      dup3\n        /* \"#utility.yul\":5435:5447   */\n      and\n        /* \"#utility.yul\":5466:5484   */\n      dup1\n        /* \"#utility.yul\":5456:5537   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":5522:5526   */\n      0x7f\n        /* \"#utility.yul\":5514:5520   */\n      dup3\n        /* \"#utility.yul\":5510:5527   */\n      and\n        /* \"#utility.yul\":5500:5527   */\n      swap2\n      pop\n        /* \"#utility.yul\":5456:5537   */\n    tag_225:\n        /* \"#utility.yul\":5584:5586   */\n      0x20\n        /* \"#utility.yul\":5576:5582   */\n      dup3\n        /* \"#utility.yul\":5573:5587   */\n      lt\n        /* \"#utility.yul\":5553:5571   */\n      dup2\n        /* \"#utility.yul\":5550:5588   */\n      sub\n        /* \"#utility.yul\":5547:5631   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":5603:5621   */\n      tag_227\n      tag_143\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5547:5631   */\n    tag_226:\n        /* \"#utility.yul\":5368:5637   */\n      pop\n        /* \"#utility.yul\":5317:5637   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5643:5817   */\n    tag_144:\n        /* \"#utility.yul\":5783:5809   */\n      0x2063616c6c6572206973206e6f7420746865206f776e65720000000000000000\n        /* \"#utility.yul\":5779:5780   */\n      0x00\n        /* \"#utility.yul\":5771:5777   */\n      dup3\n        /* \"#utility.yul\":5767:5781   */\n      add\n        /* \"#utility.yul\":5760:5810   */\n      mstore\n        /* \"#utility.yul\":5643:5817   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5823:6189   */\n    tag_145:\n        /* \"#utility.yul\":5965:5968   */\n      0x00\n        /* \"#utility.yul\":5986:6053   */\n      tag_230\n        /* \"#utility.yul\":6050:6052   */\n      0x18\n        /* \"#utility.yul\":6045:6048   */\n      dup4\n        /* \"#utility.yul\":5986:6053   */\n      tag_126\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5979:6053   */\n      swap2\n      pop\n        /* \"#utility.yul\":6062:6155   */\n      tag_231\n        /* \"#utility.yul\":6151:6154   */\n      dup3\n        /* \"#utility.yul\":6062:6155   */\n      tag_144\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":6180:6182   */\n      0x20\n        /* \"#utility.yul\":6175:6178   */\n      dup3\n        /* \"#utility.yul\":6171:6183   */\n      add\n        /* \"#utility.yul\":6164:6183   */\n      swap1\n      pop\n        /* \"#utility.yul\":5823:6189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6195:6614   */\n    tag_73:\n        /* \"#utility.yul\":6361:6365   */\n      0x00\n        /* \"#utility.yul\":6399:6401   */\n      0x20\n        /* \"#utility.yul\":6388:6397   */\n      dup3\n        /* \"#utility.yul\":6384:6402   */\n      add\n        /* \"#utility.yul\":6376:6402   */\n      swap1\n      pop\n        /* \"#utility.yul\":6448:6457   */\n      dup2\n        /* \"#utility.yul\":6442:6446   */\n      dup2\n        /* \"#utility.yul\":6438:6458   */\n      sub\n        /* \"#utility.yul\":6434:6435   */\n      0x00\n        /* \"#utility.yul\":6423:6432   */\n      dup4\n        /* \"#utility.yul\":6419:6436   */\n      add\n        /* \"#utility.yul\":6412:6459   */\n      mstore\n        /* \"#utility.yul\":6476:6607   */\n      tag_233\n        /* \"#utility.yul\":6602:6606   */\n      dup2\n        /* \"#utility.yul\":6476:6607   */\n      tag_145\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":6468:6607   */\n      swap1\n      pop\n        /* \"#utility.yul\":6195:6614   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6620:6795   */\n    tag_146:\n        /* \"#utility.yul\":6760:6787   */\n      0x206d696e7420746f20746865207a65726f206164647265737300000000000000\n        /* \"#utility.yul\":6756:6757   */\n      0x00\n        /* \"#utility.yul\":6748:6754   */\n      dup3\n        /* \"#utility.yul\":6744:6758   */\n      add\n        /* \"#utility.yul\":6737:6788   */\n      mstore\n        /* \"#utility.yul\":6620:6795   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6801:7167   */\n    tag_147:\n        /* \"#utility.yul\":6943:6946   */\n      0x00\n        /* \"#utility.yul\":6964:7031   */\n      tag_236\n        /* \"#utility.yul\":7028:7030   */\n      0x19\n        /* \"#utility.yul\":7023:7026   */\n      dup4\n        /* \"#utility.yul\":6964:7031   */\n      tag_126\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":6957:7031   */\n      swap2\n      pop\n        /* \"#utility.yul\":7040:7133   */\n      tag_237\n        /* \"#utility.yul\":7129:7132   */\n      dup3\n        /* \"#utility.yul\":7040:7133   */\n      tag_146\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":7158:7160   */\n      0x20\n        /* \"#utility.yul\":7153:7156   */\n      dup3\n        /* \"#utility.yul\":7149:7161   */\n      add\n        /* \"#utility.yul\":7142:7161   */\n      swap1\n      pop\n        /* \"#utility.yul\":6801:7167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7173:7592   */\n    tag_77:\n        /* \"#utility.yul\":7339:7343   */\n      0x00\n        /* \"#utility.yul\":7377:7379   */\n      0x20\n        /* \"#utility.yul\":7366:7375   */\n      dup3\n        /* \"#utility.yul\":7362:7380   */\n      add\n        /* \"#utility.yul\":7354:7380   */\n      swap1\n      pop\n        /* \"#utility.yul\":7426:7435   */\n      dup2\n        /* \"#utility.yul\":7420:7424   */\n      dup2\n        /* \"#utility.yul\":7416:7436   */\n      sub\n        /* \"#utility.yul\":7412:7413   */\n      0x00\n        /* \"#utility.yul\":7401:7410   */\n      dup4\n        /* \"#utility.yul\":7397:7414   */\n      add\n        /* \"#utility.yul\":7390:7437   */\n      mstore\n        /* \"#utility.yul\":7454:7585   */\n      tag_239\n        /* \"#utility.yul\":7580:7584   */\n      dup2\n        /* \"#utility.yul\":7454:7585   */\n      tag_147\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":7446:7585   */\n      swap1\n      pop\n        /* \"#utility.yul\":7173:7592   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7598:7778   */\n    tag_148:\n        /* \"#utility.yul\":7646:7723   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7643:7644   */\n      0x00\n        /* \"#utility.yul\":7636:7724   */\n      mstore\n        /* \"#utility.yul\":7743:7747   */\n      0x11\n        /* \"#utility.yul\":7740:7741   */\n      0x04\n        /* \"#utility.yul\":7733:7748   */\n      mstore\n        /* \"#utility.yul\":7767:7771   */\n      0x24\n        /* \"#utility.yul\":7764:7765   */\n      0x00\n        /* \"#utility.yul\":7757:7772   */\n      revert\n        /* \"#utility.yul\":7784:7886   */\n    tag_149:\n        /* \"#utility.yul\":7826:7834   */\n      0x00\n        /* \"#utility.yul\":7873:7878   */\n      dup2\n        /* \"#utility.yul\":7870:7871   */\n      0x01\n        /* \"#utility.yul\":7866:7879   */\n      shr\n        /* \"#utility.yul\":7845:7879   */\n      swap1\n      pop\n        /* \"#utility.yul\":7784:7886   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7892:8740   */\n    tag_150:\n        /* \"#utility.yul\":7953:7958   */\n      0x00\n        /* \"#utility.yul\":7960:7964   */\n      0x00\n        /* \"#utility.yul\":7984:7990   */\n      dup3\n        /* \"#utility.yul\":7975:7990   */\n      swap2\n      pop\n        /* \"#utility.yul\":8008:8013   */\n      dup4\n        /* \"#utility.yul\":7999:8013   */\n      swap1\n      pop\n        /* \"#utility.yul\":8022:8734   */\n    tag_243:\n        /* \"#utility.yul\":8043:8044   */\n      0x01\n        /* \"#utility.yul\":8033:8041   */\n      dup6\n        /* \"#utility.yul\":8030:8045   */\n      gt\n        /* \"#utility.yul\":8022:8734   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":8138:8142   */\n      dup1\n        /* \"#utility.yul\":8133:8136   */\n      dup7\n        /* \"#utility.yul\":8129:8143   */\n      div\n        /* \"#utility.yul\":8123:8127   */\n      dup2\n        /* \"#utility.yul\":8120:8144   */\n      gt\n        /* \"#utility.yul\":8117:8167   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":8147:8165   */\n      tag_247\n      tag_148\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":8117:8167   */\n    tag_246:\n        /* \"#utility.yul\":8197:8198   */\n      0x01\n        /* \"#utility.yul\":8187:8195   */\n      dup6\n        /* \"#utility.yul\":8183:8199   */\n      and\n        /* \"#utility.yul\":8180:8631   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":8612:8616   */\n      dup1\n        /* \"#utility.yul\":8605:8610   */\n      dup3\n        /* \"#utility.yul\":8601:8617   */\n      mul\n        /* \"#utility.yul\":8592:8617   */\n      swap2\n      pop\n        /* \"#utility.yul\":8180:8631   */\n    tag_248:\n        /* \"#utility.yul\":8662:8666   */\n      dup1\n        /* \"#utility.yul\":8656:8660   */\n      dup2\n        /* \"#utility.yul\":8652:8667   */\n      mul\n        /* \"#utility.yul\":8644:8667   */\n      swap1\n      pop\n        /* \"#utility.yul\":8692:8724   */\n      tag_249\n        /* \"#utility.yul\":8715:8723   */\n      dup6\n        /* \"#utility.yul\":8692:8724   */\n      tag_149\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":8680:8724   */\n      swap5\n      pop\n        /* \"#utility.yul\":8022:8734   */\n      jump(tag_243)\n    tag_245:\n        /* \"#utility.yul\":7892:8740   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8746:9819   */\n    tag_151:\n        /* \"#utility.yul\":8800:8805   */\n      0x00\n        /* \"#utility.yul\":8991:8999   */\n      dup3\n        /* \"#utility.yul\":8981:9021   */\n      tag_251\n      jumpi\n        /* \"#utility.yul\":9012:9013   */\n      0x01\n        /* \"#utility.yul\":9003:9013   */\n      swap1\n      pop\n        /* \"#utility.yul\":9014:9019   */\n      jump(tag_250)\n        /* \"#utility.yul\":8981:9021   */\n    tag_251:\n        /* \"#utility.yul\":9040:9044   */\n      dup2\n        /* \"#utility.yul\":9030:9066   */\n      tag_252\n      jumpi\n        /* \"#utility.yul\":9057:9058   */\n      0x00\n        /* \"#utility.yul\":9048:9058   */\n      swap1\n      pop\n        /* \"#utility.yul\":9059:9064   */\n      jump(tag_250)\n        /* \"#utility.yul\":9030:9066   */\n    tag_252:\n        /* \"#utility.yul\":9126:9130   */\n      dup2\n        /* \"#utility.yul\":9174:9175   */\n      0x01\n        /* \"#utility.yul\":9169:9196   */\n      dup2\n      eq\n      tag_254\n      jumpi\n        /* \"#utility.yul\":9210:9211   */\n      0x02\n        /* \"#utility.yul\":9205:9396   */\n      dup2\n      eq\n      tag_255\n      jumpi\n        /* \"#utility.yul\":9119:9396   */\n      jump(tag_253)\n        /* \"#utility.yul\":9169:9196   */\n    tag_254:\n        /* \"#utility.yul\":9187:9188   */\n      0x01\n        /* \"#utility.yul\":9178:9188   */\n      swap2\n      pop\n        /* \"#utility.yul\":9189:9194   */\n      pop\n      jump(tag_250)\n        /* \"#utility.yul\":9205:9396   */\n    tag_255:\n        /* \"#utility.yul\":9250:9253   */\n      0xff\n        /* \"#utility.yul\":9240:9248   */\n      dup5\n        /* \"#utility.yul\":9237:9254   */\n      gt\n        /* \"#utility.yul\":9234:9277   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":9257:9275   */\n      tag_257\n      tag_148\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":9234:9277   */\n    tag_256:\n        /* \"#utility.yul\":9306:9314   */\n      dup4\n        /* \"#utility.yul\":9303:9304   */\n      0x02\n        /* \"#utility.yul\":9299:9315   */\n      exp\n        /* \"#utility.yul\":9290:9315   */\n      swap2\n      pop\n        /* \"#utility.yul\":9341:9344   */\n      dup5\n        /* \"#utility.yul\":9334:9339   */\n      dup3\n        /* \"#utility.yul\":9331:9345   */\n      gt\n        /* \"#utility.yul\":9328:9368   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":9348:9366   */\n      tag_259\n      tag_148\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":9328:9368   */\n    tag_258:\n        /* \"#utility.yul\":9381:9386   */\n      pop\n      jump(tag_250)\n        /* \"#utility.yul\":9119:9396   */\n    tag_253:\n      pop\n        /* \"#utility.yul\":9505:9507   */\n      0x20\n        /* \"#utility.yul\":9495:9503   */\n      dup4\n        /* \"#utility.yul\":9492:9508   */\n      lt\n        /* \"#utility.yul\":9486:9489   */\n      0x0133\n        /* \"#utility.yul\":9480:9484   */\n      dup4\n        /* \"#utility.yul\":9477:9490   */\n      lt\n        /* \"#utility.yul\":9473:9509   */\n      and\n        /* \"#utility.yul\":9455:9457   */\n      0x4e\n        /* \"#utility.yul\":9445:9453   */\n      dup5\n        /* \"#utility.yul\":9442:9458   */\n      lt\n        /* \"#utility.yul\":9437:9439   */\n      0x0b\n        /* \"#utility.yul\":9431:9435   */\n      dup5\n        /* \"#utility.yul\":9428:9440   */\n      lt\n        /* \"#utility.yul\":9424:9459   */\n      and\n        /* \"#utility.yul\":9408:9519   */\n      or\n        /* \"#utility.yul\":9405:9651   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":9561:9569   */\n      dup3\n        /* \"#utility.yul\":9555:9559   */\n      dup3\n        /* \"#utility.yul\":9551:9570   */\n      exp\n        /* \"#utility.yul\":9542:9570   */\n      swap1\n      pop\n        /* \"#utility.yul\":9596:9599   */\n      dup4\n        /* \"#utility.yul\":9589:9594   */\n      dup2\n        /* \"#utility.yul\":9586:9600   */\n      gt\n        /* \"#utility.yul\":9583:9623   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":9603:9621   */\n      tag_262\n      tag_148\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":9583:9623   */\n    tag_261:\n        /* \"#utility.yul\":9636:9641   */\n      jump(tag_250)\n        /* \"#utility.yul\":9405:9651   */\n    tag_260:\n        /* \"#utility.yul\":9676:9718   */\n      tag_263\n        /* \"#utility.yul\":9714:9717   */\n      dup5\n        /* \"#utility.yul\":9704:9712   */\n      dup5\n        /* \"#utility.yul\":9698:9702   */\n      dup5\n        /* \"#utility.yul\":9695:9696   */\n      0x01\n        /* \"#utility.yul\":9676:9718   */\n      tag_150\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9661:9718   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":9750:9754   */\n      dup2\n        /* \"#utility.yul\":9745:9748   */\n      dup5\n        /* \"#utility.yul\":9741:9755   */\n      div\n        /* \"#utility.yul\":9734:9739   */\n      dup2\n        /* \"#utility.yul\":9731:9756   */\n      gt\n        /* \"#utility.yul\":9728:9779   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":9759:9777   */\n      tag_265\n      tag_148\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":9728:9779   */\n    tag_264:\n        /* \"#utility.yul\":9808:9812   */\n      dup2\n        /* \"#utility.yul\":9801:9806   */\n      dup2\n        /* \"#utility.yul\":9797:9813   */\n      mul\n        /* \"#utility.yul\":9788:9813   */\n      swap1\n      pop\n        /* \"#utility.yul\":8746:9819   */\n    tag_250:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9825:10110   */\n    tag_80:\n        /* \"#utility.yul\":9885:9890   */\n      0x00\n        /* \"#utility.yul\":9909:9932   */\n      tag_267\n        /* \"#utility.yul\":9927:9931   */\n      dup3\n        /* \"#utility.yul\":9909:9932   */\n      tag_137\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":9901:9932   */\n      swap2\n      pop\n        /* \"#utility.yul\":9953:9980   */\n      tag_268\n        /* \"#utility.yul\":9971:9979   */\n      dup4\n        /* \"#utility.yul\":9953:9980   */\n      tag_137\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":9941:9980   */\n      swap3\n      pop\n        /* \"#utility.yul\":9999:10103   */\n      tag_269\n        /* \"#utility.yul\":10036:10102   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10026:10034   */\n      dup5\n        /* \"#utility.yul\":10020:10024   */\n      dup5\n        /* \"#utility.yul\":9999:10103   */\n      tag_151\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9990:10103   */\n      swap1\n      pop\n        /* \"#utility.yul\":9825:10110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10116:10526   */\n    tag_82:\n        /* \"#utility.yul\":10156:10163   */\n      0x00\n        /* \"#utility.yul\":10179:10199   */\n      tag_271\n        /* \"#utility.yul\":10197:10198   */\n      dup3\n        /* \"#utility.yul\":10179:10199   */\n      tag_137\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":10174:10199   */\n      swap2\n      pop\n        /* \"#utility.yul\":10213:10233   */\n      tag_272\n        /* \"#utility.yul\":10231:10232   */\n      dup4\n        /* \"#utility.yul\":10213:10233   */\n      tag_137\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":10208:10233   */\n      swap3\n      pop\n        /* \"#utility.yul\":10268:10269   */\n      dup3\n        /* \"#utility.yul\":10265:10266   */\n      dup3\n        /* \"#utility.yul\":10261:10270   */\n      mul\n        /* \"#utility.yul\":10290:10320   */\n      tag_273\n        /* \"#utility.yul\":10308:10319   */\n      dup2\n        /* \"#utility.yul\":10290:10320   */\n      tag_137\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":10279:10320   */\n      swap2\n      pop\n        /* \"#utility.yul\":10469:10470   */\n      dup3\n        /* \"#utility.yul\":10460:10467   */\n      dup3\n        /* \"#utility.yul\":10456:10471   */\n      div\n        /* \"#utility.yul\":10453:10454   */\n      dup5\n        /* \"#utility.yul\":10450:10472   */\n      eq\n        /* \"#utility.yul\":10430:10431   */\n      dup4\n        /* \"#utility.yul\":10423:10432   */\n      iszero\n        /* \"#utility.yul\":10403:10486   */\n      or\n        /* \"#utility.yul\":10380:10519   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":10499:10517   */\n      tag_275\n      tag_148\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10380:10519   */\n    tag_274:\n        /* \"#utility.yul\":10164:10526   */\n      pop\n        /* \"#utility.yul\":10116:10526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10532:10712   */\n    tag_152:\n        /* \"#utility.yul\":10672:10704   */\n      0x20617070726f76652066726f6d20746865207a65726f20616464726573730000\n        /* \"#utility.yul\":10668:10669   */\n      0x00\n        /* \"#utility.yul\":10660:10666   */\n      dup3\n        /* \"#utility.yul\":10656:10670   */\n      add\n        /* \"#utility.yul\":10649:10705   */\n      mstore\n        /* \"#utility.yul\":10532:10712   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10718:11084   */\n    tag_153:\n        /* \"#utility.yul\":10860:10863   */\n      0x00\n        /* \"#utility.yul\":10881:10948   */\n      tag_278\n        /* \"#utility.yul\":10945:10947   */\n      0x1e\n        /* \"#utility.yul\":10940:10943   */\n      dup4\n        /* \"#utility.yul\":10881:10948   */\n      tag_126\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":10874:10948   */\n      swap2\n      pop\n        /* \"#utility.yul\":10957:11050   */\n      tag_279\n        /* \"#utility.yul\":11046:11049   */\n      dup3\n        /* \"#utility.yul\":10957:11050   */\n      tag_152\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":11075:11077   */\n      0x20\n        /* \"#utility.yul\":11070:11073   */\n      dup3\n        /* \"#utility.yul\":11066:11078   */\n      add\n        /* \"#utility.yul\":11059:11078   */\n      swap1\n      pop\n        /* \"#utility.yul\":10718:11084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11090:11509   */\n    tag_96:\n        /* \"#utility.yul\":11256:11260   */\n      0x00\n        /* \"#utility.yul\":11294:11296   */\n      0x20\n        /* \"#utility.yul\":11283:11292   */\n      dup3\n        /* \"#utility.yul\":11279:11297   */\n      add\n        /* \"#utility.yul\":11271:11297   */\n      swap1\n      pop\n        /* \"#utility.yul\":11343:11352   */\n      dup2\n        /* \"#utility.yul\":11337:11341   */\n      dup2\n        /* \"#utility.yul\":11333:11353   */\n      sub\n        /* \"#utility.yul\":11329:11330   */\n      0x00\n        /* \"#utility.yul\":11318:11327   */\n      dup4\n        /* \"#utility.yul\":11314:11331   */\n      add\n        /* \"#utility.yul\":11307:11354   */\n      mstore\n        /* \"#utility.yul\":11371:11502   */\n      tag_281\n        /* \"#utility.yul\":11497:11501   */\n      dup2\n        /* \"#utility.yul\":11371:11502   */\n      tag_153\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":11363:11502   */\n      swap1\n      pop\n        /* \"#utility.yul\":11090:11509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11515:11693   */\n    tag_154:\n        /* \"#utility.yul\":11655:11685   */\n      0x20617070726f766520746f20746865207a65726f206164647265737300000000\n        /* \"#utility.yul\":11651:11652   */\n      0x00\n        /* \"#utility.yul\":11643:11649   */\n      dup3\n        /* \"#utility.yul\":11639:11653   */\n      add\n        /* \"#utility.yul\":11632:11686   */\n      mstore\n        /* \"#utility.yul\":11515:11693   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11699:12065   */\n    tag_155:\n        /* \"#utility.yul\":11841:11844   */\n      0x00\n        /* \"#utility.yul\":11862:11929   */\n      tag_284\n        /* \"#utility.yul\":11926:11928   */\n      0x1c\n        /* \"#utility.yul\":11921:11924   */\n      dup4\n        /* \"#utility.yul\":11862:11929   */\n      tag_126\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":11855:11929   */\n      swap2\n      pop\n        /* \"#utility.yul\":11938:12031   */\n      tag_285\n        /* \"#utility.yul\":12027:12030   */\n      dup3\n        /* \"#utility.yul\":11938:12031   */\n      tag_154\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":12056:12058   */\n      0x20\n        /* \"#utility.yul\":12051:12054   */\n      dup3\n        /* \"#utility.yul\":12047:12059   */\n      add\n        /* \"#utility.yul\":12040:12059   */\n      swap1\n      pop\n        /* \"#utility.yul\":11699:12065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12071:12490   */\n    tag_99:\n        /* \"#utility.yul\":12237:12241   */\n      0x00\n        /* \"#utility.yul\":12275:12277   */\n      0x20\n        /* \"#utility.yul\":12264:12273   */\n      dup3\n        /* \"#utility.yul\":12260:12278   */\n      add\n        /* \"#utility.yul\":12252:12278   */\n      swap1\n      pop\n        /* \"#utility.yul\":12324:12333   */\n      dup2\n        /* \"#utility.yul\":12318:12322   */\n      dup2\n        /* \"#utility.yul\":12314:12334   */\n      sub\n        /* \"#utility.yul\":12310:12311   */\n      0x00\n        /* \"#utility.yul\":12299:12308   */\n      dup4\n        /* \"#utility.yul\":12295:12312   */\n      add\n        /* \"#utility.yul\":12288:12335   */\n      mstore\n        /* \"#utility.yul\":12352:12483   */\n      tag_287\n        /* \"#utility.yul\":12478:12482   */\n      dup2\n        /* \"#utility.yul\":12352:12483   */\n      tag_155\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":12344:12483   */\n      swap1\n      pop\n        /* \"#utility.yul\":12071:12490   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12496:12614   */\n    tag_156:\n        /* \"#utility.yul\":12583:12607   */\n      tag_289\n        /* \"#utility.yul\":12601:12606   */\n      dup2\n        /* \"#utility.yul\":12583:12607   */\n      tag_134\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":12578:12581   */\n      dup3\n        /* \"#utility.yul\":12571:12608   */\n      mstore\n        /* \"#utility.yul\":12496:12614   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12620:12952   */\n    tag_101:\n        /* \"#utility.yul\":12741:12745   */\n      0x00\n        /* \"#utility.yul\":12779:12781   */\n      0x40\n        /* \"#utility.yul\":12768:12777   */\n      dup3\n        /* \"#utility.yul\":12764:12782   */\n      add\n        /* \"#utility.yul\":12756:12782   */\n      swap1\n      pop\n        /* \"#utility.yul\":12792:12863   */\n      tag_291\n        /* \"#utility.yul\":12860:12861   */\n      0x00\n        /* \"#utility.yul\":12849:12858   */\n      dup4\n        /* \"#utility.yul\":12845:12862   */\n      add\n        /* \"#utility.yul\":12836:12842   */\n      dup6\n        /* \"#utility.yul\":12792:12863   */\n      tag_156\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":12873:12945   */\n      tag_292\n        /* \"#utility.yul\":12941:12943   */\n      0x20\n        /* \"#utility.yul\":12930:12939   */\n      dup4\n        /* \"#utility.yul\":12926:12944   */\n      add\n        /* \"#utility.yul\":12917:12923   */\n      dup5\n        /* \"#utility.yul\":12873:12945   */\n      tag_142\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":12620:12952   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12958:13127   */\n    tag_157:\n        /* \"#utility.yul\":13098:13119   */\n      0x20616c6c6f77616e636520657863656564656400000000000000000000000000\n        /* \"#utility.yul\":13094:13095   */\n      0x00\n        /* \"#utility.yul\":13086:13092   */\n      dup3\n        /* \"#utility.yul\":13082:13096   */\n      add\n        /* \"#utility.yul\":13075:13120   */\n      mstore\n        /* \"#utility.yul\":12958:13127   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13133:13499   */\n    tag_158:\n        /* \"#utility.yul\":13275:13278   */\n      0x00\n        /* \"#utility.yul\":13296:13363   */\n      tag_295\n        /* \"#utility.yul\":13360:13362   */\n      0x13\n        /* \"#utility.yul\":13355:13358   */\n      dup4\n        /* \"#utility.yul\":13296:13363   */\n      tag_126\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":13289:13363   */\n      swap2\n      pop\n        /* \"#utility.yul\":13372:13465   */\n      tag_296\n        /* \"#utility.yul\":13461:13464   */\n      dup3\n        /* \"#utility.yul\":13372:13465   */\n      tag_157\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":13490:13492   */\n      0x20\n        /* \"#utility.yul\":13485:13488   */\n      dup3\n        /* \"#utility.yul\":13481:13493   */\n      add\n        /* \"#utility.yul\":13474:13493   */\n      swap1\n      pop\n        /* \"#utility.yul\":13133:13499   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13505:13924   */\n    tag_106:\n        /* \"#utility.yul\":13671:13675   */\n      0x00\n        /* \"#utility.yul\":13709:13711   */\n      0x20\n        /* \"#utility.yul\":13698:13707   */\n      dup3\n        /* \"#utility.yul\":13694:13712   */\n      add\n        /* \"#utility.yul\":13686:13712   */\n      swap1\n      pop\n        /* \"#utility.yul\":13758:13767   */\n      dup2\n        /* \"#utility.yul\":13752:13756   */\n      dup2\n        /* \"#utility.yul\":13748:13768   */\n      sub\n        /* \"#utility.yul\":13744:13745   */\n      0x00\n        /* \"#utility.yul\":13733:13742   */\n      dup4\n        /* \"#utility.yul\":13729:13746   */\n      add\n        /* \"#utility.yul\":13722:13769   */\n      mstore\n        /* \"#utility.yul\":13786:13917   */\n      tag_298\n        /* \"#utility.yul\":13912:13916   */\n      dup2\n        /* \"#utility.yul\":13786:13917   */\n      tag_158\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":13778:13917   */\n      swap1\n      pop\n        /* \"#utility.yul\":13505:13924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13930:14111   */\n    tag_159:\n        /* \"#utility.yul\":14070:14103   */\n      0x207472616e736665722066726f6d20746865207a65726f206164647265737300\n        /* \"#utility.yul\":14066:14067   */\n      0x00\n        /* \"#utility.yul\":14058:14064   */\n      dup3\n        /* \"#utility.yul\":14054:14068   */\n      add\n        /* \"#utility.yul\":14047:14104   */\n      mstore\n        /* \"#utility.yul\":13930:14111   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14117:14483   */\n    tag_160:\n        /* \"#utility.yul\":14259:14262   */\n      0x00\n        /* \"#utility.yul\":14280:14347   */\n      tag_301\n        /* \"#utility.yul\":14344:14346   */\n      0x1f\n        /* \"#utility.yul\":14339:14342   */\n      dup4\n        /* \"#utility.yul\":14280:14347   */\n      tag_126\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":14273:14347   */\n      swap2\n      pop\n        /* \"#utility.yul\":14356:14449   */\n      tag_302\n        /* \"#utility.yul\":14445:14448   */\n      dup3\n        /* \"#utility.yul\":14356:14449   */\n      tag_159\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":14474:14476   */\n      0x20\n        /* \"#utility.yul\":14469:14472   */\n      dup3\n        /* \"#utility.yul\":14465:14477   */\n      add\n        /* \"#utility.yul\":14458:14477   */\n      swap1\n      pop\n        /* \"#utility.yul\":14117:14483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14489:14908   */\n    tag_111:\n        /* \"#utility.yul\":14655:14659   */\n      0x00\n        /* \"#utility.yul\":14693:14695   */\n      0x20\n        /* \"#utility.yul\":14682:14691   */\n      dup3\n        /* \"#utility.yul\":14678:14696   */\n      add\n        /* \"#utility.yul\":14670:14696   */\n      swap1\n      pop\n        /* \"#utility.yul\":14742:14751   */\n      dup2\n        /* \"#utility.yul\":14736:14740   */\n      dup2\n        /* \"#utility.yul\":14732:14752   */\n      sub\n        /* \"#utility.yul\":14728:14729   */\n      0x00\n        /* \"#utility.yul\":14717:14726   */\n      dup4\n        /* \"#utility.yul\":14713:14730   */\n      add\n        /* \"#utility.yul\":14706:14753   */\n      mstore\n        /* \"#utility.yul\":14770:14901   */\n      tag_304\n        /* \"#utility.yul\":14896:14900   */\n      dup2\n        /* \"#utility.yul\":14770:14901   */\n      tag_160\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":14762:14901   */\n      swap1\n      pop\n        /* \"#utility.yul\":14489:14908   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14914:15093   */\n    tag_161:\n        /* \"#utility.yul\":15054:15085   */\n      0x207472616e7366657220746f20746865207a65726f2061646472657373000000\n        /* \"#utility.yul\":15050:15051   */\n      0x00\n        /* \"#utility.yul\":15042:15048   */\n      dup3\n        /* \"#utility.yul\":15038:15052   */\n      add\n        /* \"#utility.yul\":15031:15086   */\n      mstore\n        /* \"#utility.yul\":14914:15093   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15099:15465   */\n    tag_162:\n        /* \"#utility.yul\":15241:15244   */\n      0x00\n        /* \"#utility.yul\":15262:15329   */\n      tag_307\n        /* \"#utility.yul\":15326:15328   */\n      0x1d\n        /* \"#utility.yul\":15321:15324   */\n      dup4\n        /* \"#utility.yul\":15262:15329   */\n      tag_126\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":15255:15329   */\n      swap2\n      pop\n        /* \"#utility.yul\":15338:15431   */\n      tag_308\n        /* \"#utility.yul\":15427:15430   */\n      dup3\n        /* \"#utility.yul\":15338:15431   */\n      tag_161\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":15456:15458   */\n      0x20\n        /* \"#utility.yul\":15451:15454   */\n      dup3\n        /* \"#utility.yul\":15447:15459   */\n      add\n        /* \"#utility.yul\":15440:15459   */\n      swap1\n      pop\n        /* \"#utility.yul\":15099:15465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15471:15890   */\n    tag_114:\n        /* \"#utility.yul\":15637:15641   */\n      0x00\n        /* \"#utility.yul\":15675:15677   */\n      0x20\n        /* \"#utility.yul\":15664:15673   */\n      dup3\n        /* \"#utility.yul\":15660:15678   */\n      add\n        /* \"#utility.yul\":15652:15678   */\n      swap1\n      pop\n        /* \"#utility.yul\":15724:15733   */\n      dup2\n        /* \"#utility.yul\":15718:15722   */\n      dup2\n        /* \"#utility.yul\":15714:15734   */\n      sub\n        /* \"#utility.yul\":15710:15711   */\n      0x00\n        /* \"#utility.yul\":15699:15708   */\n      dup4\n        /* \"#utility.yul\":15695:15712   */\n      add\n        /* \"#utility.yul\":15688:15735   */\n      mstore\n        /* \"#utility.yul\":15752:15883   */\n      tag_310\n        /* \"#utility.yul\":15878:15882   */\n      dup2\n        /* \"#utility.yul\":15752:15883   */\n      tag_162\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":15744:15883   */\n      swap1\n      pop\n        /* \"#utility.yul\":15471:15890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15896:16067   */\n    tag_163:\n        /* \"#utility.yul\":16036:16059   */\n      0x20696e73756666696369656e742062616c616e63650000000000000000000000\n        /* \"#utility.yul\":16032:16033   */\n      0x00\n        /* \"#utility.yul\":16024:16030   */\n      dup3\n        /* \"#utility.yul\":16020:16034   */\n      add\n        /* \"#utility.yul\":16013:16060   */\n      mstore\n        /* \"#utility.yul\":15896:16067   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16073:16439   */\n    tag_164:\n        /* \"#utility.yul\":16215:16218   */\n      0x00\n        /* \"#utility.yul\":16236:16303   */\n      tag_313\n        /* \"#utility.yul\":16300:16302   */\n      0x15\n        /* \"#utility.yul\":16295:16298   */\n      dup4\n        /* \"#utility.yul\":16236:16303   */\n      tag_126\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":16229:16303   */\n      swap2\n      pop\n        /* \"#utility.yul\":16312:16405   */\n      tag_314\n        /* \"#utility.yul\":16401:16404   */\n      dup3\n        /* \"#utility.yul\":16312:16405   */\n      tag_163\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":16430:16432   */\n      0x20\n        /* \"#utility.yul\":16425:16428   */\n      dup3\n        /* \"#utility.yul\":16421:16433   */\n      add\n        /* \"#utility.yul\":16414:16433   */\n      swap1\n      pop\n        /* \"#utility.yul\":16073:16439   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16445:16864   */\n    tag_117:\n        /* \"#utility.yul\":16611:16615   */\n      0x00\n        /* \"#utility.yul\":16649:16651   */\n      0x20\n        /* \"#utility.yul\":16638:16647   */\n      dup3\n        /* \"#utility.yul\":16634:16652   */\n      add\n        /* \"#utility.yul\":16626:16652   */\n      swap1\n      pop\n        /* \"#utility.yul\":16698:16707   */\n      dup2\n        /* \"#utility.yul\":16692:16696   */\n      dup2\n        /* \"#utility.yul\":16688:16708   */\n      sub\n        /* \"#utility.yul\":16684:16685   */\n      0x00\n        /* \"#utility.yul\":16673:16682   */\n      dup4\n        /* \"#utility.yul\":16669:16686   */\n      add\n        /* \"#utility.yul\":16662:16709   */\n      mstore\n        /* \"#utility.yul\":16726:16857   */\n      tag_316\n        /* \"#utility.yul\":16852:16856   */\n      dup2\n        /* \"#utility.yul\":16726:16857   */\n      tag_164\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":16718:16857   */\n      swap1\n      pop\n        /* \"#utility.yul\":16445:16864   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16870:17061   */\n    tag_123:\n        /* \"#utility.yul\":16910:16913   */\n      0x00\n        /* \"#utility.yul\":16929:16949   */\n      tag_318\n        /* \"#utility.yul\":16947:16948   */\n      dup3\n        /* \"#utility.yul\":16929:16949   */\n      tag_137\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":16924:16949   */\n      swap2\n      pop\n        /* \"#utility.yul\":16963:16983   */\n      tag_319\n        /* \"#utility.yul\":16981:16982   */\n      dup4\n        /* \"#utility.yul\":16963:16983   */\n      tag_137\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":16958:16983   */\n      swap3\n      pop\n        /* \"#utility.yul\":17006:17007   */\n      dup3\n        /* \"#utility.yul\":17003:17004   */\n      dup3\n        /* \"#utility.yul\":16999:17008   */\n      add\n        /* \"#utility.yul\":16992:17008   */\n      swap1\n      pop\n        /* \"#utility.yul\":17027:17030   */\n      dup1\n        /* \"#utility.yul\":17024:17025   */\n      dup3\n        /* \"#utility.yul\":17021:17031   */\n      gt\n        /* \"#utility.yul\":17018:17054   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":17034:17052   */\n      tag_321\n      tag_148\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":17018:17054   */\n    tag_320:\n        /* \"#utility.yul\":16870:17061   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204522aabf9e5bc04266dd273f81025fdcf4e782e19bfc64cd99bf1dd88cfdb55364736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1018": {
									"entryPoint": null,
									"id": 1018,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_1370": {
									"entryPoint": 335,
									"id": 1370,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1586,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 1738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2610,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1408,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1931,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 2222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2013,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1064,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1572,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1874,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 683,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 638,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1425,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1429,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1421,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1417,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051": {
									"entryPoint": 2377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 962,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14004:7",
										"nodeType": "YulBlock",
										"src": "0:14004:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "140:152:7",
													"nodeType": "YulBlock",
													"src": "140:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:7",
																		"nodeType": "YulLiteral",
																		"src": "157:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:7",
																		"nodeType": "YulLiteral",
																		"src": "160:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:7"
																},
																"nativeSrc": "150:88:7",
																"nodeType": "YulFunctionCall",
																"src": "150:88:7"
															},
															"nativeSrc": "150:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:7",
																		"nodeType": "YulLiteral",
																		"src": "254:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:7",
																		"nodeType": "YulLiteral",
																		"src": "257:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:7"
																},
																"nativeSrc": "247:15:7",
																"nodeType": "YulFunctionCall",
																"src": "247:15:7"
															},
															"nativeSrc": "247:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:7",
																		"nodeType": "YulLiteral",
																		"src": "278:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:7",
																		"nodeType": "YulLiteral",
																		"src": "281:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:7"
																},
																"nativeSrc": "271:15:7",
																"nodeType": "YulFunctionCall",
																"src": "271:15:7"
															},
															"nativeSrc": "271:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:7"
											},
											{
												"body": {
													"nativeSrc": "326:152:7",
													"nodeType": "YulBlock",
													"src": "326:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:7",
																		"nodeType": "YulLiteral",
																		"src": "343:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:7",
																		"nodeType": "YulLiteral",
																		"src": "346:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:7"
																},
																"nativeSrc": "336:88:7",
																"nodeType": "YulFunctionCall",
																"src": "336:88:7"
															},
															"nativeSrc": "336:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:7",
																		"nodeType": "YulLiteral",
																		"src": "443:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:15:7",
																"nodeType": "YulFunctionCall",
																"src": "433:15:7"
															},
															"nativeSrc": "433:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:7",
																		"nodeType": "YulLiteral",
																		"src": "464:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:7",
																		"nodeType": "YulLiteral",
																		"src": "467:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:7"
																},
																"nativeSrc": "457:15:7",
																"nodeType": "YulFunctionCall",
																"src": "457:15:7"
															},
															"nativeSrc": "457:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:7"
											},
											{
												"body": {
													"nativeSrc": "535:269:7",
													"nodeType": "YulBlock",
													"src": "535:269:7",
													"statements": [
														{
															"nativeSrc": "545:22:7",
															"nodeType": "YulAssignment",
															"src": "545:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:7",
																		"nodeType": "YulLiteral",
																		"src": "565:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:7"
																},
																"nativeSrc": "555:12:7",
																"nodeType": "YulFunctionCall",
																"src": "555:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:7"
																}
															]
														},
														{
															"nativeSrc": "576:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:7",
																		"nodeType": "YulLiteral",
																		"src": "612:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:7"
																},
																"nativeSrc": "602:12:7",
																"nodeType": "YulFunctionCall",
																"src": "602:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:7",
																	"nodeType": "YulTypedName",
																	"src": "580:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:7",
																"nodeType": "YulBlock",
																"src": "653:51:7",
																"statements": [
																	{
																		"nativeSrc": "667:27:7",
																		"nodeType": "YulAssignment",
																		"src": "667:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:7",
																					"nodeType": "YulLiteral",
																					"src": "689:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:7"
																			},
																			"nativeSrc": "677:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:7"
																},
																"nativeSrc": "626:26:7",
																"nodeType": "YulFunctionCall",
																"src": "626:26:7"
															},
															"nativeSrc": "623:81:7",
															"nodeType": "YulIf",
															"src": "623:81:7"
														},
														{
															"body": {
																"nativeSrc": "756:42:7",
																"nodeType": "YulBlock",
																"src": "756:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:7"
																			},
																			"nativeSrc": "770:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:7"
																		},
																		"nativeSrc": "770:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:7",
																				"nodeType": "YulLiteral",
																				"src": "751:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:7"
																		},
																		"nativeSrc": "740:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:7"
																},
																"nativeSrc": "717:38:7",
																"nodeType": "YulFunctionCall",
																"src": "717:38:7"
															},
															"nativeSrc": "714:84:7",
															"nodeType": "YulIf",
															"src": "714:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:7",
														"nodeType": "YulTypedName",
														"src": "519:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:7",
														"nodeType": "YulTypedName",
														"src": "528:6:7",
														"type": ""
													}
												],
												"src": "484:320:7"
											},
											{
												"body": {
													"nativeSrc": "864:87:7",
													"nodeType": "YulBlock",
													"src": "864:87:7",
													"statements": [
														{
															"nativeSrc": "874:11:7",
															"nodeType": "YulAssignment",
															"src": "874:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:7",
																"nodeType": "YulIdentifier",
																"src": "882:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:7",
																		"nodeType": "YulLiteral",
																		"src": "902:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:7"
																},
																"nativeSrc": "895:14:7",
																"nodeType": "YulFunctionCall",
																"src": "895:14:7"
															},
															"nativeSrc": "895:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:7"
														},
														{
															"nativeSrc": "918:26:7",
															"nodeType": "YulAssignment",
															"src": "918:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:7",
																		"nodeType": "YulLiteral",
																		"src": "936:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:7",
																		"nodeType": "YulLiteral",
																		"src": "939:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:7"
																},
																"nativeSrc": "926:18:7",
																"nodeType": "YulFunctionCall",
																"src": "926:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:7",
														"nodeType": "YulTypedName",
														"src": "851:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:7",
														"nodeType": "YulTypedName",
														"src": "859:4:7",
														"type": ""
													}
												],
												"src": "810:141:7"
											},
											{
												"body": {
													"nativeSrc": "1001:49:7",
													"nodeType": "YulBlock",
													"src": "1001:49:7",
													"statements": [
														{
															"nativeSrc": "1011:33:7",
															"nodeType": "YulAssignment",
															"src": "1011:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:7"
																		},
																		"nativeSrc": "1025:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:7"
																},
																"nativeSrc": "1021:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:7",
														"nodeType": "YulTypedName",
														"src": "984:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:7",
														"nodeType": "YulTypedName",
														"src": "994:6:7",
														"type": ""
													}
												],
												"src": "957:93:7"
											},
											{
												"body": {
													"nativeSrc": "1109:54:7",
													"nodeType": "YulBlock",
													"src": "1109:54:7",
													"statements": [
														{
															"nativeSrc": "1119:37:7",
															"nodeType": "YulAssignment",
															"src": "1119:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:7"
																},
																"nativeSrc": "1140:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:7",
														"nodeType": "YulTypedName",
														"src": "1084:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:7",
														"nodeType": "YulTypedName",
														"src": "1090:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:7",
														"nodeType": "YulTypedName",
														"src": "1100:8:7",
														"type": ""
													}
												],
												"src": "1056:107:7"
											},
											{
												"body": {
													"nativeSrc": "1245:317:7",
													"nodeType": "YulBlock",
													"src": "1245:317:7",
													"statements": [
														{
															"nativeSrc": "1255:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:7"
																},
																"nativeSrc": "1272:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:7",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:7",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:7"
																},
																"nativeSrc": "1311:97:7",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:7",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:7",
															"nodeType": "YulAssignment",
															"src": "1417:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:7"
																},
																"nativeSrc": "1429:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:7"
																}
															]
														},
														{
															"nativeSrc": "1477:30:7",
															"nodeType": "YulAssignment",
															"src": "1477:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:7"
																		},
																		"nativeSrc": "1497:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:7"
																},
																"nativeSrc": "1486:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:7"
																}
															]
														},
														{
															"nativeSrc": "1516:40:7",
															"nodeType": "YulAssignment",
															"src": "1516:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:7"
																		},
																		"nativeSrc": "1536:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:7"
																},
																"nativeSrc": "1526:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:7",
														"nodeType": "YulTypedName",
														"src": "1206:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:7",
														"nodeType": "YulTypedName",
														"src": "1213:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:7",
														"nodeType": "YulTypedName",
														"src": "1225:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:7",
														"nodeType": "YulTypedName",
														"src": "1238:6:7",
														"type": ""
													}
												],
												"src": "1169:393:7"
											},
											{
												"body": {
													"nativeSrc": "1613:32:7",
													"nodeType": "YulBlock",
													"src": "1613:32:7",
													"statements": [
														{
															"nativeSrc": "1623:16:7",
															"nodeType": "YulAssignment",
															"src": "1623:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:7",
																"nodeType": "YulIdentifier",
																"src": "1634:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:7",
														"nodeType": "YulTypedName",
														"src": "1595:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:7",
														"nodeType": "YulTypedName",
														"src": "1605:7:7",
														"type": ""
													}
												],
												"src": "1568:77:7"
											},
											{
												"body": {
													"nativeSrc": "1683:28:7",
													"nodeType": "YulBlock",
													"src": "1683:28:7",
													"statements": [
														{
															"nativeSrc": "1693:12:7",
															"nodeType": "YulAssignment",
															"src": "1693:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:7",
																"nodeType": "YulIdentifier",
																"src": "1700:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:7",
														"nodeType": "YulTypedName",
														"src": "1669:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:7",
														"nodeType": "YulTypedName",
														"src": "1679:3:7",
														"type": ""
													}
												],
												"src": "1651:60:7"
											},
											{
												"body": {
													"nativeSrc": "1777:82:7",
													"nodeType": "YulBlock",
													"src": "1777:82:7",
													"statements": [
														{
															"nativeSrc": "1787:66:7",
															"nodeType": "YulAssignment",
															"src": "1787:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:7"
																				},
																				"nativeSrc": "1827:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:7"
																		},
																		"nativeSrc": "1818:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:7"
																},
																"nativeSrc": "1800:53:7",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:7",
														"nodeType": "YulTypedName",
														"src": "1757:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:7",
														"nodeType": "YulTypedName",
														"src": "1767:9:7",
														"type": ""
													}
												],
												"src": "1717:142:7"
											},
											{
												"body": {
													"nativeSrc": "1912:28:7",
													"nodeType": "YulBlock",
													"src": "1912:28:7",
													"statements": [
														{
															"nativeSrc": "1922:12:7",
															"nodeType": "YulAssignment",
															"src": "1922:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:7",
																"nodeType": "YulIdentifier",
																"src": "1929:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:7",
														"nodeType": "YulTypedName",
														"src": "1898:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:7",
														"nodeType": "YulTypedName",
														"src": "1908:3:7",
														"type": ""
													}
												],
												"src": "1865:75:7"
											},
											{
												"body": {
													"nativeSrc": "2022:193:7",
													"nodeType": "YulBlock",
													"src": "2022:193:7",
													"statements": [
														{
															"nativeSrc": "2032:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:7"
																},
																"nativeSrc": "2056:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:7",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:7"
																				},
																				"nativeSrc": "2145:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:7"
																				},
																				"nativeSrc": "2166:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:7"
																		},
																		"nativeSrc": "2117:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:7"
																},
																"nativeSrc": "2104:105:7",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:7"
															},
															"nativeSrc": "2104:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:7",
														"nodeType": "YulTypedName",
														"src": "1999:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:7",
														"nodeType": "YulTypedName",
														"src": "2005:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:7",
														"nodeType": "YulTypedName",
														"src": "2013:7:7",
														"type": ""
													}
												],
												"src": "1946:269:7"
											},
											{
												"body": {
													"nativeSrc": "2270:24:7",
													"nodeType": "YulBlock",
													"src": "2270:24:7",
													"statements": [
														{
															"nativeSrc": "2280:8:7",
															"nodeType": "YulAssignment",
															"src": "2280:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:7",
																"nodeType": "YulLiteral",
																"src": "2287:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:7",
														"nodeType": "YulTypedName",
														"src": "2266:3:7",
														"type": ""
													}
												],
												"src": "2221:73:7"
											},
											{
												"body": {
													"nativeSrc": "2353:136:7",
													"nodeType": "YulBlock",
													"src": "2353:136:7",
													"statements": [
														{
															"nativeSrc": "2363:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:7"
																},
																"nativeSrc": "2377:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:7"
																},
																"nativeSrc": "2418:65:7",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:7"
															},
															"nativeSrc": "2418:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:7",
														"nodeType": "YulTypedName",
														"src": "2339:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:7",
														"nodeType": "YulTypedName",
														"src": "2345:6:7",
														"type": ""
													}
												],
												"src": "2300:189:7"
											},
											{
												"body": {
													"nativeSrc": "2545:136:7",
													"nodeType": "YulBlock",
													"src": "2545:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:7",
																"nodeType": "YulBlock",
																"src": "2612:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:7"
																			},
																			"nativeSrc": "2626:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:7"
																		},
																		"nativeSrc": "2626:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:7"
																},
																"nativeSrc": "2562:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:7"
															},
															"nativeSrc": "2555:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:7",
																"nodeType": "YulBlock",
																"src": "2577:26:7",
																"statements": [
																	{
																		"nativeSrc": "2579:22:7",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:7"
																			},
																			"nativeSrc": "2588:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:7",
																"nodeType": "YulBlock",
																"src": "2559:2:7",
																"statements": []
															},
															"src": "2555:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:7",
														"nodeType": "YulTypedName",
														"src": "2533:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:7",
														"nodeType": "YulTypedName",
														"src": "2540:3:7",
														"type": ""
													}
												],
												"src": "2495:186:7"
											},
											{
												"body": {
													"nativeSrc": "2766:464:7",
													"nodeType": "YulBlock",
													"src": "2766:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:7",
																"nodeType": "YulBlock",
																"src": "2792:431:7",
																"statements": [
																	{
																		"nativeSrc": "2806:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:7"
																			},
																			"nativeSrc": "2822:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:7",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:7"
																					},
																					"nativeSrc": "2906:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:7"
																			},
																			"nativeSrc": "2892:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:7",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:7",
																			"nodeType": "YulBlock",
																			"src": "3093:27:7",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:7",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:7",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:7"
																			},
																			"nativeSrc": "3074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:7"
																		},
																		"nativeSrc": "3071:49:7",
																		"nodeType": "YulIf",
																		"src": "3071:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:7"
																							},
																							"nativeSrc": "3189:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:7"
																					},
																					"nativeSrc": "3175:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:7"
																			},
																			"nativeSrc": "3133:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:7"
																		},
																		"nativeSrc": "3133:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:7"
																},
																"nativeSrc": "2780:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:7"
															},
															"nativeSrc": "2777:446:7",
															"nodeType": "YulIf",
															"src": "2777:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:7",
														"nodeType": "YulTypedName",
														"src": "2742:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:7",
														"nodeType": "YulTypedName",
														"src": "2749:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:7",
														"nodeType": "YulTypedName",
														"src": "2754:10:7",
														"type": ""
													}
												],
												"src": "2687:543:7"
											},
											{
												"body": {
													"nativeSrc": "3299:54:7",
													"nodeType": "YulBlock",
													"src": "3299:54:7",
													"statements": [
														{
															"nativeSrc": "3309:37:7",
															"nodeType": "YulAssignment",
															"src": "3309:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:7"
																},
																"nativeSrc": "3330:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:7",
														"nodeType": "YulTypedName",
														"src": "3274:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:7",
														"nodeType": "YulTypedName",
														"src": "3280:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:7",
														"nodeType": "YulTypedName",
														"src": "3290:8:7",
														"type": ""
													}
												],
												"src": "3236:117:7"
											},
											{
												"body": {
													"nativeSrc": "3410:118:7",
													"nodeType": "YulBlock",
													"src": "3410:118:7",
													"statements": [
														{
															"nativeSrc": "3420:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:7"
																				},
																				"nativeSrc": "3465:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:7"
																				},
																				"nativeSrc": "3480:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:7"
																		},
																		"nativeSrc": "3436:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:7"
																},
																"nativeSrc": "3432:56:7",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:7",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:7",
															"nodeType": "YulAssignment",
															"src": "3497:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:7"
																},
																"nativeSrc": "3507:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:7",
														"nodeType": "YulTypedName",
														"src": "3387:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:7",
														"nodeType": "YulTypedName",
														"src": "3393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:7",
														"nodeType": "YulTypedName",
														"src": "3403:6:7",
														"type": ""
													}
												],
												"src": "3359:169:7"
											},
											{
												"body": {
													"nativeSrc": "3614:214:7",
													"nodeType": "YulBlock",
													"src": "3614:214:7",
													"statements": [
														{
															"nativeSrc": "3747:37:7",
															"nodeType": "YulAssignment",
															"src": "3747:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:7"
																},
																"nativeSrc": "3755:29:7",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:7"
																}
															]
														},
														{
															"nativeSrc": "3793:29:7",
															"nodeType": "YulAssignment",
															"src": "3793:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:7"
																		},
																		"nativeSrc": "3810:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:7"
																},
																"nativeSrc": "3801:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:7",
														"nodeType": "YulTypedName",
														"src": "3595:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:7",
														"nodeType": "YulTypedName",
														"src": "3601:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:7",
														"nodeType": "YulTypedName",
														"src": "3609:4:7",
														"type": ""
													}
												],
												"src": "3533:295:7"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:7",
													"nodeType": "YulBlock",
													"src": "3925:1303:7",
													"statements": [
														{
															"nativeSrc": "3936:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:7"
																},
																"nativeSrc": "3950:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:7",
																"nodeType": "YulBlock",
																"src": "4072:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:7"
																			},
																			"nativeSrc": "4074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:7"
																		},
																		"nativeSrc": "4074:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:7",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:7"
																},
																"nativeSrc": "4041:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:7"
															},
															"nativeSrc": "4038:56:7",
															"nodeType": "YulIf",
															"src": "4038:56:7"
														},
														{
															"nativeSrc": "4104:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:7"
																		},
																		"nativeSrc": "4144:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:7"
																},
																"nativeSrc": "4118:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:7"
																},
																"nativeSrc": "4203:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:7"
															},
															"nativeSrc": "4203:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:7"
														},
														{
															"nativeSrc": "4280:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:7",
																"nodeType": "YulLiteral",
																"src": "4297:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:7",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:7",
															"nodeType": "YulAssignment",
															"src": "4308:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:7",
																"nodeType": "YulLiteral",
																"src": "4321:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:7",
																		"nodeType": "YulBlock",
																		"src": "4372:611:7",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:7",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:7"
																							},
																							"nativeSrc": "4413:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:7"
																					},
																					"nativeSrc": "4401:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:7",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:7"
																					},
																					"nativeSrc": "4451:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:7",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:7",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:7",
																					"nodeType": "YulBlock",
																					"src": "4569:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:7"
																												},
																												"nativeSrc": "4608:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:7"
																										},
																										"nativeSrc": "4602:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:7"
																								},
																								"nativeSrc": "4587:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:7"
																							},
																							"nativeSrc": "4587:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:7"
																						},
																						{
																							"nativeSrc": "4646:24:7",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:7",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:7"
																								},
																								"nativeSrc": "4656:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:7",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:7",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:7"
																								},
																								"nativeSrc": "4700:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:7"
																					},
																					"nativeSrc": "4532:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:7"
																				},
																				"nativeSrc": "4524:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:7",
																					"nodeType": "YulBlock",
																					"src": "4547:21:7",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:7",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:7",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:7"
																								},
																								"nativeSrc": "4554:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:7",
																					"nodeType": "YulBlock",
																					"src": "4528:3:7",
																					"statements": []
																				},
																				"src": "4524:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:7",
																					"nodeType": "YulBlock",
																					"src": "4768:156:7",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:7"
																										},
																										"nativeSrc": "4809:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:7"
																								},
																								"nativeSrc": "4803:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:7",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:7",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:7"
																												},
																												"nativeSrc": "4891:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:7"
																										},
																										"nativeSrc": "4861:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:7"
																								},
																								"nativeSrc": "4846:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:7"
																							},
																							"nativeSrc": "4846:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:7"
																					},
																					"nativeSrc": "4748:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:7"
																				},
																				"nativeSrc": "4745:179:7",
																				"nodeType": "YulIf",
																				"src": "4745:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:7",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:7"
																									},
																									"nativeSrc": "4954:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:7",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:7"
																							},
																							"nativeSrc": "4950:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:7"
																					},
																					"nativeSrc": "4937:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:7"
																				},
																				"nativeSrc": "4937:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:7"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:7",
																	"nodeType": "YulCase",
																	"src": "4365:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:7",
																		"nodeType": "YulBlock",
																		"src": "5000:222:7",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:7",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:7",
																					"nodeType": "YulBlock",
																					"src": "5051:67:7",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:7",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:7"
																										},
																										"nativeSrc": "5084:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:7"
																								},
																								"nativeSrc": "5078:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:7"
																				},
																				"nativeSrc": "5041:77:7",
																				"nodeType": "YulIf",
																				"src": "5041:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:7"
																							},
																							"nativeSrc": "5144:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:7"
																					},
																					"nativeSrc": "5131:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:7"
																				},
																				"nativeSrc": "5131:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:7"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:7",
																	"nodeType": "YulCase",
																	"src": "4992:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:7"
																},
																"nativeSrc": "4342:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:7"
															},
															"nativeSrc": "4335:887:7",
															"nodeType": "YulSwitch",
															"src": "4335:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:7",
														"nodeType": "YulTypedName",
														"src": "3914:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:7",
														"nodeType": "YulTypedName",
														"src": "3920:3:7",
														"type": ""
													}
												],
												"src": "3833:1395:7"
											},
											{
												"body": {
													"nativeSrc": "5274:35:7",
													"nodeType": "YulBlock",
													"src": "5274:35:7",
													"statements": [
														{
															"nativeSrc": "5284:19:7",
															"nodeType": "YulAssignment",
															"src": "5284:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5300:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5300:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5294:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5294:5:7"
																},
																"nativeSrc": "5294:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5294:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5284:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5284:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "5234:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5267:6:7",
														"nodeType": "YulTypedName",
														"src": "5267:6:7",
														"type": ""
													}
												],
												"src": "5234:75:7"
											},
											{
												"body": {
													"nativeSrc": "5404:28:7",
													"nodeType": "YulBlock",
													"src": "5404:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5421:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5421:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5424:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5424:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:7"
																},
																"nativeSrc": "5414:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5414:12:7"
															},
															"nativeSrc": "5414:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5414:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "5315:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5315:117:7"
											},
											{
												"body": {
													"nativeSrc": "5527:28:7",
													"nodeType": "YulBlock",
													"src": "5527:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5544:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5544:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5547:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5547:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5537:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:7"
																},
																"nativeSrc": "5537:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5537:12:7"
															},
															"nativeSrc": "5537:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5537:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "5438:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5438:117:7"
											},
											{
												"body": {
													"nativeSrc": "5650:28:7",
													"nodeType": "YulBlock",
													"src": "5650:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5667:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5670:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5670:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5660:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5660:6:7"
																},
																"nativeSrc": "5660:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5660:12:7"
															},
															"nativeSrc": "5660:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5660:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5561:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5561:117:7"
											},
											{
												"body": {
													"nativeSrc": "5773:28:7",
													"nodeType": "YulBlock",
													"src": "5773:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5790:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5790:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5793:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5793:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5783:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5783:6:7"
																},
																"nativeSrc": "5783:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5783:12:7"
															},
															"nativeSrc": "5783:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5783:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5684:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5684:117:7"
											},
											{
												"body": {
													"nativeSrc": "5855:54:7",
													"nodeType": "YulBlock",
													"src": "5855:54:7",
													"statements": [
														{
															"nativeSrc": "5865:38:7",
															"nodeType": "YulAssignment",
															"src": "5865:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5883:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5883:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5890:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5890:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5879:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5879:3:7"
																		},
																		"nativeSrc": "5879:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5879:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5899:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5899:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5895:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5895:3:7"
																		},
																		"nativeSrc": "5895:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5895:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5875:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5875:3:7"
																},
																"nativeSrc": "5875:28:7",
																"nodeType": "YulFunctionCall",
																"src": "5875:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5865:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5865:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "5807:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5838:5:7",
														"nodeType": "YulTypedName",
														"src": "5838:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5848:6:7",
														"nodeType": "YulTypedName",
														"src": "5848:6:7",
														"type": ""
													}
												],
												"src": "5807:102:7"
											},
											{
												"body": {
													"nativeSrc": "5958:238:7",
													"nodeType": "YulBlock",
													"src": "5958:238:7",
													"statements": [
														{
															"nativeSrc": "5968:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5968:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5990:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5990:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6020:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6020:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5998:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "5998:21:7"
																		},
																		"nativeSrc": "5998:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5998:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5986:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5986:3:7"
																},
																"nativeSrc": "5986:40:7",
																"nodeType": "YulFunctionCall",
																"src": "5986:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5972:10:7",
																	"nodeType": "YulTypedName",
																	"src": "5972:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6137:22:7",
																"nodeType": "YulBlock",
																"src": "6137:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6139:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6139:16:7"
																			},
																			"nativeSrc": "6139:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6139:18:7"
																		},
																		"nativeSrc": "6139:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6139:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6080:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "6080:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6092:18:7",
																				"nodeType": "YulLiteral",
																				"src": "6092:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6077:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6077:2:7"
																		},
																		"nativeSrc": "6077:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6077:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6116:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "6116:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6128:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6128:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6113:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6113:2:7"
																		},
																		"nativeSrc": "6113:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6113:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6074:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6074:2:7"
																},
																"nativeSrc": "6074:62:7",
																"nodeType": "YulFunctionCall",
																"src": "6074:62:7"
															},
															"nativeSrc": "6071:88:7",
															"nodeType": "YulIf",
															"src": "6071:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6175:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6175:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6179:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "6179:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6168:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6168:6:7"
																},
																"nativeSrc": "6168:22:7",
																"nodeType": "YulFunctionCall",
																"src": "6168:22:7"
															},
															"nativeSrc": "6168:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "6168:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5915:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5944:6:7",
														"nodeType": "YulTypedName",
														"src": "5944:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5952:4:7",
														"nodeType": "YulTypedName",
														"src": "5952:4:7",
														"type": ""
													}
												],
												"src": "5915:281:7"
											},
											{
												"body": {
													"nativeSrc": "6243:88:7",
													"nodeType": "YulBlock",
													"src": "6243:88:7",
													"statements": [
														{
															"nativeSrc": "6253:30:7",
															"nodeType": "YulAssignment",
															"src": "6253:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6263:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "6263:18:7"
																},
																"nativeSrc": "6263:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6263:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6253:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6253:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6312:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6312:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6320:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6320:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6292:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "6292:19:7"
																},
																"nativeSrc": "6292:33:7",
																"nodeType": "YulFunctionCall",
																"src": "6292:33:7"
															},
															"nativeSrc": "6292:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "6292:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6202:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6227:4:7",
														"nodeType": "YulTypedName",
														"src": "6227:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6236:6:7",
														"nodeType": "YulTypedName",
														"src": "6236:6:7",
														"type": ""
													}
												],
												"src": "6202:129:7"
											},
											{
												"body": {
													"nativeSrc": "6404:241:7",
													"nodeType": "YulBlock",
													"src": "6404:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6509:22:7",
																"nodeType": "YulBlock",
																"src": "6509:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6511:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6511:16:7"
																			},
																			"nativeSrc": "6511:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6511:18:7"
																		},
																		"nativeSrc": "6511:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6511:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6481:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6481:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6489:18:7",
																		"nodeType": "YulLiteral",
																		"src": "6489:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6478:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6478:2:7"
																},
																"nativeSrc": "6478:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6478:30:7"
															},
															"nativeSrc": "6475:56:7",
															"nodeType": "YulIf",
															"src": "6475:56:7"
														},
														{
															"nativeSrc": "6541:37:7",
															"nodeType": "YulAssignment",
															"src": "6541:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6571:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6571:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6549:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "6549:21:7"
																},
																"nativeSrc": "6549:29:7",
																"nodeType": "YulFunctionCall",
																"src": "6549:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6541:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6541:4:7"
																}
															]
														},
														{
															"nativeSrc": "6615:23:7",
															"nodeType": "YulAssignment",
															"src": "6615:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6627:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6627:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6633:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6633:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6623:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6623:3:7"
																},
																"nativeSrc": "6623:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6623:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6615:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6615:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "6337:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6388:6:7",
														"nodeType": "YulTypedName",
														"src": "6388:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6399:4:7",
														"nodeType": "YulTypedName",
														"src": "6399:4:7",
														"type": ""
													}
												],
												"src": "6337:308:7"
											},
											{
												"body": {
													"nativeSrc": "6713:77:7",
													"nodeType": "YulBlock",
													"src": "6713:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6730:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6730:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6735:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6735:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6740:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6740:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6724:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6724:5:7"
																},
																"nativeSrc": "6724:23:7",
																"nodeType": "YulFunctionCall",
																"src": "6724:23:7"
															},
															"nativeSrc": "6724:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "6724:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6767:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6767:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6772:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6772:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6763:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6763:3:7"
																		},
																		"nativeSrc": "6763:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6763:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6781:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6781:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6756:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6756:6:7"
																},
																"nativeSrc": "6756:27:7",
																"nodeType": "YulFunctionCall",
																"src": "6756:27:7"
															},
															"nativeSrc": "6756:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "6756:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6651:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6695:3:7",
														"nodeType": "YulTypedName",
														"src": "6695:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6700:3:7",
														"nodeType": "YulTypedName",
														"src": "6700:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6705:6:7",
														"nodeType": "YulTypedName",
														"src": "6705:6:7",
														"type": ""
													}
												],
												"src": "6651:139:7"
											},
											{
												"body": {
													"nativeSrc": "6891:339:7",
													"nodeType": "YulBlock",
													"src": "6891:339:7",
													"statements": [
														{
															"nativeSrc": "6901:75:7",
															"nodeType": "YulAssignment",
															"src": "6901:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6968:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6968:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "6926:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "6926:41:7"
																		},
																		"nativeSrc": "6926:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6926:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6910:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "6910:15:7"
																},
																"nativeSrc": "6910:66:7",
																"nodeType": "YulFunctionCall",
																"src": "6910:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6901:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6901:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6992:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6992:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6999:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6999:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6985:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6985:6:7"
																},
																"nativeSrc": "6985:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6985:21:7"
															},
															"nativeSrc": "6985:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "6985:21:7"
														},
														{
															"nativeSrc": "7015:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7015:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7030:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7030:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7037:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7037:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7026:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7026:3:7"
																},
																"nativeSrc": "7026:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7026:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7019:3:7",
																	"nodeType": "YulTypedName",
																	"src": "7019:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7080:83:7",
																"nodeType": "YulBlock",
																"src": "7080:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7082:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7082:77:7"
																			},
																			"nativeSrc": "7082:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7082:79:7"
																		},
																		"nativeSrc": "7082:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7082:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7061:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7061:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7066:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7066:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7057:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7057:3:7"
																		},
																		"nativeSrc": "7057:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7057:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7075:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7075:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7054:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7054:2:7"
																},
																"nativeSrc": "7054:25:7",
																"nodeType": "YulFunctionCall",
																"src": "7054:25:7"
															},
															"nativeSrc": "7051:112:7",
															"nodeType": "YulIf",
															"src": "7051:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7207:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7207:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7212:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7212:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7217:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7217:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7172:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "7172:34:7"
																},
																"nativeSrc": "7172:52:7",
																"nodeType": "YulFunctionCall",
																"src": "7172:52:7"
															},
															"nativeSrc": "7172:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "7172:52:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "6796:434:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6864:3:7",
														"nodeType": "YulTypedName",
														"src": "6864:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6869:6:7",
														"nodeType": "YulTypedName",
														"src": "6869:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6877:3:7",
														"nodeType": "YulTypedName",
														"src": "6877:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6885:5:7",
														"nodeType": "YulTypedName",
														"src": "6885:5:7",
														"type": ""
													}
												],
												"src": "6796:434:7"
											},
											{
												"body": {
													"nativeSrc": "7323:282:7",
													"nodeType": "YulBlock",
													"src": "7323:282:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7372:83:7",
																"nodeType": "YulBlock",
																"src": "7372:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7374:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7374:77:7"
																			},
																			"nativeSrc": "7374:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7374:79:7"
																		},
																		"nativeSrc": "7374:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7374:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7351:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7351:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7359:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7359:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7347:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7347:3:7"
																				},
																				"nativeSrc": "7347:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7347:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7366:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7366:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7343:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7343:3:7"
																		},
																		"nativeSrc": "7343:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7343:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7336:6:7"
																},
																"nativeSrc": "7336:35:7",
																"nodeType": "YulFunctionCall",
																"src": "7336:35:7"
															},
															"nativeSrc": "7333:122:7",
															"nodeType": "YulIf",
															"src": "7333:122:7"
														},
														{
															"nativeSrc": "7464:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7464:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7484:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7484:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7478:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7478:5:7"
																},
																"nativeSrc": "7478:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7478:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7468:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7468:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7500:99:7",
															"nodeType": "YulAssignment",
															"src": "7500:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7572:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7572:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7580:4:7",
																				"nodeType": "YulLiteral",
																				"src": "7580:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7568:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7568:3:7"
																		},
																		"nativeSrc": "7568:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7568:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7587:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7587:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7595:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7595:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "7509:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7509:58:7"
																},
																"nativeSrc": "7509:90:7",
																"nodeType": "YulFunctionCall",
																"src": "7509:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7500:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7500:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "7250:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7301:6:7",
														"nodeType": "YulTypedName",
														"src": "7301:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7309:3:7",
														"nodeType": "YulTypedName",
														"src": "7309:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7317:5:7",
														"nodeType": "YulTypedName",
														"src": "7317:5:7",
														"type": ""
													}
												],
												"src": "7250:355:7"
											},
											{
												"body": {
													"nativeSrc": "7654:79:7",
													"nodeType": "YulBlock",
													"src": "7654:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7711:16:7",
																"nodeType": "YulBlock",
																"src": "7711:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7720:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7720:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7723:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7723:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7713:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7713:6:7"
																			},
																			"nativeSrc": "7713:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7713:12:7"
																		},
																		"nativeSrc": "7713:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7713:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7677:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7677:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7702:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7702:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "7684:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "7684:17:7"
																				},
																				"nativeSrc": "7684:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7684:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7674:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7674:2:7"
																		},
																		"nativeSrc": "7674:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7674:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7667:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7667:6:7"
																},
																"nativeSrc": "7667:43:7",
																"nodeType": "YulFunctionCall",
																"src": "7667:43:7"
															},
															"nativeSrc": "7664:63:7",
															"nodeType": "YulIf",
															"src": "7664:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "7611:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7647:5:7",
														"nodeType": "YulTypedName",
														"src": "7647:5:7",
														"type": ""
													}
												],
												"src": "7611:122:7"
											},
											{
												"body": {
													"nativeSrc": "7802:80:7",
													"nodeType": "YulBlock",
													"src": "7802:80:7",
													"statements": [
														{
															"nativeSrc": "7812:22:7",
															"nodeType": "YulAssignment",
															"src": "7812:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7827:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7827:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7821:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7821:5:7"
																},
																"nativeSrc": "7821:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7821:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7812:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7812:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7870:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7870:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7843:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "7843:26:7"
																},
																"nativeSrc": "7843:33:7",
																"nodeType": "YulFunctionCall",
																"src": "7843:33:7"
															},
															"nativeSrc": "7843:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "7843:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7739:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7780:6:7",
														"nodeType": "YulTypedName",
														"src": "7780:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7788:3:7",
														"nodeType": "YulTypedName",
														"src": "7788:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7796:5:7",
														"nodeType": "YulTypedName",
														"src": "7796:5:7",
														"type": ""
													}
												],
												"src": "7739:143:7"
											},
											{
												"body": {
													"nativeSrc": "8019:878:7",
													"nodeType": "YulBlock",
													"src": "8019:878:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8065:83:7",
																"nodeType": "YulBlock",
																"src": "8065:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8067:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8067:77:7"
																			},
																			"nativeSrc": "8067:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8067:79:7"
																		},
																		"nativeSrc": "8067:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8067:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8040:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8040:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8049:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8049:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8036:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8036:3:7"
																		},
																		"nativeSrc": "8036:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8036:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8061:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8061:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8032:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8032:3:7"
																},
																"nativeSrc": "8032:32:7",
																"nodeType": "YulFunctionCall",
																"src": "8032:32:7"
															},
															"nativeSrc": "8029:119:7",
															"nodeType": "YulIf",
															"src": "8029:119:7"
														},
														{
															"nativeSrc": "8158:291:7",
															"nodeType": "YulBlock",
															"src": "8158:291:7",
															"statements": [
																{
																	"nativeSrc": "8173:38:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8173:38:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8197:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8197:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8208:1:7",
																						"nodeType": "YulLiteral",
																						"src": "8208:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8193:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8193:3:7"
																				},
																				"nativeSrc": "8193:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8193:17:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8187:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8187:5:7"
																		},
																		"nativeSrc": "8187:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8187:24:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8177:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8177:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8258:83:7",
																		"nodeType": "YulBlock",
																		"src": "8258:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8260:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "8260:77:7"
																					},
																					"nativeSrc": "8260:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8260:79:7"
																				},
																				"nativeSrc": "8260:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "8260:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8230:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8230:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8238:18:7",
																				"nodeType": "YulLiteral",
																				"src": "8238:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8227:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8227:2:7"
																		},
																		"nativeSrc": "8227:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8227:30:7"
																	},
																	"nativeSrc": "8224:117:7",
																	"nodeType": "YulIf",
																	"src": "8224:117:7"
																},
																{
																	"nativeSrc": "8355:84:7",
																	"nodeType": "YulAssignment",
																	"src": "8355:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8411:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8411:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8422:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8422:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8407:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8407:3:7"
																				},
																				"nativeSrc": "8407:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8407:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8431:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8431:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "8365:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "8365:41:7"
																		},
																		"nativeSrc": "8365:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8365:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8355:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8355:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8459:292:7",
															"nodeType": "YulBlock",
															"src": "8459:292:7",
															"statements": [
																{
																	"nativeSrc": "8474:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8474:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8498:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8498:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8509:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8509:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8494:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8494:3:7"
																				},
																				"nativeSrc": "8494:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8494:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8488:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8488:5:7"
																		},
																		"nativeSrc": "8488:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8488:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8478:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8478:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8560:83:7",
																		"nodeType": "YulBlock",
																		"src": "8560:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8562:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "8562:77:7"
																					},
																					"nativeSrc": "8562:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8562:79:7"
																				},
																				"nativeSrc": "8562:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "8562:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8532:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8532:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8540:18:7",
																				"nodeType": "YulLiteral",
																				"src": "8540:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8529:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8529:2:7"
																		},
																		"nativeSrc": "8529:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8529:30:7"
																	},
																	"nativeSrc": "8526:117:7",
																	"nodeType": "YulIf",
																	"src": "8526:117:7"
																},
																{
																	"nativeSrc": "8657:84:7",
																	"nodeType": "YulAssignment",
																	"src": "8657:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8713:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8713:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8724:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8724:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8709:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8709:3:7"
																				},
																				"nativeSrc": "8709:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8709:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8733:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8733:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "8667:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "8667:41:7"
																		},
																		"nativeSrc": "8667:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8667:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8657:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8657:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8761:129:7",
															"nodeType": "YulBlock",
															"src": "8761:129:7",
															"statements": [
																{
																	"nativeSrc": "8776:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8776:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8790:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8790:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8780:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8780:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8806:74:7",
																	"nodeType": "YulAssignment",
																	"src": "8806:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8852:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8852:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8863:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8863:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8848:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8848:3:7"
																				},
																				"nativeSrc": "8848:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8848:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8872:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8872:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8816:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "8816:31:7"
																		},
																		"nativeSrc": "8816:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8816:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8806:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8806:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nativeSrc": "7888:1009:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7973:9:7",
														"nodeType": "YulTypedName",
														"src": "7973:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7984:7:7",
														"nodeType": "YulTypedName",
														"src": "7984:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7996:6:7",
														"nodeType": "YulTypedName",
														"src": "7996:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8004:6:7",
														"nodeType": "YulTypedName",
														"src": "8004:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8012:6:7",
														"nodeType": "YulTypedName",
														"src": "8012:6:7",
														"type": ""
													}
												],
												"src": "7888:1009:7"
											},
											{
												"body": {
													"nativeSrc": "8931:152:7",
													"nodeType": "YulBlock",
													"src": "8931:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8948:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8948:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8951:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8951:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8941:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8941:6:7"
																},
																"nativeSrc": "8941:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8941:88:7"
															},
															"nativeSrc": "8941:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8941:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9045:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9045:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9048:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9048:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9038:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9038:6:7"
																},
																"nativeSrc": "9038:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9038:15:7"
															},
															"nativeSrc": "9038:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9038:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9069:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9069:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9072:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9072:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9062:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9062:6:7"
																},
																"nativeSrc": "9062:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9062:15:7"
															},
															"nativeSrc": "9062:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9062:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8903:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8903:180:7"
											},
											{
												"body": {
													"nativeSrc": "9140:51:7",
													"nodeType": "YulBlock",
													"src": "9140:51:7",
													"statements": [
														{
															"nativeSrc": "9150:34:7",
															"nodeType": "YulAssignment",
															"src": "9150:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9175:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9175:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9178:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9178:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9171:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9171:3:7"
																},
																"nativeSrc": "9171:13:7",
																"nodeType": "YulFunctionCall",
																"src": "9171:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "9150:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "9150:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "9089:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9121:5:7",
														"nodeType": "YulTypedName",
														"src": "9121:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "9131:8:7",
														"nodeType": "YulTypedName",
														"src": "9131:8:7",
														"type": ""
													}
												],
												"src": "9089:102:7"
											},
											{
												"body": {
													"nativeSrc": "9270:775:7",
													"nodeType": "YulBlock",
													"src": "9270:775:7",
													"statements": [
														{
															"nativeSrc": "9280:15:7",
															"nodeType": "YulAssignment",
															"src": "9280:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "9289:6:7",
																"nodeType": "YulIdentifier",
																"src": "9289:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9280:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9280:5:7"
																}
															]
														},
														{
															"nativeSrc": "9304:14:7",
															"nodeType": "YulAssignment",
															"src": "9304:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "9313:5:7",
																"nodeType": "YulIdentifier",
																"src": "9313:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9304:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9304:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9362:677:7",
																"nodeType": "YulBlock",
																"src": "9362:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "9450:22:7",
																			"nodeType": "YulBlock",
																			"src": "9450:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9452:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "9452:16:7"
																						},
																						"nativeSrc": "9452:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9452:18:7"
																					},
																					"nativeSrc": "9452:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "9452:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9428:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "9428:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "9438:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "9438:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "9443:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9443:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "9434:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "9434:3:7"
																					},
																					"nativeSrc": "9434:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9434:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9425:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "9425:2:7"
																			},
																			"nativeSrc": "9425:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9425:24:7"
																		},
																		"nativeSrc": "9422:50:7",
																		"nodeType": "YulIf",
																		"src": "9422:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "9517:419:7",
																			"nodeType": "YulBlock",
																			"src": "9517:419:7",
																			"statements": [
																				{
																					"nativeSrc": "9897:25:7",
																					"nodeType": "YulAssignment",
																					"src": "9897:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "9910:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "9910:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "9917:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "9917:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "9906:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "9906:3:7"
																						},
																						"nativeSrc": "9906:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9906:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "9897:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "9897:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9492:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "9492:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9502:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9502:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9488:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9488:3:7"
																			},
																			"nativeSrc": "9488:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9488:16:7"
																		},
																		"nativeSrc": "9485:451:7",
																		"nodeType": "YulIf",
																		"src": "9485:451:7"
																	},
																	{
																		"nativeSrc": "9949:23:7",
																		"nodeType": "YulAssignment",
																		"src": "9949:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9961:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "9961:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "9967:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "9967:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "9957:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9957:3:7"
																			},
																			"nativeSrc": "9957:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9957:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "9949:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9949:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9985:44:7",
																		"nodeType": "YulAssignment",
																		"src": "9985:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10020:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "10020:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "9997:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "9997:22:7"
																			},
																			"nativeSrc": "9997:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9997:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "9985:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "9985:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9338:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "9338:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9348:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9348:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9335:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9335:2:7"
																},
																"nativeSrc": "9335:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9335:15:7"
															},
															"nativeSrc": "9327:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9351:2:7",
																"nodeType": "YulBlock",
																"src": "9351:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "9331:3:7",
																"nodeType": "YulBlock",
																"src": "9331:3:7",
																"statements": []
															},
															"src": "9327:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "9197:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "9225:6:7",
														"nodeType": "YulTypedName",
														"src": "9225:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "9233:5:7",
														"nodeType": "YulTypedName",
														"src": "9233:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9240:8:7",
														"nodeType": "YulTypedName",
														"src": "9240:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9250:3:7",
														"nodeType": "YulTypedName",
														"src": "9250:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9258:5:7",
														"nodeType": "YulTypedName",
														"src": "9258:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "9265:4:7",
														"nodeType": "YulTypedName",
														"src": "9265:4:7",
														"type": ""
													}
												],
												"src": "9197:848:7"
											},
											{
												"body": {
													"nativeSrc": "10111:1013:7",
													"nodeType": "YulBlock",
													"src": "10111:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10306:20:7",
																"nodeType": "YulBlock",
																"src": "10306:20:7",
																"statements": [
																	{
																		"nativeSrc": "10308:10:7",
																		"nodeType": "YulAssignment",
																		"src": "10308:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10317:1:7",
																			"nodeType": "YulLiteral",
																			"src": "10317:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10308:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10308:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10319:5:7",
																		"nodeType": "YulLeave",
																		"src": "10319:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10296:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "10296:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10289:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10289:6:7"
																},
																"nativeSrc": "10289:16:7",
																"nodeType": "YulFunctionCall",
																"src": "10289:16:7"
															},
															"nativeSrc": "10286:40:7",
															"nodeType": "YulIf",
															"src": "10286:40:7"
														},
														{
															"body": {
																"nativeSrc": "10351:20:7",
																"nodeType": "YulBlock",
																"src": "10351:20:7",
																"statements": [
																	{
																		"nativeSrc": "10353:10:7",
																		"nodeType": "YulAssignment",
																		"src": "10353:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10362:1:7",
																			"nodeType": "YulLiteral",
																			"src": "10362:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10353:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10353:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10364:5:7",
																		"nodeType": "YulLeave",
																		"src": "10364:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10345:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10345:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10338:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10338:6:7"
																},
																"nativeSrc": "10338:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10338:12:7"
															},
															"nativeSrc": "10335:36:7",
															"nodeType": "YulIf",
															"src": "10335:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10481:20:7",
																		"nodeType": "YulBlock",
																		"src": "10481:20:7",
																		"statements": [
																			{
																				"nativeSrc": "10483:10:7",
																				"nodeType": "YulAssignment",
																				"src": "10483:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10492:1:7",
																					"nodeType": "YulLiteral",
																					"src": "10492:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10483:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "10483:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "10494:5:7",
																				"nodeType": "YulLeave",
																				"src": "10494:5:7"
																			}
																		]
																	},
																	"nativeSrc": "10474:27:7",
																	"nodeType": "YulCase",
																	"src": "10474:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10479:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10479:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10525:176:7",
																		"nodeType": "YulBlock",
																		"src": "10525:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "10560:22:7",
																					"nodeType": "YulBlock",
																					"src": "10560:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10562:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "10562:16:7"
																								},
																								"nativeSrc": "10562:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "10562:18:7"
																							},
																							"nativeSrc": "10562:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "10562:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "10545:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "10545:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10555:3:7",
																							"nodeType": "YulLiteral",
																							"src": "10555:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10542:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "10542:2:7"
																					},
																					"nativeSrc": "10542:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "10542:17:7"
																				},
																				"nativeSrc": "10539:43:7",
																				"nodeType": "YulIf",
																				"src": "10539:43:7"
																			},
																			{
																				"nativeSrc": "10595:25:7",
																				"nodeType": "YulAssignment",
																				"src": "10595:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10608:1:7",
																							"nodeType": "YulLiteral",
																							"src": "10608:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "10611:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "10611:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "10604:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "10604:3:7"
																					},
																					"nativeSrc": "10604:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "10604:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10595:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "10595:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10651:22:7",
																					"nodeType": "YulBlock",
																					"src": "10651:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10653:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "10653:16:7"
																								},
																								"nativeSrc": "10653:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "10653:18:7"
																							},
																							"nativeSrc": "10653:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "10653:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "10639:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "10639:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "10646:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "10646:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10636:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "10636:2:7"
																					},
																					"nativeSrc": "10636:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "10636:14:7"
																				},
																				"nativeSrc": "10633:40:7",
																				"nodeType": "YulIf",
																				"src": "10633:40:7"
																			},
																			{
																				"nativeSrc": "10686:5:7",
																				"nodeType": "YulLeave",
																				"src": "10686:5:7"
																			}
																		]
																	},
																	"nativeSrc": "10510:191:7",
																	"nodeType": "YulCase",
																	"src": "10510:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10515:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10515:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "10431:4:7",
																"nodeType": "YulIdentifier",
																"src": "10431:4:7"
															},
															"nativeSrc": "10424:277:7",
															"nodeType": "YulSwitch",
															"src": "10424:277:7"
														},
														{
															"body": {
																"nativeSrc": "10833:123:7",
																"nodeType": "YulBlock",
																"src": "10833:123:7",
																"statements": [
																	{
																		"nativeSrc": "10847:28:7",
																		"nodeType": "YulAssignment",
																		"src": "10847:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10860:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "10860:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "10866:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "10866:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "10856:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "10856:3:7"
																			},
																			"nativeSrc": "10856:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10856:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10847:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10847:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "10906:22:7",
																			"nodeType": "YulBlock",
																			"src": "10906:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "10908:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "10908:16:7"
																						},
																						"nativeSrc": "10908:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "10908:18:7"
																					},
																					"nativeSrc": "10908:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "10908:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "10894:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "10894:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "10901:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10901:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "10891:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "10891:2:7"
																			},
																			"nativeSrc": "10891:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10891:14:7"
																		},
																		"nativeSrc": "10888:40:7",
																		"nodeType": "YulIf",
																		"src": "10888:40:7"
																	},
																	{
																		"nativeSrc": "10941:5:7",
																		"nodeType": "YulLeave",
																		"src": "10941:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10736:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "10736:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10742:2:7",
																						"nodeType": "YulLiteral",
																						"src": "10742:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10733:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "10733:2:7"
																				},
																				"nativeSrc": "10733:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10733:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10750:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "10750:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10760:2:7",
																						"nodeType": "YulLiteral",
																						"src": "10760:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10747:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "10747:2:7"
																				},
																				"nativeSrc": "10747:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10747:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10729:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10729:3:7"
																		},
																		"nativeSrc": "10729:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10729:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10785:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "10785:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10791:3:7",
																						"nodeType": "YulLiteral",
																						"src": "10791:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10782:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "10782:2:7"
																				},
																				"nativeSrc": "10782:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10782:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10800:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "10800:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10810:2:7",
																						"nodeType": "YulLiteral",
																						"src": "10810:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10797:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "10797:2:7"
																				},
																				"nativeSrc": "10797:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10797:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10778:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10778:3:7"
																		},
																		"nativeSrc": "10778:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10778:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10713:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "10713:2:7"
																},
																"nativeSrc": "10713:111:7",
																"nodeType": "YulFunctionCall",
																"src": "10713:111:7"
															},
															"nativeSrc": "10710:246:7",
															"nodeType": "YulIf",
															"src": "10710:246:7"
														},
														{
															"nativeSrc": "10966:57:7",
															"nodeType": "YulAssignment",
															"src": "10966:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11000:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11000:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11003:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11003:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11009:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "11009:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "11019:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11019:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "10981:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "10981:18:7"
																},
																"nativeSrc": "10981:42:7",
																"nodeType": "YulFunctionCall",
																"src": "10981:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10966:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "10966:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "10973:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10973:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11062:22:7",
																"nodeType": "YulBlock",
																"src": "11062:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11064:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11064:16:7"
																			},
																			"nativeSrc": "11064:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11064:18:7"
																		},
																		"nativeSrc": "11064:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11064:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11039:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11039:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "11050:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "11050:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "11055:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11055:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "11046:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11046:3:7"
																		},
																		"nativeSrc": "11046:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11046:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11036:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11036:2:7"
																},
																"nativeSrc": "11036:25:7",
																"nodeType": "YulFunctionCall",
																"src": "11036:25:7"
															},
															"nativeSrc": "11033:51:7",
															"nodeType": "YulIf",
															"src": "11033:51:7"
														},
														{
															"nativeSrc": "11093:25:7",
															"nodeType": "YulAssignment",
															"src": "11093:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11106:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11106:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11113:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11113:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11102:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11102:3:7"
																},
																"nativeSrc": "11102:16:7",
																"nodeType": "YulFunctionCall",
																"src": "11102:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11093:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11093:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "10051:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10081:4:7",
														"nodeType": "YulTypedName",
														"src": "10081:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10087:8:7",
														"nodeType": "YulTypedName",
														"src": "10087:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "10097:3:7",
														"nodeType": "YulTypedName",
														"src": "10097:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10105:5:7",
														"nodeType": "YulTypedName",
														"src": "10105:5:7",
														"type": ""
													}
												],
												"src": "10051:1073:7"
											},
											{
												"body": {
													"nativeSrc": "11196:219:7",
													"nodeType": "YulBlock",
													"src": "11196:219:7",
													"statements": [
														{
															"nativeSrc": "11206:31:7",
															"nodeType": "YulAssignment",
															"src": "11206:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11232:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11232:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11214:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11214:17:7"
																},
																"nativeSrc": "11214:23:7",
																"nodeType": "YulFunctionCall",
																"src": "11214:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "11206:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11206:4:7"
																}
															]
														},
														{
															"nativeSrc": "11246:39:7",
															"nodeType": "YulAssignment",
															"src": "11246:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "11276:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "11276:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11258:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11258:17:7"
																},
																"nativeSrc": "11258:27:7",
																"nodeType": "YulFunctionCall",
																"src": "11258:27:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "11246:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "11246:8:7"
																}
															]
														},
														{
															"nativeSrc": "11295:113:7",
															"nodeType": "YulAssignment",
															"src": "11295:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11325:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11325:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11331:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "11331:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11341:66:7",
																		"nodeType": "YulLiteral",
																		"src": "11341:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "11304:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "11304:20:7"
																},
																"nativeSrc": "11304:104:7",
																"nodeType": "YulFunctionCall",
																"src": "11304:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11295:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11295:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "11130:285:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "11171:4:7",
														"nodeType": "YulTypedName",
														"src": "11171:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "11177:8:7",
														"nodeType": "YulTypedName",
														"src": "11177:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "11190:5:7",
														"nodeType": "YulTypedName",
														"src": "11190:5:7",
														"type": ""
													}
												],
												"src": "11130:285:7"
											},
											{
												"body": {
													"nativeSrc": "11469:362:7",
													"nodeType": "YulBlock",
													"src": "11469:362:7",
													"statements": [
														{
															"nativeSrc": "11479:25:7",
															"nodeType": "YulAssignment",
															"src": "11479:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11502:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11502:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11484:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11484:17:7"
																},
																"nativeSrc": "11484:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11484:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11479:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11479:1:7"
																}
															]
														},
														{
															"nativeSrc": "11513:25:7",
															"nodeType": "YulAssignment",
															"src": "11513:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11536:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11536:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11518:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11518:17:7"
																},
																"nativeSrc": "11518:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11518:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11513:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11513:1:7"
																}
															]
														},
														{
															"nativeSrc": "11547:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "11547:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11570:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11570:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11573:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11573:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11566:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11566:3:7"
																},
																"nativeSrc": "11566:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11566:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11551:11:7",
																	"nodeType": "YulTypedName",
																	"src": "11551:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11584:41:7",
															"nodeType": "YulAssignment",
															"src": "11584:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11613:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "11613:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11595:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11595:17:7"
																},
																"nativeSrc": "11595:30:7",
																"nodeType": "YulFunctionCall",
																"src": "11595:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11584:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "11584:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11802:22:7",
																"nodeType": "YulBlock",
																"src": "11802:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11804:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11804:16:7"
																			},
																			"nativeSrc": "11804:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11804:18:7"
																		},
																		"nativeSrc": "11804:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11804:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11735:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "11735:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11728:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "11728:6:7"
																				},
																				"nativeSrc": "11728:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11728:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11758:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "11758:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11765:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "11765:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11774:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "11774:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11761:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "11761:3:7"
																						},
																						"nativeSrc": "11761:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "11761:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11755:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "11755:2:7"
																				},
																				"nativeSrc": "11755:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11755:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11708:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "11708:2:7"
																		},
																		"nativeSrc": "11708:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11708:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11688:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11688:6:7"
																},
																"nativeSrc": "11688:113:7",
																"nodeType": "YulFunctionCall",
																"src": "11688:113:7"
															},
															"nativeSrc": "11685:139:7",
															"nodeType": "YulIf",
															"src": "11685:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11421:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11452:1:7",
														"nodeType": "YulTypedName",
														"src": "11452:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11455:1:7",
														"nodeType": "YulTypedName",
														"src": "11455:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11461:7:7",
														"nodeType": "YulTypedName",
														"src": "11461:7:7",
														"type": ""
													}
												],
												"src": "11421:410:7"
											},
											{
												"body": {
													"nativeSrc": "11933:73:7",
													"nodeType": "YulBlock",
													"src": "11933:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11950:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11950:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11955:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11955:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11943:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11943:6:7"
																},
																"nativeSrc": "11943:19:7",
																"nodeType": "YulFunctionCall",
																"src": "11943:19:7"
															},
															"nativeSrc": "11943:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "11943:19:7"
														},
														{
															"nativeSrc": "11971:29:7",
															"nodeType": "YulAssignment",
															"src": "11971:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11990:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11990:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11995:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11995:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11986:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11986:3:7"
																},
																"nativeSrc": "11986:14:7",
																"nodeType": "YulFunctionCall",
																"src": "11986:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11971:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "11971:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "11837:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11905:3:7",
														"nodeType": "YulTypedName",
														"src": "11905:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11910:6:7",
														"nodeType": "YulTypedName",
														"src": "11910:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11921:11:7",
														"nodeType": "YulTypedName",
														"src": "11921:11:7",
														"type": ""
													}
												],
												"src": "11837:169:7"
											},
											{
												"body": {
													"nativeSrc": "12118:69:7",
													"nodeType": "YulBlock",
													"src": "12118:69:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12140:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12140:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12148:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12148:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12136:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12136:3:7"
																		},
																		"nativeSrc": "12136:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12136:14:7"
																	},
																	{
																		"hexValue": "206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "12152:27:7",
																		"nodeType": "YulLiteral",
																		"src": "12152:27:7",
																		"type": "",
																		"value": " mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12129:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12129:6:7"
																},
																"nativeSrc": "12129:51:7",
																"nodeType": "YulFunctionCall",
																"src": "12129:51:7"
															},
															"nativeSrc": "12129:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "12129:51:7"
														}
													]
												},
												"name": "store_literal_in_memory_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051",
												"nativeSrc": "12012:175:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12110:6:7",
														"nodeType": "YulTypedName",
														"src": "12110:6:7",
														"type": ""
													}
												],
												"src": "12012:175:7"
											},
											{
												"body": {
													"nativeSrc": "12339:220:7",
													"nodeType": "YulBlock",
													"src": "12339:220:7",
													"statements": [
														{
															"nativeSrc": "12349:74:7",
															"nodeType": "YulAssignment",
															"src": "12349:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12415:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12415:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12420:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12420:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12356:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12356:58:7"
																},
																"nativeSrc": "12356:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12356:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12349:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12349:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12521:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12521:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051",
																	"nativeSrc": "12432:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12432:88:7"
																},
																"nativeSrc": "12432:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12432:93:7"
															},
															"nativeSrc": "12432:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12432:93:7"
														},
														{
															"nativeSrc": "12534:19:7",
															"nodeType": "YulAssignment",
															"src": "12534:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12545:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12545:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12550:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12550:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12541:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12541:3:7"
																},
																"nativeSrc": "12541:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12541:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12534:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12534:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12193:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12327:3:7",
														"nodeType": "YulTypedName",
														"src": "12327:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12335:3:7",
														"nodeType": "YulTypedName",
														"src": "12335:3:7",
														"type": ""
													}
												],
												"src": "12193:366:7"
											},
											{
												"body": {
													"nativeSrc": "12736:248:7",
													"nodeType": "YulBlock",
													"src": "12736:248:7",
													"statements": [
														{
															"nativeSrc": "12746:26:7",
															"nodeType": "YulAssignment",
															"src": "12746:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12758:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12758:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12769:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12769:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12754:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12754:3:7"
																},
																"nativeSrc": "12754:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12754:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12746:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12746:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12793:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12793:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12804:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12804:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12789:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12789:3:7"
																		},
																		"nativeSrc": "12789:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12789:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12812:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12812:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12818:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12818:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12808:3:7"
																		},
																		"nativeSrc": "12808:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12808:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12782:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12782:6:7"
																},
																"nativeSrc": "12782:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12782:47:7"
															},
															"nativeSrc": "12782:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12782:47:7"
														},
														{
															"nativeSrc": "12838:139:7",
															"nodeType": "YulAssignment",
															"src": "12838:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12972:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12972:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12846:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12846:124:7"
																},
																"nativeSrc": "12846:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12846:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12838:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12838:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12565:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12716:9:7",
														"nodeType": "YulTypedName",
														"src": "12716:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12731:4:7",
														"nodeType": "YulTypedName",
														"src": "12731:4:7",
														"type": ""
													}
												],
												"src": "12565:419:7"
											},
											{
												"body": {
													"nativeSrc": "13034:147:7",
													"nodeType": "YulBlock",
													"src": "13034:147:7",
													"statements": [
														{
															"nativeSrc": "13044:25:7",
															"nodeType": "YulAssignment",
															"src": "13044:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13067:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13067:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13049:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13049:17:7"
																},
																"nativeSrc": "13049:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13049:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13044:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13044:1:7"
																}
															]
														},
														{
															"nativeSrc": "13078:25:7",
															"nodeType": "YulAssignment",
															"src": "13078:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13101:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13101:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13083:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13083:17:7"
																},
																"nativeSrc": "13083:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13083:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13078:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13078:1:7"
																}
															]
														},
														{
															"nativeSrc": "13112:16:7",
															"nodeType": "YulAssignment",
															"src": "13112:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13123:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13123:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13126:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13126:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13119:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13119:3:7"
																},
																"nativeSrc": "13119:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13119:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13112:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13112:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13152:22:7",
																"nodeType": "YulBlock",
																"src": "13152:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13154:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13154:16:7"
																			},
																			"nativeSrc": "13154:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13154:18:7"
																		},
																		"nativeSrc": "13154:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13154:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13144:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13144:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13147:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13147:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13141:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "13141:2:7"
																},
																"nativeSrc": "13141:10:7",
																"nodeType": "YulFunctionCall",
																"src": "13141:10:7"
															},
															"nativeSrc": "13138:36:7",
															"nodeType": "YulIf",
															"src": "13138:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12990:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13021:1:7",
														"nodeType": "YulTypedName",
														"src": "13021:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13024:1:7",
														"nodeType": "YulTypedName",
														"src": "13024:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13030:3:7",
														"nodeType": "YulTypedName",
														"src": "13030:3:7",
														"type": ""
													}
												],
												"src": "12990:191:7"
											},
											{
												"body": {
													"nativeSrc": "13232:81:7",
													"nodeType": "YulBlock",
													"src": "13232:81:7",
													"statements": [
														{
															"nativeSrc": "13242:65:7",
															"nodeType": "YulAssignment",
															"src": "13242:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13257:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "13257:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13264:42:7",
																		"nodeType": "YulLiteral",
																		"src": "13264:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13253:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13253:3:7"
																},
																"nativeSrc": "13253:54:7",
																"nodeType": "YulFunctionCall",
																"src": "13253:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13242:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "13242:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "13187:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13214:5:7",
														"nodeType": "YulTypedName",
														"src": "13214:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13224:7:7",
														"nodeType": "YulTypedName",
														"src": "13224:7:7",
														"type": ""
													}
												],
												"src": "13187:126:7"
											},
											{
												"body": {
													"nativeSrc": "13364:51:7",
													"nodeType": "YulBlock",
													"src": "13364:51:7",
													"statements": [
														{
															"nativeSrc": "13374:35:7",
															"nodeType": "YulAssignment",
															"src": "13374:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13403:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "13403:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "13385:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13385:17:7"
																},
																"nativeSrc": "13385:24:7",
																"nodeType": "YulFunctionCall",
																"src": "13385:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13374:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "13374:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "13319:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13346:5:7",
														"nodeType": "YulTypedName",
														"src": "13346:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13356:7:7",
														"nodeType": "YulTypedName",
														"src": "13356:7:7",
														"type": ""
													}
												],
												"src": "13319:96:7"
											},
											{
												"body": {
													"nativeSrc": "13486:53:7",
													"nodeType": "YulBlock",
													"src": "13486:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13503:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13503:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13526:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "13526:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "13508:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "13508:17:7"
																		},
																		"nativeSrc": "13508:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13508:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13496:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13496:6:7"
																},
																"nativeSrc": "13496:37:7",
																"nodeType": "YulFunctionCall",
																"src": "13496:37:7"
															},
															"nativeSrc": "13496:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "13496:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "13421:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13474:5:7",
														"nodeType": "YulTypedName",
														"src": "13474:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13481:3:7",
														"nodeType": "YulTypedName",
														"src": "13481:3:7",
														"type": ""
													}
												],
												"src": "13421:118:7"
											},
											{
												"body": {
													"nativeSrc": "13610:53:7",
													"nodeType": "YulBlock",
													"src": "13610:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13627:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13627:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13650:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "13650:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "13632:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "13632:17:7"
																		},
																		"nativeSrc": "13632:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13632:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13620:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13620:6:7"
																},
																"nativeSrc": "13620:37:7",
																"nodeType": "YulFunctionCall",
																"src": "13620:37:7"
															},
															"nativeSrc": "13620:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "13620:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "13545:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13598:5:7",
														"nodeType": "YulTypedName",
														"src": "13598:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13605:3:7",
														"nodeType": "YulTypedName",
														"src": "13605:3:7",
														"type": ""
													}
												],
												"src": "13545:118:7"
											},
											{
												"body": {
													"nativeSrc": "13795:206:7",
													"nodeType": "YulBlock",
													"src": "13795:206:7",
													"statements": [
														{
															"nativeSrc": "13805:26:7",
															"nodeType": "YulAssignment",
															"src": "13805:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13817:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13817:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13828:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13828:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13813:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13813:3:7"
																},
																"nativeSrc": "13813:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13813:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13805:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13805:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13885:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13885:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13898:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13898:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13909:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13909:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13894:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13894:3:7"
																		},
																		"nativeSrc": "13894:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13894:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13841:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13841:43:7"
																},
																"nativeSrc": "13841:71:7",
																"nodeType": "YulFunctionCall",
																"src": "13841:71:7"
															},
															"nativeSrc": "13841:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "13841:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13966:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13966:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13979:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13979:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13990:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13990:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13975:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13975:3:7"
																		},
																		"nativeSrc": "13975:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13975:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13922:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13922:43:7"
																},
																"nativeSrc": "13922:72:7",
																"nodeType": "YulFunctionCall",
																"src": "13922:72:7"
															},
															"nativeSrc": "13922:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "13922:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13669:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13759:9:7",
														"nodeType": "YulTypedName",
														"src": "13759:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13771:6:7",
														"nodeType": "YulTypedName",
														"src": "13771:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13779:6:7",
														"nodeType": "YulTypedName",
														"src": "13779:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13790:4:7",
														"nodeType": "YulTypedName",
														"src": "13790:4:7",
														"type": ""
													}
												],
												"src": "13669:332:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051(memPtr) {\n\n        mstore(add(memPtr, 0), \" mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526040518060400160405280600881526020017f4d494d494c756b650000000000000000000000000000000000000000000000008152505f908161004791906104b1565b506040518060400160405280600281526020017f4d4c0000000000000000000000000000000000000000000000000000000000008152506001908161008c91906104b1565b50601260025534801561009d575f5ffd5b50604051611ea0380380611ea083398181016040528101906100bf91906106ca565b825f90816100cd91906104b1565b5081600190816100dd91906104b1565b503360065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061014733600254600a61013191906108ae565b8361013c91906108f8565b61014f60201b60201c565b505050610a59565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036101bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b490610993565b60405180910390fd5b8060035f8282546101ce91906109b1565b925050819055508060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282540192505081905550425f73ffffffffffffffffffffffffffffffffffffffff167f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc448484604051610268929190610a32565b60405180910390a35050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806102ef57607f821691505b602082108103610302576103016102ab565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103647fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610329565b61036e8683610329565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6103b26103ad6103a884610386565b61038f565b610386565b9050919050565b5f819050919050565b6103cb83610398565b6103df6103d7826103b9565b848454610335565b825550505050565b5f5f905090565b6103f66103e7565b6104018184846103c2565b505050565b5b81811015610424576104195f826103ee565b600181019050610407565b5050565b601f8211156104695761043a81610308565b6104438461031a565b81016020851015610452578190505b61046661045e8561031a565b830182610406565b50505b505050565b5f82821c905092915050565b5f6104895f198460080261046e565b1980831691505092915050565b5f6104a1838361047a565b9150826002028217905092915050565b6104ba82610274565b67ffffffffffffffff8111156104d3576104d261027e565b5b6104dd82546102d8565b6104e8828285610428565b5f60209050601f831160018114610519575f8415610507578287015190505b6105118582610496565b865550610578565b601f19841661052786610308565b5f5b8281101561054e57848901518255600182019150602085019450602081019050610529565b8683101561056b5784890151610567601f89168261047a565b8355505b6001600288020188555050505b505050505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b6105b282610599565b810181811067ffffffffffffffff821117156105d1576105d061027e565b5b80604052505050565b5f6105e3610580565b90506105ef82826105a9565b919050565b5f67ffffffffffffffff82111561060e5761060d61027e565b5b61061782610599565b9050602081019050919050565b8281835e5f83830152505050565b5f61064461063f846105f4565b6105da565b9050828152602081018484840111156106605761065f610595565b5b61066b848285610624565b509392505050565b5f82601f83011261068757610686610591565b5b8151610697848260208601610632565b91505092915050565b6106a981610386565b81146106b3575f5ffd5b50565b5f815190506106c4816106a0565b92915050565b5f5f5f606084860312156106e1576106e0610589565b5b5f84015167ffffffffffffffff8111156106fe576106fd61058d565b5b61070a86828701610673565b935050602084015167ffffffffffffffff81111561072b5761072a61058d565b5b61073786828701610673565b9250506040610748868287016106b6565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b60018511156107d4578086048111156107b0576107af610752565b5b60018516156107bf5780820291505b80810290506107cd8561077f565b9450610794565b94509492505050565b5f826107ec57600190506108a7565b816107f9575f90506108a7565b816001811461080f576002811461081957610848565b60019150506108a7565b60ff84111561082b5761082a610752565b5b8360020a91508482111561084257610841610752565b5b506108a7565b5060208310610133831016604e8410600b841016171561087d5782820a90508381111561087857610877610752565b5b6108a7565b61088a848484600161078b565b925090508184048111156108a1576108a0610752565b5b81810290505b9392505050565b5f6108b882610386565b91506108c383610386565b92506108f07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846107dd565b905092915050565b5f61090282610386565b915061090d83610386565b925082820261091b81610386565b9150828204841483151761093257610931610752565b5b5092915050565b5f82825260208201905092915050565b7f206d696e7420746f20746865207a65726f2061646472657373000000000000005f82015250565b5f61097d601983610939565b915061098882610949565b602082019050919050565b5f6020820190508181035f8301526109aa81610971565b9050919050565b5f6109bb82610386565b91506109c683610386565b92508282019050808211156109de576109dd610752565b5b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a0d826109e4565b9050919050565b610a1d81610a03565b82525050565b610a2c81610386565b82525050565b5f604082019050610a455f830185610a14565b610a526020830184610a23565b9392505050565b61143a80610a665f395ff3fe608060405234801561000f575f5ffd5b506004361061009c575f3560e01c806340c10f191161006457806340c10f191461015a57806370a082311461017657806395d89b41146101a6578063a9059cbb146101c4578063dd62ed3e146101f45761009c565b806306fdde03146100a0578063095ea7b3146100be57806318160ddd146100ee57806323b872dd1461010c578063313ce5671461013c575b5f5ffd5b6100a8610224565b6040516100b59190610c14565b60405180910390f35b6100d860048036038101906100d39190610cc5565b6102af565b6040516100e59190610d1d565b60405180910390f35b6100f66102ca565b6040516101039190610d45565b60405180910390f35b61012660048036038101906101219190610d5e565b6102d0565b6040516101339190610d1d565b60405180910390f35b6101446102f7565b6040516101519190610d45565b60405180910390f35b610174600480360381019061016f9190610cc5565b6102fd565b005b610190600480360381019061018b9190610dae565b610421565b60405161019d9190610d45565b60405180910390f35b6101ae610467565b6040516101bb9190610c14565b60405180910390f35b6101de60048036038101906101d99190610cc5565b6104f3565b6040516101eb9190610d1d565b60405180910390f35b61020e60048036038101906102099190610dd9565b61050e565b60405161021b9190610d45565b60405180910390f35b5f805461023090610e44565b80601f016020809104026020016040519081016040528092919081815260200182805461025c90610e44565b80156102a75780601f1061027e576101008083540402835291602001916102a7565b820191905f5260205f20905b81548152906001019060200180831161028a57829003601f168201915b505050505081565b5f5f3390506102bf818585610590565b600191505092915050565b60035481565b5f5f3390506102e085828561073f565b6102eb858585610839565b60019150509392505050565b60025481565b3373ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461038c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038390610ebe565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190610f26565b60405180910390fd5b61041d82600254600a61040d91906110a0565b8361041891906110ea565b610a7f565b5050565b5f60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6001805461047490610e44565b80601f01602080910402602001604051908101604052809291908181526020018280546104a090610e44565b80156104eb5780601f106104c2576101008083540402835291602001916104eb565b820191905f5260205f20905b8154815290600101906020018083116104ce57829003601f168201915b505050505081565b5f5f339050610503818585610839565b600191505092915050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f590611175565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361066c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610663906111dd565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550428373ffffffffffffffffffffffffffffffffffffffff167fb3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a7848460405161073292919061120a565b60405180910390a3505050565b5f60055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108335781811015610825576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081c9061127b565b60405180910390fd5b6108328484848403610590565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089e906112e3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090c9061134b565b60405180910390fd5b8060045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098c906113b3565b60405180910390fd5b8060045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055508060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282540192505081905550428373ffffffffffffffffffffffffffffffffffffffff167f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc448484604051610a7292919061120a565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae490610f26565b60405180910390fd5b8060035f828254610afe91906113d1565b925050819055508060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282540192505081905550425f73ffffffffffffffffffffffffffffffffffffffff167f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc448484604051610b9892919061120a565b60405180910390a35050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610be682610ba4565b610bf08185610bae565b9350610c00818560208601610bbe565b610c0981610bcc565b840191505092915050565b5f6020820190508181035f830152610c2c8184610bdc565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c6182610c38565b9050919050565b610c7181610c57565b8114610c7b575f5ffd5b50565b5f81359050610c8c81610c68565b92915050565b5f819050919050565b610ca481610c92565b8114610cae575f5ffd5b50565b5f81359050610cbf81610c9b565b92915050565b5f5f60408385031215610cdb57610cda610c34565b5b5f610ce885828601610c7e565b9250506020610cf985828601610cb1565b9150509250929050565b5f8115159050919050565b610d1781610d03565b82525050565b5f602082019050610d305f830184610d0e565b92915050565b610d3f81610c92565b82525050565b5f602082019050610d585f830184610d36565b92915050565b5f5f5f60608486031215610d7557610d74610c34565b5b5f610d8286828701610c7e565b9350506020610d9386828701610c7e565b9250506040610da486828701610cb1565b9150509250925092565b5f60208284031215610dc357610dc2610c34565b5b5f610dd084828501610c7e565b91505092915050565b5f5f60408385031215610def57610dee610c34565b5b5f610dfc85828601610c7e565b9250506020610e0d85828601610c7e565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610e5b57607f821691505b602082108103610e6e57610e6d610e17565b5b50919050565b7f2063616c6c6572206973206e6f7420746865206f776e657200000000000000005f82015250565b5f610ea8601883610bae565b9150610eb382610e74565b602082019050919050565b5f6020820190508181035f830152610ed581610e9c565b9050919050565b7f206d696e7420746f20746865207a65726f2061646472657373000000000000005f82015250565b5f610f10601983610bae565b9150610f1b82610edc565b602082019050919050565b5f6020820190508181035f830152610f3d81610f04565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b6001851115610fc657808604811115610fa257610fa1610f44565b5b6001851615610fb15780820291505b8081029050610fbf85610f71565b9450610f86565b94509492505050565b5f82610fde5760019050611099565b81610feb575f9050611099565b8160018114611001576002811461100b5761103a565b6001915050611099565b60ff84111561101d5761101c610f44565b5b8360020a91508482111561103457611033610f44565b5b50611099565b5060208310610133831016604e8410600b841016171561106f5782820a90508381111561106a57611069610f44565b5b611099565b61107c8484846001610f7d565b9250905081840481111561109357611092610f44565b5b81810290505b9392505050565b5f6110aa82610c92565b91506110b583610c92565b92506110e27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610fcf565b905092915050565b5f6110f482610c92565b91506110ff83610c92565b925082820261110d81610c92565b9150828204841483151761112457611123610f44565b5b5092915050565b7f20617070726f76652066726f6d20746865207a65726f206164647265737300005f82015250565b5f61115f601e83610bae565b915061116a8261112b565b602082019050919050565b5f6020820190508181035f83015261118c81611153565b9050919050565b7f20617070726f766520746f20746865207a65726f2061646472657373000000005f82015250565b5f6111c7601c83610bae565b91506111d282611193565b602082019050919050565b5f6020820190508181035f8301526111f4816111bb565b9050919050565b61120481610c57565b82525050565b5f60408201905061121d5f8301856111fb565b61122a6020830184610d36565b9392505050565b7f20616c6c6f77616e6365206578636565646564000000000000000000000000005f82015250565b5f611265601383610bae565b915061127082611231565b602082019050919050565b5f6020820190508181035f83015261129281611259565b9050919050565b7f207472616e736665722066726f6d20746865207a65726f2061646472657373005f82015250565b5f6112cd601f83610bae565b91506112d882611299565b602082019050919050565b5f6020820190508181035f8301526112fa816112c1565b9050919050565b7f207472616e7366657220746f20746865207a65726f20616464726573730000005f82015250565b5f611335601d83610bae565b915061134082611301565b602082019050919050565b5f6020820190508181035f83015261136281611329565b9050919050565b7f20696e73756666696369656e742062616c616e636500000000000000000000005f82015250565b5f61139d601583610bae565b91506113a882611369565b602082019050919050565b5f6020820190508181035f8301526113ca81611391565b9050919050565b5f6113db82610c92565b91506113e683610c92565b92508282019050808211156113fe576113fd610f44565b5b9291505056fea26469706673582212204522aabf9e5bc04266dd273f81025fdcf4e782e19bfc64cd99bf1dd88cfdb55364736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D494D494C756B65000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH0 SWAP1 DUP2 PUSH2 0x47 SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D4C000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 SWAP1 DUP2 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x9D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1EA0 CODESIZE SUB DUP1 PUSH2 0x1EA0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x6CA JUMP JUMPDEST DUP3 PUSH0 SWAP1 DUP2 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST POP DUP2 PUSH1 0x1 SWAP1 DUP2 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST POP CALLER PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x147 CALLER PUSH1 0x2 SLOAD PUSH1 0xA PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x8AE JUMP JUMPDEST DUP4 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x8F8 JUMP JUMPDEST PUSH2 0x14F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0xA59 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B4 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x9B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9ED053BB818FF08B8353CD46F78DB1F0799F31C9E4458FDB425C10ECCD2EFC44 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x268 SWAP3 SWAP2 SWAP1 PUSH2 0xA32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2EF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x302 JUMPI PUSH2 0x301 PUSH2 0x2AB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x364 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x329 JUMP JUMPDEST PUSH2 0x36E DUP7 DUP4 PUSH2 0x329 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3B2 PUSH2 0x3AD PUSH2 0x3A8 DUP5 PUSH2 0x386 JUMP JUMPDEST PUSH2 0x38F JUMP JUMPDEST PUSH2 0x386 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CB DUP4 PUSH2 0x398 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x3D7 DUP3 PUSH2 0x3B9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x335 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3F6 PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x401 DUP2 DUP5 DUP5 PUSH2 0x3C2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x424 JUMPI PUSH2 0x419 PUSH0 DUP3 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x407 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x469 JUMPI PUSH2 0x43A DUP2 PUSH2 0x308 JUMP JUMPDEST PUSH2 0x443 DUP5 PUSH2 0x31A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x452 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x466 PUSH2 0x45E DUP6 PUSH2 0x31A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x406 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x489 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x46E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A1 DUP4 DUP4 PUSH2 0x47A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4BA DUP3 PUSH2 0x274 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D3 JUMPI PUSH2 0x4D2 PUSH2 0x27E JUMP JUMPDEST JUMPDEST PUSH2 0x4DD DUP3 SLOAD PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x4E8 DUP3 DUP3 DUP6 PUSH2 0x428 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x519 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x507 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x511 DUP6 DUP3 PUSH2 0x496 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x578 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x527 DUP7 PUSH2 0x308 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x54E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x529 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x56B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x567 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x47A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B2 DUP3 PUSH2 0x599 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x5D1 JUMPI PUSH2 0x5D0 PUSH2 0x27E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5E3 PUSH2 0x580 JUMP JUMPDEST SWAP1 POP PUSH2 0x5EF DUP3 DUP3 PUSH2 0x5A9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x60E JUMPI PUSH2 0x60D PUSH2 0x27E JUMP JUMPDEST JUMPDEST PUSH2 0x617 DUP3 PUSH2 0x599 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x644 PUSH2 0x63F DUP5 PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x660 JUMPI PUSH2 0x65F PUSH2 0x595 JUMP JUMPDEST JUMPDEST PUSH2 0x66B DUP5 DUP3 DUP6 PUSH2 0x624 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x687 JUMPI PUSH2 0x686 PUSH2 0x591 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x697 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x632 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A9 DUP2 PUSH2 0x386 JUMP JUMPDEST DUP2 EQ PUSH2 0x6B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6C4 DUP2 PUSH2 0x6A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6E1 JUMPI PUSH2 0x6E0 PUSH2 0x589 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6FE JUMPI PUSH2 0x6FD PUSH2 0x58D JUMP JUMPDEST JUMPDEST PUSH2 0x70A DUP7 DUP3 DUP8 ADD PUSH2 0x673 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x72B JUMPI PUSH2 0x72A PUSH2 0x58D JUMP JUMPDEST JUMPDEST PUSH2 0x737 DUP7 DUP3 DUP8 ADD PUSH2 0x673 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x748 DUP7 DUP3 DUP8 ADD PUSH2 0x6B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x7D4 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x7B0 JUMPI PUSH2 0x7AF PUSH2 0x752 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x7BF JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x7CD DUP6 PUSH2 0x77F JUMP JUMPDEST SWAP5 POP PUSH2 0x794 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x7EC JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x8A7 JUMP JUMPDEST DUP2 PUSH2 0x7F9 JUMPI PUSH0 SWAP1 POP PUSH2 0x8A7 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x80F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x819 JUMPI PUSH2 0x848 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x82B JUMPI PUSH2 0x82A PUSH2 0x752 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x842 JUMPI PUSH2 0x841 PUSH2 0x752 JUMP JUMPDEST JUMPDEST POP PUSH2 0x8A7 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x87D JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x878 JUMPI PUSH2 0x877 PUSH2 0x752 JUMP JUMPDEST JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x88A DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x78B JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x8A1 JUMPI PUSH2 0x8A0 PUSH2 0x752 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8B8 DUP3 PUSH2 0x386 JUMP JUMPDEST SWAP2 POP PUSH2 0x8C3 DUP4 PUSH2 0x386 JUMP JUMPDEST SWAP3 POP PUSH2 0x8F0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x7DD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x902 DUP3 PUSH2 0x386 JUMP JUMPDEST SWAP2 POP PUSH2 0x90D DUP4 PUSH2 0x386 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x91B DUP2 PUSH2 0x386 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x932 JUMPI PUSH2 0x931 PUSH2 0x752 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206D696E7420746F20746865207A65726F206164647265737300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x97D PUSH1 0x19 DUP4 PUSH2 0x939 JUMP JUMPDEST SWAP2 POP PUSH2 0x988 DUP3 PUSH2 0x949 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9AA DUP2 PUSH2 0x971 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9BB DUP3 PUSH2 0x386 JUMP JUMPDEST SWAP2 POP PUSH2 0x9C6 DUP4 PUSH2 0x386 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x9DE JUMPI PUSH2 0x9DD PUSH2 0x752 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA0D DUP3 PUSH2 0x9E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1D DUP2 PUSH2 0xA03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA2C DUP2 PUSH2 0x386 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA45 PUSH0 DUP4 ADD DUP6 PUSH2 0xA14 JUMP JUMPDEST PUSH2 0xA52 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA23 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x143A DUP1 PUSH2 0xA66 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F4 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x2FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xDAE JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x467 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD PUSH2 0x230 SWAP1 PUSH2 0xE44 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25C SWAP1 PUSH2 0xE44 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2A7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x27E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2A7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x28A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH0 CALLER SWAP1 POP PUSH2 0x2BF DUP2 DUP6 DUP6 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 CALLER SWAP1 POP PUSH2 0x2E0 DUP6 DUP3 DUP6 PUSH2 0x73F JUMP JUMPDEST PUSH2 0x2EB DUP6 DUP6 DUP6 PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x383 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F1 SWAP1 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41D DUP3 PUSH1 0x2 SLOAD PUSH1 0xA PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST DUP4 PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x10EA JUMP JUMPDEST PUSH2 0xA7F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0xE44 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A0 SWAP1 PUSH2 0xE44 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH0 CALLER SWAP1 POP PUSH2 0x503 DUP2 DUP6 DUP6 PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F5 SWAP1 PUSH2 0x1175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x663 SWAP1 PUSH2 0x11DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB3FD5071835887567A0671151121894DDCCC2842F1D10BEDAD13E0D17CACE9A7 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x732 SWAP3 SWAP2 SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x833 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x825 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81C SWAP1 PUSH2 0x127B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x832 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x590 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89E SWAP1 PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x915 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90C SWAP1 PUSH2 0x134B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98C SWAP1 PUSH2 0x13B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9ED053BB818FF08B8353CD46F78DB1F0799F31C9E4458FDB425C10ECCD2EFC44 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA72 SWAP3 SWAP2 SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE4 SWAP1 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9ED053BB818FF08B8353CD46F78DB1F0799F31C9E4458FDB425C10ECCD2EFC44 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB98 SWAP3 SWAP2 SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBE6 DUP3 PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0xBF0 DUP2 DUP6 PUSH2 0xBAE JUMP JUMPDEST SWAP4 POP PUSH2 0xC00 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBBE JUMP JUMPDEST PUSH2 0xC09 DUP2 PUSH2 0xBCC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC2C DUP2 DUP5 PUSH2 0xBDC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC61 DUP3 PUSH2 0xC38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC71 DUP2 PUSH2 0xC57 JUMP JUMPDEST DUP2 EQ PUSH2 0xC7B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC8C DUP2 PUSH2 0xC68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA4 DUP2 PUSH2 0xC92 JUMP JUMPDEST DUP2 EQ PUSH2 0xCAE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCBF DUP2 PUSH2 0xC9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCDB JUMPI PUSH2 0xCDA PUSH2 0xC34 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCE8 DUP6 DUP3 DUP7 ADD PUSH2 0xC7E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCF9 DUP6 DUP3 DUP7 ADD PUSH2 0xCB1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD17 DUP2 PUSH2 0xD03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD30 PUSH0 DUP4 ADD DUP5 PUSH2 0xD0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD3F DUP2 PUSH2 0xC92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD58 PUSH0 DUP4 ADD DUP5 PUSH2 0xD36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD75 JUMPI PUSH2 0xD74 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD82 DUP7 DUP3 DUP8 ADD PUSH2 0xC7E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD93 DUP7 DUP3 DUP8 ADD PUSH2 0xC7E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xDA4 DUP7 DUP3 DUP8 ADD PUSH2 0xCB1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDC3 JUMPI PUSH2 0xDC2 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDD0 DUP5 DUP3 DUP6 ADD PUSH2 0xC7E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDEF JUMPI PUSH2 0xDEE PUSH2 0xC34 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDFC DUP6 DUP3 DUP7 ADD PUSH2 0xC7E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE0D DUP6 DUP3 DUP7 ADD PUSH2 0xC7E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE5B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE6E JUMPI PUSH2 0xE6D PUSH2 0xE17 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2063616C6C6572206973206E6F7420746865206F776E65720000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEA8 PUSH1 0x18 DUP4 PUSH2 0xBAE JUMP JUMPDEST SWAP2 POP PUSH2 0xEB3 DUP3 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xED5 DUP2 PUSH2 0xE9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x206D696E7420746F20746865207A65726F206164647265737300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF10 PUSH1 0x19 DUP4 PUSH2 0xBAE JUMP JUMPDEST SWAP2 POP PUSH2 0xF1B DUP3 PUSH2 0xEDC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF3D DUP2 PUSH2 0xF04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xFC6 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xFA2 JUMPI PUSH2 0xFA1 PUSH2 0xF44 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xFB1 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xFBF DUP6 PUSH2 0xF71 JUMP JUMPDEST SWAP5 POP PUSH2 0xF86 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xFDE JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1099 JUMP JUMPDEST DUP2 PUSH2 0xFEB JUMPI PUSH0 SWAP1 POP PUSH2 0x1099 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1001 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x100B JUMPI PUSH2 0x103A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1099 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x101D JUMPI PUSH2 0x101C PUSH2 0xF44 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1034 JUMPI PUSH2 0x1033 PUSH2 0xF44 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1099 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x106F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x106A JUMPI PUSH2 0x1069 PUSH2 0xF44 JUMP JUMPDEST JUMPDEST PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x107C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xF7D JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1093 JUMPI PUSH2 0x1092 PUSH2 0xF44 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10AA DUP3 PUSH2 0xC92 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B5 DUP4 PUSH2 0xC92 JUMP JUMPDEST SWAP3 POP PUSH2 0x10E2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xFCF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10F4 DUP3 PUSH2 0xC92 JUMP JUMPDEST SWAP2 POP PUSH2 0x10FF DUP4 PUSH2 0xC92 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x110D DUP2 PUSH2 0xC92 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1124 JUMPI PUSH2 0x1123 PUSH2 0xF44 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x20617070726F76652066726F6D20746865207A65726F20616464726573730000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x115F PUSH1 0x1E DUP4 PUSH2 0xBAE JUMP JUMPDEST SWAP2 POP PUSH2 0x116A DUP3 PUSH2 0x112B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x118C DUP2 PUSH2 0x1153 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x20617070726F766520746F20746865207A65726F206164647265737300000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11C7 PUSH1 0x1C DUP4 PUSH2 0xBAE JUMP JUMPDEST SWAP2 POP PUSH2 0x11D2 DUP3 PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11F4 DUP2 PUSH2 0x11BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1204 DUP2 PUSH2 0xC57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x121D PUSH0 DUP4 ADD DUP6 PUSH2 0x11FB JUMP JUMPDEST PUSH2 0x122A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD36 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x20616C6C6F77616E636520657863656564656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1265 PUSH1 0x13 DUP4 PUSH2 0xBAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1270 DUP3 PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1292 DUP2 PUSH2 0x1259 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x207472616E736665722066726F6D20746865207A65726F206164647265737300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12CD PUSH1 0x1F DUP4 PUSH2 0xBAE JUMP JUMPDEST SWAP2 POP PUSH2 0x12D8 DUP3 PUSH2 0x1299 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12FA DUP2 PUSH2 0x12C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x207472616E7366657220746F20746865207A65726F2061646472657373000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1335 PUSH1 0x1D DUP4 PUSH2 0xBAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1340 DUP3 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1362 DUP2 PUSH2 0x1329 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x20696E73756666696369656E742062616C616E63650000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x139D PUSH1 0x15 DUP4 PUSH2 0xBAE JUMP JUMPDEST SWAP2 POP PUSH2 0x13A8 DUP3 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13CA DUP2 PUSH2 0x1391 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13DB DUP3 PUSH2 0xC92 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E6 DUP4 PUSH2 0xC92 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x13FE JUMPI PUSH2 0x13FD PUSH2 0xF44 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0x22 0xAA 0xBF SWAP15 JUMPDEST 0xC0 TIMESTAMP PUSH7 0xDD273F81025FDC DELEGATECALL SWAPN 0x82 RJUMPI 0x9BFC PUSH5 0xCD99BF1DD8 DUP13 REVERT 0xB5 MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "832:4814:6:-:0;;;887:31;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;946:27;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1027:2;1001:28;;1689:272;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1786:5;1779:4;:12;;;;;;:::i;:::-;;1811:7;1802:6;:16;;;;;;:::i;:::-;;1838:10;1829:6;;:19;;;;;;;;;;;;;;;;;;1905:48;1911:10;1944:8;;1939:2;:13;;;;:::i;:::-;1923;:29;;;;:::i;:::-;1905:5;;;:48;;:::i;:::-;1689:272;;;832:4814;;5331:312;5426:1;5407:21;;:7;:21;;;5399:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;5486:6;5471:11;;:21;;;;;;;:::i;:::-;;;;;;;;5548:6;5526:9;:18;5536:7;5526:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;5619:15;5598:1;5581:54;;;5602:7;5611:6;5581:54;;;;;;;:::i;:::-;;;;;;;;5331:312;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2287:1;2280:8;;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:75::-;5267:6;5300:2;5294:9;5284:19;;5234:75;:::o;5315:117::-;5424:1;5421;5414:12;5438:117;5547:1;5544;5537:12;5561:117;5670:1;5667;5660:12;5684:117;5793:1;5790;5783:12;5807:102;5848:6;5899:2;5895:7;5890:2;5883:5;5879:14;5875:28;5865:38;;5807:102;;;:::o;5915:281::-;5998:27;6020:4;5998:27;:::i;:::-;5990:6;5986:40;6128:6;6116:10;6113:22;6092:18;6080:10;6077:34;6074:62;6071:88;;;6139:18;;:::i;:::-;6071:88;6179:10;6175:2;6168:22;5958:238;5915:281;;:::o;6202:129::-;6236:6;6263:20;;:::i;:::-;6253:30;;6292:33;6320:4;6312:6;6292:33;:::i;:::-;6202:129;;;:::o;6337:308::-;6399:4;6489:18;6481:6;6478:30;6475:56;;;6511:18;;:::i;:::-;6475:56;6549:29;6571:6;6549:29;:::i;:::-;6541:37;;6633:4;6627;6623:15;6615:23;;6337:308;;;:::o;6651:139::-;6740:6;6735:3;6730;6724:23;6781:1;6772:6;6767:3;6763:16;6756:27;6651:139;;;:::o;6796:434::-;6885:5;6910:66;6926:49;6968:6;6926:49;:::i;:::-;6910:66;:::i;:::-;6901:75;;6999:6;6992:5;6985:21;7037:4;7030:5;7026:16;7075:3;7066:6;7061:3;7057:16;7054:25;7051:112;;;7082:79;;:::i;:::-;7051:112;7172:52;7217:6;7212:3;7207;7172:52;:::i;:::-;6891:339;6796:434;;;;;:::o;7250:355::-;7317:5;7366:3;7359:4;7351:6;7347:17;7343:27;7333:122;;7374:79;;:::i;:::-;7333:122;7484:6;7478:13;7509:90;7595:3;7587:6;7580:4;7572:6;7568:17;7509:90;:::i;:::-;7500:99;;7323:282;7250:355;;;;:::o;7611:122::-;7684:24;7702:5;7684:24;:::i;:::-;7677:5;7674:35;7664:63;;7723:1;7720;7713:12;7664:63;7611:122;:::o;7739:143::-;7796:5;7827:6;7821:13;7812:22;;7843:33;7870:5;7843:33;:::i;:::-;7739:143;;;;:::o;7888:1009::-;7996:6;8004;8012;8061:2;8049:9;8040:7;8036:23;8032:32;8029:119;;;8067:79;;:::i;:::-;8029:119;8208:1;8197:9;8193:17;8187:24;8238:18;8230:6;8227:30;8224:117;;;8260:79;;:::i;:::-;8224:117;8365:74;8431:7;8422:6;8411:9;8407:22;8365:74;:::i;:::-;8355:84;;8158:291;8509:2;8498:9;8494:18;8488:25;8540:18;8532:6;8529:30;8526:117;;;8562:79;;:::i;:::-;8526:117;8667:74;8733:7;8724:6;8713:9;8709:22;8667:74;:::i;:::-;8657:84;;8459:292;8790:2;8816:64;8872:7;8863:6;8852:9;8848:22;8816:64;:::i;:::-;8806:74;;8761:129;7888:1009;;;;;:::o;8903:180::-;8951:77;8948:1;8941:88;9048:4;9045:1;9038:15;9072:4;9069:1;9062:15;9089:102;9131:8;9178:5;9175:1;9171:13;9150:34;;9089:102;;;:::o;9197:848::-;9258:5;9265:4;9289:6;9280:15;;9313:5;9304:14;;9327:712;9348:1;9338:8;9335:15;9327:712;;;9443:4;9438:3;9434:14;9428:4;9425:24;9422:50;;;9452:18;;:::i;:::-;9422:50;9502:1;9492:8;9488:16;9485:451;;;9917:4;9910:5;9906:16;9897:25;;9485:451;9967:4;9961;9957:15;9949:23;;9997:32;10020:8;9997:32;:::i;:::-;9985:44;;9327:712;;;9197:848;;;;;;;:::o;10051:1073::-;10105:5;10296:8;10286:40;;10317:1;10308:10;;10319:5;;10286:40;10345:4;10335:36;;10362:1;10353:10;;10364:5;;10335:36;10431:4;10479:1;10474:27;;;;10515:1;10510:191;;;;10424:277;;10474:27;10492:1;10483:10;;10494:5;;;10510:191;10555:3;10545:8;10542:17;10539:43;;;10562:18;;:::i;:::-;10539:43;10611:8;10608:1;10604:16;10595:25;;10646:3;10639:5;10636:14;10633:40;;;10653:18;;:::i;:::-;10633:40;10686:5;;;10424:277;;10810:2;10800:8;10797:16;10791:3;10785:4;10782:13;10778:36;10760:2;10750:8;10747:16;10742:2;10736:4;10733:12;10729:35;10713:111;10710:246;;;10866:8;10860:4;10856:19;10847:28;;10901:3;10894:5;10891:14;10888:40;;;10908:18;;:::i;:::-;10888:40;10941:5;;10710:246;10981:42;11019:3;11009:8;11003:4;11000:1;10981:42;:::i;:::-;10966:57;;;;11055:4;11050:3;11046:14;11039:5;11036:25;11033:51;;;11064:18;;:::i;:::-;11033:51;11113:4;11106:5;11102:16;11093:25;;10051:1073;;;;;;:::o;11130:285::-;11190:5;11214:23;11232:4;11214:23;:::i;:::-;11206:31;;11258:27;11276:8;11258:27;:::i;:::-;11246:39;;11304:104;11341:66;11331:8;11325:4;11304:104;:::i;:::-;11295:113;;11130:285;;;;:::o;11421:410::-;11461:7;11484:20;11502:1;11484:20;:::i;:::-;11479:25;;11518:20;11536:1;11518:20;:::i;:::-;11513:25;;11573:1;11570;11566:9;11595:30;11613:11;11595:30;:::i;:::-;11584:41;;11774:1;11765:7;11761:15;11758:1;11755:22;11735:1;11728:9;11708:83;11685:139;;11804:18;;:::i;:::-;11685:139;11469:362;11421:410;;;;:::o;11837:169::-;11921:11;11955:6;11950:3;11943:19;11995:4;11990:3;11986:14;11971:29;;11837:169;;;;:::o;12012:175::-;12152:27;12148:1;12140:6;12136:14;12129:51;12012:175;:::o;12193:366::-;12335:3;12356:67;12420:2;12415:3;12356:67;:::i;:::-;12349:74;;12432:93;12521:3;12432:93;:::i;:::-;12550:2;12545:3;12541:12;12534:19;;12193:366;;;:::o;12565:419::-;12731:4;12769:2;12758:9;12754:18;12746:26;;12818:9;12812:4;12808:20;12804:1;12793:9;12789:17;12782:47;12846:131;12972:4;12846:131;:::i;:::-;12838:139;;12565:419;;;:::o;12990:191::-;13030:3;13049:20;13067:1;13049:20;:::i;:::-;13044:25;;13083:20;13101:1;13083:20;:::i;:::-;13078:25;;13126:1;13123;13119:9;13112:16;;13147:3;13144:1;13141:10;13138:36;;;13154:18;;:::i;:::-;13138:36;12990:191;;;;:::o;13187:126::-;13224:7;13264:42;13257:5;13253:54;13242:65;;13187:126;;;:::o;13319:96::-;13356:7;13385:24;13403:5;13385:24;:::i;:::-;13374:35;;13319:96;;;:::o;13421:118::-;13508:24;13526:5;13508:24;:::i;:::-;13503:3;13496:37;13421:118;;:::o;13545:::-;13632:24;13650:5;13632:24;:::i;:::-;13627:3;13620:37;13545:118;;:::o;13669:332::-;13790:4;13828:2;13817:9;13813:18;13805:26;;13841:71;13909:1;13898:9;13894:17;13885:6;13841:71;:::i;:::-;13922:72;13990:2;13979:9;13975:18;13966:6;13922:72;:::i;:::-;13669:332;;;;;:::o;832:4814:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1252": {
									"entryPoint": 1424,
									"id": 1252,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_1370": {
									"entryPoint": 2687,
									"id": 1370,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_spendAllowance_1296": {
									"entryPoint": 1855,
									"id": 1296,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1205": {
									"entryPoint": 2105,
									"id": 1205,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_1034": {
									"entryPoint": 1294,
									"id": 1034,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1111": {
									"entryPoint": 687,
									"id": 1111,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1061": {
									"entryPoint": 1057,
									"id": 1061,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_950": {
									"entryPoint": 759,
									"id": 950,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1329": {
									"entryPoint": 765,
									"id": 1329,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_944": {
									"entryPoint": 548,
									"id": 944,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_947": {
									"entryPoint": 1127,
									"id": 947,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_952": {
									"entryPoint": 714,
									"id": 952,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_1144": {
									"entryPoint": 720,
									"id": 1144,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_1086": {
									"entryPoint": 1267,
									"id": 1086,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_20c540669f159a20ed49b45c8953ce643eeae9e8d73cf5fbe5c0cb55a41c85c8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2c540becca184d5f9f29196779dd3c2db45726cac290f020acea94e53c4ecc1e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5020d33bc2d617c34f2d5000e4f91964978b5792b811cdb87a70476114286e7c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_52d62de738b33c87646e159de19563a9f80b9e1fa1b35788579bc1530b641267_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5ae357b8326e49c636736622eb1e29ffe9c8ffdabb32b4217f01e18b36eb6348_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_76c35e8552a19137f541ba350ea2f59c360729aeffd91a00d8389d78b4fc86bb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b812d4684306b8007a1ced2adbd53f18c6bbc6a24a673a6df98d07d2eeb872d4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4618,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_20c540669f159a20ed49b45c8953ce643eeae9e8d73cf5fbe5c0cb55a41c85c8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c540becca184d5f9f29196779dd3c2db45726cac290f020acea94e53c4ecc1e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5020d33bc2d617c34f2d5000e4f91964978b5792b811cdb87a70476114286e7c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52d62de738b33c87646e159de19563a9f80b9e1fa1b35788579bc1530b641267__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5ae357b8326e49c636736622eb1e29ffe9c8ffdabb32b4217f01e18b36eb6348__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_76c35e8552a19137f541ba350ea2f59c360729aeffd91a00d8389d78b4fc86bb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b812d4684306b8007a1ced2adbd53f18c6bbc6a24a673a6df98d07d2eeb872d4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 3965,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 4256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 4047,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3006,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3908,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3607,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 3953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_20c540669f159a20ed49b45c8953ce643eeae9e8d73cf5fbe5c0cb55a41c85c8": {
									"entryPoint": 4395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2c540becca184d5f9f29196779dd3c2db45726cac290f020acea94e53c4ecc1e": {
									"entryPoint": 3700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5020d33bc2d617c34f2d5000e4f91964978b5792b811cdb87a70476114286e7c": {
									"entryPoint": 4969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_52d62de738b33c87646e159de19563a9f80b9e1fa1b35788579bc1530b641267": {
									"entryPoint": 4761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5ae357b8326e49c636736622eb1e29ffe9c8ffdabb32b4217f01e18b36eb6348": {
									"entryPoint": 4865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_76c35e8552a19137f541ba350ea2f59c360729aeffd91a00d8389d78b4fc86bb": {
									"entryPoint": 4657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051": {
									"entryPoint": 3804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b812d4684306b8007a1ced2adbd53f18c6bbc6a24a673a6df98d07d2eeb872d4": {
									"entryPoint": 4499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17064:7",
										"nodeType": "YulBlock",
										"src": "0:17064:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3404:53:7",
													"nodeType": "YulBlock",
													"src": "3404:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:7"
																		},
																		"nativeSrc": "3426:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:7"
																},
																"nativeSrc": "3414:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:7"
															},
															"nativeSrc": "3414:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:7",
														"nodeType": "YulTypedName",
														"src": "3399:3:7",
														"type": ""
													}
												],
												"src": "3339:118:7"
											},
											{
												"body": {
													"nativeSrc": "3561:124:7",
													"nodeType": "YulBlock",
													"src": "3561:124:7",
													"statements": [
														{
															"nativeSrc": "3571:26:7",
															"nodeType": "YulAssignment",
															"src": "3571:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:7"
																},
																"nativeSrc": "3579:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:7"
																},
																"nativeSrc": "3607:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:7"
															},
															"nativeSrc": "3607:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:7",
														"nodeType": "YulTypedName",
														"src": "3533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:7",
														"nodeType": "YulTypedName",
														"src": "3545:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:7",
														"nodeType": "YulTypedName",
														"src": "3556:4:7",
														"type": ""
													}
												],
												"src": "3463:222:7"
											},
											{
												"body": {
													"nativeSrc": "3791:519:7",
													"nodeType": "YulBlock",
													"src": "3791:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:7",
																"nodeType": "YulBlock",
																"src": "3837:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:7"
																			},
																			"nativeSrc": "3839:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:7"
																		},
																		"nativeSrc": "3839:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:7"
																		},
																		"nativeSrc": "3808:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:7"
																},
																"nativeSrc": "3804:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:7"
															},
															"nativeSrc": "3801:119:7",
															"nodeType": "YulIf",
															"src": "3801:119:7"
														},
														{
															"nativeSrc": "3930:117:7",
															"nodeType": "YulBlock",
															"src": "3930:117:7",
															"statements": [
																{
																	"nativeSrc": "3945:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:7"
																				},
																				"nativeSrc": "4005:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:7"
																		},
																		"nativeSrc": "3984:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:7",
															"nodeType": "YulBlock",
															"src": "4057:118:7",
															"statements": [
																{
																	"nativeSrc": "4072:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:7"
																				},
																				"nativeSrc": "4133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:7"
																		},
																		"nativeSrc": "4112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:7",
															"nodeType": "YulBlock",
															"src": "4185:118:7",
															"statements": [
																{
																	"nativeSrc": "4200:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:7"
																				},
																				"nativeSrc": "4261:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:7"
																		},
																		"nativeSrc": "4240:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:7",
														"nodeType": "YulTypedName",
														"src": "3745:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:7",
														"nodeType": "YulTypedName",
														"src": "3756:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:7",
														"nodeType": "YulTypedName",
														"src": "3768:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:7",
														"nodeType": "YulTypedName",
														"src": "3776:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:7",
														"nodeType": "YulTypedName",
														"src": "3784:6:7",
														"type": ""
													}
												],
												"src": "3691:619:7"
											},
											{
												"body": {
													"nativeSrc": "4382:263:7",
													"nodeType": "YulBlock",
													"src": "4382:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4428:83:7",
																"nodeType": "YulBlock",
																"src": "4428:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4430:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4430:77:7"
																			},
																			"nativeSrc": "4430:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4430:79:7"
																		},
																		"nativeSrc": "4430:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4430:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4403:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4403:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4412:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4412:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4399:3:7"
																		},
																		"nativeSrc": "4399:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4399:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4424:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4424:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4395:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4395:3:7"
																},
																"nativeSrc": "4395:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4395:32:7"
															},
															"nativeSrc": "4392:119:7",
															"nodeType": "YulIf",
															"src": "4392:119:7"
														},
														{
															"nativeSrc": "4521:117:7",
															"nodeType": "YulBlock",
															"src": "4521:117:7",
															"statements": [
																{
																	"nativeSrc": "4536:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4536:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4550:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4550:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4540:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4540:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:7"
																				},
																				"nativeSrc": "4596:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4575:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:7"
																		},
																		"nativeSrc": "4575:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4565:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4316:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4352:9:7",
														"nodeType": "YulTypedName",
														"src": "4352:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4363:7:7",
														"nodeType": "YulTypedName",
														"src": "4363:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4375:6:7",
														"nodeType": "YulTypedName",
														"src": "4375:6:7",
														"type": ""
													}
												],
												"src": "4316:329:7"
											},
											{
												"body": {
													"nativeSrc": "4734:391:7",
													"nodeType": "YulBlock",
													"src": "4734:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4780:83:7",
																"nodeType": "YulBlock",
																"src": "4780:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4782:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4782:77:7"
																			},
																			"nativeSrc": "4782:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4782:79:7"
																		},
																		"nativeSrc": "4782:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4782:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4755:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4755:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4764:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4764:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4751:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4751:3:7"
																		},
																		"nativeSrc": "4751:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4751:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4776:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4776:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4747:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4747:3:7"
																},
																"nativeSrc": "4747:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4747:32:7"
															},
															"nativeSrc": "4744:119:7",
															"nodeType": "YulIf",
															"src": "4744:119:7"
														},
														{
															"nativeSrc": "4873:117:7",
															"nodeType": "YulBlock",
															"src": "4873:117:7",
															"statements": [
																{
																	"nativeSrc": "4888:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4888:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4902:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4902:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4892:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4892:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4917:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4917:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4952:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4952:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4963:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4963:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4948:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4948:3:7"
																				},
																				"nativeSrc": "4948:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4948:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4972:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4972:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4927:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4927:20:7"
																		},
																		"nativeSrc": "4927:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4927:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4917:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4917:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5000:118:7",
															"nodeType": "YulBlock",
															"src": "5000:118:7",
															"statements": [
																{
																	"nativeSrc": "5015:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5015:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5029:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5029:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5019:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5019:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5045:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5045:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5080:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5080:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5091:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5091:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5076:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5076:3:7"
																				},
																				"nativeSrc": "5076:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5076:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5100:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5100:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5055:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5055:20:7"
																		},
																		"nativeSrc": "5055:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5055:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5045:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5045:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4651:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4696:9:7",
														"nodeType": "YulTypedName",
														"src": "4696:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4707:7:7",
														"nodeType": "YulTypedName",
														"src": "4707:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4719:6:7",
														"nodeType": "YulTypedName",
														"src": "4719:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4727:6:7",
														"nodeType": "YulTypedName",
														"src": "4727:6:7",
														"type": ""
													}
												],
												"src": "4651:474:7"
											},
											{
												"body": {
													"nativeSrc": "5159:152:7",
													"nodeType": "YulBlock",
													"src": "5159:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5176:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5176:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5179:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5179:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5169:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5169:6:7"
																},
																"nativeSrc": "5169:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5169:88:7"
															},
															"nativeSrc": "5169:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5169:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5273:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5273:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5276:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5276:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5266:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5266:6:7"
																},
																"nativeSrc": "5266:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5266:15:7"
															},
															"nativeSrc": "5266:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5266:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5297:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5297:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5300:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5300:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5290:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5290:6:7"
																},
																"nativeSrc": "5290:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5290:15:7"
															},
															"nativeSrc": "5290:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5290:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5131:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5131:180:7"
											},
											{
												"body": {
													"nativeSrc": "5368:269:7",
													"nodeType": "YulBlock",
													"src": "5368:269:7",
													"statements": [
														{
															"nativeSrc": "5378:22:7",
															"nodeType": "YulAssignment",
															"src": "5378:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5392:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5392:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5398:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5398:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5388:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5388:3:7"
																},
																"nativeSrc": "5388:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5388:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5378:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5378:6:7"
																}
															]
														},
														{
															"nativeSrc": "5409:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5409:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5439:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5439:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5445:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5445:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5435:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5435:3:7"
																},
																"nativeSrc": "5435:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5435:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5413:18:7",
																	"nodeType": "YulTypedName",
																	"src": "5413:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5486:51:7",
																"nodeType": "YulBlock",
																"src": "5486:51:7",
																"statements": [
																	{
																		"nativeSrc": "5500:27:7",
																		"nodeType": "YulAssignment",
																		"src": "5500:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5514:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5514:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5522:4:7",
																					"nodeType": "YulLiteral",
																					"src": "5522:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5510:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5510:3:7"
																			},
																			"nativeSrc": "5510:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5510:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5500:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5500:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5466:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "5466:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5459:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5459:6:7"
																},
																"nativeSrc": "5459:26:7",
																"nodeType": "YulFunctionCall",
																"src": "5459:26:7"
															},
															"nativeSrc": "5456:81:7",
															"nodeType": "YulIf",
															"src": "5456:81:7"
														},
														{
															"body": {
																"nativeSrc": "5589:42:7",
																"nodeType": "YulBlock",
																"src": "5589:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5603:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5603:16:7"
																			},
																			"nativeSrc": "5603:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5603:18:7"
																		},
																		"nativeSrc": "5603:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5603:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5553:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "5553:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5576:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5576:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5584:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5584:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5573:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5573:2:7"
																		},
																		"nativeSrc": "5573:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5573:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5550:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5550:2:7"
																},
																"nativeSrc": "5550:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5550:38:7"
															},
															"nativeSrc": "5547:84:7",
															"nodeType": "YulIf",
															"src": "5547:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5317:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5352:4:7",
														"nodeType": "YulTypedName",
														"src": "5352:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5361:6:7",
														"nodeType": "YulTypedName",
														"src": "5361:6:7",
														"type": ""
													}
												],
												"src": "5317:320:7"
											},
											{
												"body": {
													"nativeSrc": "5749:68:7",
													"nodeType": "YulBlock",
													"src": "5749:68:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5771:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5771:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5779:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5779:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5767:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5767:3:7"
																		},
																		"nativeSrc": "5767:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5767:14:7"
																	},
																	{
																		"hexValue": "2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "5783:26:7",
																		"nodeType": "YulLiteral",
																		"src": "5783:26:7",
																		"type": "",
																		"value": " caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5760:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5760:6:7"
																},
																"nativeSrc": "5760:50:7",
																"nodeType": "YulFunctionCall",
																"src": "5760:50:7"
															},
															"nativeSrc": "5760:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "5760:50:7"
														}
													]
												},
												"name": "store_literal_in_memory_2c540becca184d5f9f29196779dd3c2db45726cac290f020acea94e53c4ecc1e",
												"nativeSrc": "5643:174:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5741:6:7",
														"nodeType": "YulTypedName",
														"src": "5741:6:7",
														"type": ""
													}
												],
												"src": "5643:174:7"
											},
											{
												"body": {
													"nativeSrc": "5969:220:7",
													"nodeType": "YulBlock",
													"src": "5969:220:7",
													"statements": [
														{
															"nativeSrc": "5979:74:7",
															"nodeType": "YulAssignment",
															"src": "5979:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6045:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6045:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6050:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6050:2:7",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5986:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "5986:58:7"
																},
																"nativeSrc": "5986:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5986:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5979:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5979:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6151:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6151:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2c540becca184d5f9f29196779dd3c2db45726cac290f020acea94e53c4ecc1e",
																	"nativeSrc": "6062:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "6062:88:7"
																},
																"nativeSrc": "6062:93:7",
																"nodeType": "YulFunctionCall",
																"src": "6062:93:7"
															},
															"nativeSrc": "6062:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "6062:93:7"
														},
														{
															"nativeSrc": "6164:19:7",
															"nodeType": "YulAssignment",
															"src": "6164:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6175:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6175:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6180:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6171:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6171:3:7"
																},
																"nativeSrc": "6171:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6171:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6164:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6164:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2c540becca184d5f9f29196779dd3c2db45726cac290f020acea94e53c4ecc1e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5823:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5957:3:7",
														"nodeType": "YulTypedName",
														"src": "5957:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5965:3:7",
														"nodeType": "YulTypedName",
														"src": "5965:3:7",
														"type": ""
													}
												],
												"src": "5823:366:7"
											},
											{
												"body": {
													"nativeSrc": "6366:248:7",
													"nodeType": "YulBlock",
													"src": "6366:248:7",
													"statements": [
														{
															"nativeSrc": "6376:26:7",
															"nodeType": "YulAssignment",
															"src": "6376:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6388:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6388:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6399:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6399:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6384:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6384:3:7"
																},
																"nativeSrc": "6384:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6384:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6376:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6376:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6423:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6423:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6434:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6434:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6419:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6419:3:7"
																		},
																		"nativeSrc": "6419:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6419:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6442:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6442:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6448:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6448:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6438:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6438:3:7"
																		},
																		"nativeSrc": "6438:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6438:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6412:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6412:6:7"
																},
																"nativeSrc": "6412:47:7",
																"nodeType": "YulFunctionCall",
																"src": "6412:47:7"
															},
															"nativeSrc": "6412:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "6412:47:7"
														},
														{
															"nativeSrc": "6468:139:7",
															"nodeType": "YulAssignment",
															"src": "6468:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6602:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6602:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2c540becca184d5f9f29196779dd3c2db45726cac290f020acea94e53c4ecc1e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6476:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "6476:124:7"
																},
																"nativeSrc": "6476:131:7",
																"nodeType": "YulFunctionCall",
																"src": "6476:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6468:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6468:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c540becca184d5f9f29196779dd3c2db45726cac290f020acea94e53c4ecc1e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6195:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6346:9:7",
														"nodeType": "YulTypedName",
														"src": "6346:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6361:4:7",
														"nodeType": "YulTypedName",
														"src": "6361:4:7",
														"type": ""
													}
												],
												"src": "6195:419:7"
											},
											{
												"body": {
													"nativeSrc": "6726:69:7",
													"nodeType": "YulBlock",
													"src": "6726:69:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6748:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6748:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6756:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6756:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6744:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6744:3:7"
																		},
																		"nativeSrc": "6744:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6744:14:7"
																	},
																	{
																		"hexValue": "206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "6760:27:7",
																		"nodeType": "YulLiteral",
																		"src": "6760:27:7",
																		"type": "",
																		"value": " mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6737:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6737:6:7"
																},
																"nativeSrc": "6737:51:7",
																"nodeType": "YulFunctionCall",
																"src": "6737:51:7"
															},
															"nativeSrc": "6737:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "6737:51:7"
														}
													]
												},
												"name": "store_literal_in_memory_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051",
												"nativeSrc": "6620:175:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6718:6:7",
														"nodeType": "YulTypedName",
														"src": "6718:6:7",
														"type": ""
													}
												],
												"src": "6620:175:7"
											},
											{
												"body": {
													"nativeSrc": "6947:220:7",
													"nodeType": "YulBlock",
													"src": "6947:220:7",
													"statements": [
														{
															"nativeSrc": "6957:74:7",
															"nodeType": "YulAssignment",
															"src": "6957:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7023:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7023:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7028:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7028:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6964:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "6964:58:7"
																},
																"nativeSrc": "6964:67:7",
																"nodeType": "YulFunctionCall",
																"src": "6964:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6957:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6957:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7129:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7129:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051",
																	"nativeSrc": "7040:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "7040:88:7"
																},
																"nativeSrc": "7040:93:7",
																"nodeType": "YulFunctionCall",
																"src": "7040:93:7"
															},
															"nativeSrc": "7040:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "7040:93:7"
														},
														{
															"nativeSrc": "7142:19:7",
															"nodeType": "YulAssignment",
															"src": "7142:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7153:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7153:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7158:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7158:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7149:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7149:3:7"
																},
																"nativeSrc": "7149:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7149:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7142:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7142:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6801:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6935:3:7",
														"nodeType": "YulTypedName",
														"src": "6935:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6943:3:7",
														"nodeType": "YulTypedName",
														"src": "6943:3:7",
														"type": ""
													}
												],
												"src": "6801:366:7"
											},
											{
												"body": {
													"nativeSrc": "7344:248:7",
													"nodeType": "YulBlock",
													"src": "7344:248:7",
													"statements": [
														{
															"nativeSrc": "7354:26:7",
															"nodeType": "YulAssignment",
															"src": "7354:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7366:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7366:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7377:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7377:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7362:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7362:3:7"
																},
																"nativeSrc": "7362:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7362:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7354:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7354:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7401:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7401:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7412:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7412:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7397:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7397:3:7"
																		},
																		"nativeSrc": "7397:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7397:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7420:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7420:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7426:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7426:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7416:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7416:3:7"
																		},
																		"nativeSrc": "7416:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7416:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7390:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7390:6:7"
																},
																"nativeSrc": "7390:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7390:47:7"
															},
															"nativeSrc": "7390:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "7390:47:7"
														},
														{
															"nativeSrc": "7446:139:7",
															"nodeType": "YulAssignment",
															"src": "7446:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7580:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7580:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7454:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "7454:124:7"
																},
																"nativeSrc": "7454:131:7",
																"nodeType": "YulFunctionCall",
																"src": "7454:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7446:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7446:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7173:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7324:9:7",
														"nodeType": "YulTypedName",
														"src": "7324:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7339:4:7",
														"nodeType": "YulTypedName",
														"src": "7339:4:7",
														"type": ""
													}
												],
												"src": "7173:419:7"
											},
											{
												"body": {
													"nativeSrc": "7626:152:7",
													"nodeType": "YulBlock",
													"src": "7626:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7643:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7643:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7646:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7646:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7636:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7636:6:7"
																},
																"nativeSrc": "7636:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7636:88:7"
															},
															"nativeSrc": "7636:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7636:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7740:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7740:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7743:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7743:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7733:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7733:6:7"
																},
																"nativeSrc": "7733:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7733:15:7"
															},
															"nativeSrc": "7733:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7733:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7764:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7764:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7767:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7767:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7757:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7757:6:7"
																},
																"nativeSrc": "7757:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7757:15:7"
															},
															"nativeSrc": "7757:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7757:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7598:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7598:180:7"
											},
											{
												"body": {
													"nativeSrc": "7835:51:7",
													"nodeType": "YulBlock",
													"src": "7835:51:7",
													"statements": [
														{
															"nativeSrc": "7845:34:7",
															"nodeType": "YulAssignment",
															"src": "7845:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7870:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7870:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7873:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7873:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7866:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7866:3:7"
																},
																"nativeSrc": "7866:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7866:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7845:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7845:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "7784:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7816:5:7",
														"nodeType": "YulTypedName",
														"src": "7816:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7826:8:7",
														"nodeType": "YulTypedName",
														"src": "7826:8:7",
														"type": ""
													}
												],
												"src": "7784:102:7"
											},
											{
												"body": {
													"nativeSrc": "7965:775:7",
													"nodeType": "YulBlock",
													"src": "7965:775:7",
													"statements": [
														{
															"nativeSrc": "7975:15:7",
															"nodeType": "YulAssignment",
															"src": "7975:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "7984:6:7",
																"nodeType": "YulIdentifier",
																"src": "7984:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7975:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7975:5:7"
																}
															]
														},
														{
															"nativeSrc": "7999:14:7",
															"nodeType": "YulAssignment",
															"src": "7999:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "8008:5:7",
																"nodeType": "YulIdentifier",
																"src": "8008:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7999:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7999:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8057:677:7",
																"nodeType": "YulBlock",
																"src": "8057:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "8145:22:7",
																			"nodeType": "YulBlock",
																			"src": "8145:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8147:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "8147:16:7"
																						},
																						"nativeSrc": "8147:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8147:18:7"
																					},
																					"nativeSrc": "8147:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "8147:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8123:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "8123:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "8133:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8133:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "8138:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8138:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "8129:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8129:3:7"
																					},
																					"nativeSrc": "8129:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8129:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8120:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "8120:2:7"
																			},
																			"nativeSrc": "8120:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8120:24:7"
																		},
																		"nativeSrc": "8117:50:7",
																		"nodeType": "YulIf",
																		"src": "8117:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "8212:419:7",
																			"nodeType": "YulBlock",
																			"src": "8212:419:7",
																			"statements": [
																				{
																					"nativeSrc": "8592:25:7",
																					"nodeType": "YulAssignment",
																					"src": "8592:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "8605:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "8605:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "8612:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "8612:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "8601:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8601:3:7"
																						},
																						"nativeSrc": "8601:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8601:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "8592:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "8592:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8187:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "8187:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8197:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8197:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8183:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8183:3:7"
																			},
																			"nativeSrc": "8183:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8183:16:7"
																		},
																		"nativeSrc": "8180:451:7",
																		"nodeType": "YulIf",
																		"src": "8180:451:7"
																	},
																	{
																		"nativeSrc": "8644:23:7",
																		"nodeType": "YulAssignment",
																		"src": "8644:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8656:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "8656:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "8662:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "8662:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "8652:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8652:3:7"
																			},
																			"nativeSrc": "8652:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8652:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "8644:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8644:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8680:44:7",
																		"nodeType": "YulAssignment",
																		"src": "8680:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8715:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "8715:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "8692:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "8692:22:7"
																			},
																			"nativeSrc": "8692:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8692:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "8680:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "8680:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8033:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "8033:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8043:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8043:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8030:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8030:2:7"
																},
																"nativeSrc": "8030:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8030:15:7"
															},
															"nativeSrc": "8022:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8046:2:7",
																"nodeType": "YulBlock",
																"src": "8046:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "8026:3:7",
																"nodeType": "YulBlock",
																"src": "8026:3:7",
																"statements": []
															},
															"src": "8022:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7892:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7920:6:7",
														"nodeType": "YulTypedName",
														"src": "7920:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7928:5:7",
														"nodeType": "YulTypedName",
														"src": "7928:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7935:8:7",
														"nodeType": "YulTypedName",
														"src": "7935:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7945:3:7",
														"nodeType": "YulTypedName",
														"src": "7945:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7953:5:7",
														"nodeType": "YulTypedName",
														"src": "7953:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "7960:4:7",
														"nodeType": "YulTypedName",
														"src": "7960:4:7",
														"type": ""
													}
												],
												"src": "7892:848:7"
											},
											{
												"body": {
													"nativeSrc": "8806:1013:7",
													"nodeType": "YulBlock",
													"src": "8806:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9001:20:7",
																"nodeType": "YulBlock",
																"src": "9001:20:7",
																"statements": [
																	{
																		"nativeSrc": "9003:10:7",
																		"nodeType": "YulAssignment",
																		"src": "9003:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9012:1:7",
																			"nodeType": "YulLiteral",
																			"src": "9012:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9003:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9003:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9014:5:7",
																		"nodeType": "YulLeave",
																		"src": "9014:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8991:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "8991:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8984:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8984:6:7"
																},
																"nativeSrc": "8984:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8984:16:7"
															},
															"nativeSrc": "8981:40:7",
															"nodeType": "YulIf",
															"src": "8981:40:7"
														},
														{
															"body": {
																"nativeSrc": "9046:20:7",
																"nodeType": "YulBlock",
																"src": "9046:20:7",
																"statements": [
																	{
																		"nativeSrc": "9048:10:7",
																		"nodeType": "YulAssignment",
																		"src": "9048:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9057:1:7",
																			"nodeType": "YulLiteral",
																			"src": "9057:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9048:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9048:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9059:5:7",
																		"nodeType": "YulLeave",
																		"src": "9059:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9040:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9040:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9033:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9033:6:7"
																},
																"nativeSrc": "9033:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9033:12:7"
															},
															"nativeSrc": "9030:36:7",
															"nodeType": "YulIf",
															"src": "9030:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9176:20:7",
																		"nodeType": "YulBlock",
																		"src": "9176:20:7",
																		"statements": [
																			{
																				"nativeSrc": "9178:10:7",
																				"nodeType": "YulAssignment",
																				"src": "9178:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9187:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9187:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9178:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "9178:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "9189:5:7",
																				"nodeType": "YulLeave",
																				"src": "9189:5:7"
																			}
																		]
																	},
																	"nativeSrc": "9169:27:7",
																	"nodeType": "YulCase",
																	"src": "9169:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9174:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9174:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9220:176:7",
																		"nodeType": "YulBlock",
																		"src": "9220:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "9255:22:7",
																					"nodeType": "YulBlock",
																					"src": "9255:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9257:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "9257:16:7"
																								},
																								"nativeSrc": "9257:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9257:18:7"
																							},
																							"nativeSrc": "9257:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "9257:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "9240:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "9240:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9250:3:7",
																							"nodeType": "YulLiteral",
																							"src": "9250:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9237:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "9237:2:7"
																					},
																					"nativeSrc": "9237:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9237:17:7"
																				},
																				"nativeSrc": "9234:43:7",
																				"nodeType": "YulIf",
																				"src": "9234:43:7"
																			},
																			{
																				"nativeSrc": "9290:25:7",
																				"nodeType": "YulAssignment",
																				"src": "9290:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9303:1:7",
																							"nodeType": "YulLiteral",
																							"src": "9303:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "9306:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "9306:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "9299:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "9299:3:7"
																					},
																					"nativeSrc": "9299:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9299:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9290:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "9290:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9346:22:7",
																					"nodeType": "YulBlock",
																					"src": "9346:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9348:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "9348:16:7"
																								},
																								"nativeSrc": "9348:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9348:18:7"
																							},
																							"nativeSrc": "9348:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "9348:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "9334:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "9334:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "9341:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "9341:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9331:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "9331:2:7"
																					},
																					"nativeSrc": "9331:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9331:14:7"
																				},
																				"nativeSrc": "9328:40:7",
																				"nodeType": "YulIf",
																				"src": "9328:40:7"
																			},
																			{
																				"nativeSrc": "9381:5:7",
																				"nodeType": "YulLeave",
																				"src": "9381:5:7"
																			}
																		]
																	},
																	"nativeSrc": "9205:191:7",
																	"nodeType": "YulCase",
																	"src": "9205:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9210:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9210:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "9126:4:7",
																"nodeType": "YulIdentifier",
																"src": "9126:4:7"
															},
															"nativeSrc": "9119:277:7",
															"nodeType": "YulSwitch",
															"src": "9119:277:7"
														},
														{
															"body": {
																"nativeSrc": "9528:123:7",
																"nodeType": "YulBlock",
																"src": "9528:123:7",
																"statements": [
																	{
																		"nativeSrc": "9542:28:7",
																		"nodeType": "YulAssignment",
																		"src": "9542:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9555:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "9555:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "9561:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "9561:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "9551:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9551:3:7"
																			},
																			"nativeSrc": "9551:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9551:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9542:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9542:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9601:22:7",
																			"nodeType": "YulBlock",
																			"src": "9601:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9603:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "9603:16:7"
																						},
																						"nativeSrc": "9603:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9603:18:7"
																					},
																					"nativeSrc": "9603:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "9603:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "9589:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "9589:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "9596:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9596:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9586:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "9586:2:7"
																			},
																			"nativeSrc": "9586:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9586:14:7"
																		},
																		"nativeSrc": "9583:40:7",
																		"nodeType": "YulIf",
																		"src": "9583:40:7"
																	},
																	{
																		"nativeSrc": "9636:5:7",
																		"nodeType": "YulLeave",
																		"src": "9636:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9431:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "9431:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9437:2:7",
																						"nodeType": "YulLiteral",
																						"src": "9437:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9428:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "9428:2:7"
																				},
																				"nativeSrc": "9428:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9428:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9445:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "9445:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9455:2:7",
																						"nodeType": "YulLiteral",
																						"src": "9455:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9442:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "9442:2:7"
																				},
																				"nativeSrc": "9442:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9442:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9424:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9424:3:7"
																		},
																		"nativeSrc": "9424:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9424:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9480:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "9480:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9486:3:7",
																						"nodeType": "YulLiteral",
																						"src": "9486:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9477:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "9477:2:7"
																				},
																				"nativeSrc": "9477:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9477:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9495:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "9495:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9505:2:7",
																						"nodeType": "YulLiteral",
																						"src": "9505:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9492:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "9492:2:7"
																				},
																				"nativeSrc": "9492:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9492:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9473:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9473:3:7"
																		},
																		"nativeSrc": "9473:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9473:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9408:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9408:2:7"
																},
																"nativeSrc": "9408:111:7",
																"nodeType": "YulFunctionCall",
																"src": "9408:111:7"
															},
															"nativeSrc": "9405:246:7",
															"nodeType": "YulIf",
															"src": "9405:246:7"
														},
														{
															"nativeSrc": "9661:57:7",
															"nodeType": "YulAssignment",
															"src": "9661:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9695:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9695:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9698:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9698:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9704:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "9704:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "9714:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9714:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "9676:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "9676:18:7"
																},
																"nativeSrc": "9676:42:7",
																"nodeType": "YulFunctionCall",
																"src": "9676:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9661:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9661:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "9668:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9668:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9757:22:7",
																"nodeType": "YulBlock",
																"src": "9757:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9759:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9759:16:7"
																			},
																			"nativeSrc": "9759:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9759:18:7"
																		},
																		"nativeSrc": "9759:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9759:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9734:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9734:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "9745:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9745:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "9750:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9750:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9741:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9741:3:7"
																		},
																		"nativeSrc": "9741:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9741:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9731:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9731:2:7"
																},
																"nativeSrc": "9731:25:7",
																"nodeType": "YulFunctionCall",
																"src": "9731:25:7"
															},
															"nativeSrc": "9728:51:7",
															"nodeType": "YulIf",
															"src": "9728:51:7"
														},
														{
															"nativeSrc": "9788:25:7",
															"nodeType": "YulAssignment",
															"src": "9788:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9801:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9801:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9808:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9808:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9797:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9797:3:7"
																},
																"nativeSrc": "9797:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9797:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9788:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9788:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "8746:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8776:4:7",
														"nodeType": "YulTypedName",
														"src": "8776:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8782:8:7",
														"nodeType": "YulTypedName",
														"src": "8782:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8792:3:7",
														"nodeType": "YulTypedName",
														"src": "8792:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8800:5:7",
														"nodeType": "YulTypedName",
														"src": "8800:5:7",
														"type": ""
													}
												],
												"src": "8746:1073:7"
											},
											{
												"body": {
													"nativeSrc": "9891:219:7",
													"nodeType": "YulBlock",
													"src": "9891:219:7",
													"statements": [
														{
															"nativeSrc": "9901:31:7",
															"nodeType": "YulAssignment",
															"src": "9901:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9927:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9927:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9909:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9909:17:7"
																},
																"nativeSrc": "9909:23:7",
																"nodeType": "YulFunctionCall",
																"src": "9909:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9901:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9901:4:7"
																}
															]
														},
														{
															"nativeSrc": "9941:39:7",
															"nodeType": "YulAssignment",
															"src": "9941:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9971:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "9971:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9953:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9953:17:7"
																},
																"nativeSrc": "9953:27:7",
																"nodeType": "YulFunctionCall",
																"src": "9953:27:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "9941:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "9941:8:7"
																}
															]
														},
														{
															"nativeSrc": "9990:113:7",
															"nodeType": "YulAssignment",
															"src": "9990:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10020:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10020:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10026:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "10026:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10036:66:7",
																		"nodeType": "YulLiteral",
																		"src": "10036:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9999:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "9999:20:7"
																},
																"nativeSrc": "9999:104:7",
																"nodeType": "YulFunctionCall",
																"src": "9999:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9990:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9990:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "9825:285:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9866:4:7",
														"nodeType": "YulTypedName",
														"src": "9866:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9872:8:7",
														"nodeType": "YulTypedName",
														"src": "9872:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9885:5:7",
														"nodeType": "YulTypedName",
														"src": "9885:5:7",
														"type": ""
													}
												],
												"src": "9825:285:7"
											},
											{
												"body": {
													"nativeSrc": "10164:362:7",
													"nodeType": "YulBlock",
													"src": "10164:362:7",
													"statements": [
														{
															"nativeSrc": "10174:25:7",
															"nodeType": "YulAssignment",
															"src": "10174:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10197:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10197:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10179:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10179:17:7"
																},
																"nativeSrc": "10179:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10179:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10174:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10174:1:7"
																}
															]
														},
														{
															"nativeSrc": "10208:25:7",
															"nodeType": "YulAssignment",
															"src": "10208:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10231:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10231:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10213:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10213:17:7"
																},
																"nativeSrc": "10213:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10213:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10208:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10208:1:7"
																}
															]
														},
														{
															"nativeSrc": "10242:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "10242:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10265:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10265:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10268:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10268:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10261:3:7"
																},
																"nativeSrc": "10261:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10261:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10246:11:7",
																	"nodeType": "YulTypedName",
																	"src": "10246:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10279:41:7",
															"nodeType": "YulAssignment",
															"src": "10279:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10308:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "10308:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10290:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10290:17:7"
																},
																"nativeSrc": "10290:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10290:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10279:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "10279:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10497:22:7",
																"nodeType": "YulBlock",
																"src": "10497:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10499:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10499:16:7"
																			},
																			"nativeSrc": "10499:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10499:18:7"
																		},
																		"nativeSrc": "10499:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10499:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10430:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "10430:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10423:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "10423:6:7"
																				},
																				"nativeSrc": "10423:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10423:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10453:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "10453:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10460:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "10460:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10469:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "10469:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10456:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "10456:3:7"
																						},
																						"nativeSrc": "10456:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "10456:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10450:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "10450:2:7"
																				},
																				"nativeSrc": "10450:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10450:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10403:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10403:2:7"
																		},
																		"nativeSrc": "10403:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10403:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10383:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10383:6:7"
																},
																"nativeSrc": "10383:113:7",
																"nodeType": "YulFunctionCall",
																"src": "10383:113:7"
															},
															"nativeSrc": "10380:139:7",
															"nodeType": "YulIf",
															"src": "10380:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10116:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10147:1:7",
														"nodeType": "YulTypedName",
														"src": "10147:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10150:1:7",
														"nodeType": "YulTypedName",
														"src": "10150:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10156:7:7",
														"nodeType": "YulTypedName",
														"src": "10156:7:7",
														"type": ""
													}
												],
												"src": "10116:410:7"
											},
											{
												"body": {
													"nativeSrc": "10638:74:7",
													"nodeType": "YulBlock",
													"src": "10638:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10660:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10660:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10668:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10668:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10656:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10656:3:7"
																		},
																		"nativeSrc": "10656:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10656:14:7"
																	},
																	{
																		"hexValue": "20617070726f76652066726f6d20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "10672:32:7",
																		"nodeType": "YulLiteral",
																		"src": "10672:32:7",
																		"type": "",
																		"value": " approve from the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10649:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10649:6:7"
																},
																"nativeSrc": "10649:56:7",
																"nodeType": "YulFunctionCall",
																"src": "10649:56:7"
															},
															"nativeSrc": "10649:56:7",
															"nodeType": "YulExpressionStatement",
															"src": "10649:56:7"
														}
													]
												},
												"name": "store_literal_in_memory_20c540669f159a20ed49b45c8953ce643eeae9e8d73cf5fbe5c0cb55a41c85c8",
												"nativeSrc": "10532:180:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10630:6:7",
														"nodeType": "YulTypedName",
														"src": "10630:6:7",
														"type": ""
													}
												],
												"src": "10532:180:7"
											},
											{
												"body": {
													"nativeSrc": "10864:220:7",
													"nodeType": "YulBlock",
													"src": "10864:220:7",
													"statements": [
														{
															"nativeSrc": "10874:74:7",
															"nodeType": "YulAssignment",
															"src": "10874:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10940:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10940:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10945:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10945:2:7",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10881:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10881:58:7"
																},
																"nativeSrc": "10881:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10881:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10874:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10874:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11046:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11046:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_20c540669f159a20ed49b45c8953ce643eeae9e8d73cf5fbe5c0cb55a41c85c8",
																	"nativeSrc": "10957:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10957:88:7"
																},
																"nativeSrc": "10957:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10957:93:7"
															},
															"nativeSrc": "10957:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10957:93:7"
														},
														{
															"nativeSrc": "11059:19:7",
															"nodeType": "YulAssignment",
															"src": "11059:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11070:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11070:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11075:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11075:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11066:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11066:3:7"
																},
																"nativeSrc": "11066:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11066:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11059:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_20c540669f159a20ed49b45c8953ce643eeae9e8d73cf5fbe5c0cb55a41c85c8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10718:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10852:3:7",
														"nodeType": "YulTypedName",
														"src": "10852:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10860:3:7",
														"nodeType": "YulTypedName",
														"src": "10860:3:7",
														"type": ""
													}
												],
												"src": "10718:366:7"
											},
											{
												"body": {
													"nativeSrc": "11261:248:7",
													"nodeType": "YulBlock",
													"src": "11261:248:7",
													"statements": [
														{
															"nativeSrc": "11271:26:7",
															"nodeType": "YulAssignment",
															"src": "11271:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11283:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11283:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11294:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11294:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11279:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11279:3:7"
																},
																"nativeSrc": "11279:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11279:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11271:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11271:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11318:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11318:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11329:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11329:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11314:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11314:3:7"
																		},
																		"nativeSrc": "11314:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11314:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11337:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11337:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11343:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11343:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11333:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11333:3:7"
																		},
																		"nativeSrc": "11333:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11333:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11307:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11307:6:7"
																},
																"nativeSrc": "11307:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11307:47:7"
															},
															"nativeSrc": "11307:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11307:47:7"
														},
														{
															"nativeSrc": "11363:139:7",
															"nodeType": "YulAssignment",
															"src": "11363:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11497:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11497:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_20c540669f159a20ed49b45c8953ce643eeae9e8d73cf5fbe5c0cb55a41c85c8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11371:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11371:124:7"
																},
																"nativeSrc": "11371:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11371:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11363:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11363:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_20c540669f159a20ed49b45c8953ce643eeae9e8d73cf5fbe5c0cb55a41c85c8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11090:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11241:9:7",
														"nodeType": "YulTypedName",
														"src": "11241:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11256:4:7",
														"nodeType": "YulTypedName",
														"src": "11256:4:7",
														"type": ""
													}
												],
												"src": "11090:419:7"
											},
											{
												"body": {
													"nativeSrc": "11621:72:7",
													"nodeType": "YulBlock",
													"src": "11621:72:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11643:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11643:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11651:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11651:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11639:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11639:3:7"
																		},
																		"nativeSrc": "11639:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11639:14:7"
																	},
																	{
																		"hexValue": "20617070726f766520746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "11655:30:7",
																		"nodeType": "YulLiteral",
																		"src": "11655:30:7",
																		"type": "",
																		"value": " approve to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11632:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11632:6:7"
																},
																"nativeSrc": "11632:54:7",
																"nodeType": "YulFunctionCall",
																"src": "11632:54:7"
															},
															"nativeSrc": "11632:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "11632:54:7"
														}
													]
												},
												"name": "store_literal_in_memory_b812d4684306b8007a1ced2adbd53f18c6bbc6a24a673a6df98d07d2eeb872d4",
												"nativeSrc": "11515:178:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11613:6:7",
														"nodeType": "YulTypedName",
														"src": "11613:6:7",
														"type": ""
													}
												],
												"src": "11515:178:7"
											},
											{
												"body": {
													"nativeSrc": "11845:220:7",
													"nodeType": "YulBlock",
													"src": "11845:220:7",
													"statements": [
														{
															"nativeSrc": "11855:74:7",
															"nodeType": "YulAssignment",
															"src": "11855:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11921:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11921:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11926:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11926:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11862:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11862:58:7"
																},
																"nativeSrc": "11862:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11862:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11855:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11855:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12027:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12027:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b812d4684306b8007a1ced2adbd53f18c6bbc6a24a673a6df98d07d2eeb872d4",
																	"nativeSrc": "11938:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11938:88:7"
																},
																"nativeSrc": "11938:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11938:93:7"
															},
															"nativeSrc": "11938:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11938:93:7"
														},
														{
															"nativeSrc": "12040:19:7",
															"nodeType": "YulAssignment",
															"src": "12040:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12051:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12051:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12056:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12056:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12047:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12047:3:7"
																},
																"nativeSrc": "12047:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12047:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12040:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12040:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b812d4684306b8007a1ced2adbd53f18c6bbc6a24a673a6df98d07d2eeb872d4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11699:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11833:3:7",
														"nodeType": "YulTypedName",
														"src": "11833:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11841:3:7",
														"nodeType": "YulTypedName",
														"src": "11841:3:7",
														"type": ""
													}
												],
												"src": "11699:366:7"
											},
											{
												"body": {
													"nativeSrc": "12242:248:7",
													"nodeType": "YulBlock",
													"src": "12242:248:7",
													"statements": [
														{
															"nativeSrc": "12252:26:7",
															"nodeType": "YulAssignment",
															"src": "12252:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12264:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12264:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12275:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12275:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12260:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12260:3:7"
																},
																"nativeSrc": "12260:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12260:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12252:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12252:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12299:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12299:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12310:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12310:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12295:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12295:3:7"
																		},
																		"nativeSrc": "12295:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12295:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12318:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12318:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12324:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12324:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12314:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12314:3:7"
																		},
																		"nativeSrc": "12314:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12314:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12288:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12288:6:7"
																},
																"nativeSrc": "12288:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12288:47:7"
															},
															"nativeSrc": "12288:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12288:47:7"
														},
														{
															"nativeSrc": "12344:139:7",
															"nodeType": "YulAssignment",
															"src": "12344:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12478:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12478:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b812d4684306b8007a1ced2adbd53f18c6bbc6a24a673a6df98d07d2eeb872d4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12352:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12352:124:7"
																},
																"nativeSrc": "12352:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12352:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12344:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12344:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b812d4684306b8007a1ced2adbd53f18c6bbc6a24a673a6df98d07d2eeb872d4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12071:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12222:9:7",
														"nodeType": "YulTypedName",
														"src": "12222:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12237:4:7",
														"nodeType": "YulTypedName",
														"src": "12237:4:7",
														"type": ""
													}
												],
												"src": "12071:419:7"
											},
											{
												"body": {
													"nativeSrc": "12561:53:7",
													"nodeType": "YulBlock",
													"src": "12561:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12578:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12578:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12601:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "12601:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "12583:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "12583:17:7"
																		},
																		"nativeSrc": "12583:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12583:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12571:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12571:6:7"
																},
																"nativeSrc": "12571:37:7",
																"nodeType": "YulFunctionCall",
																"src": "12571:37:7"
															},
															"nativeSrc": "12571:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "12571:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "12496:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12549:5:7",
														"nodeType": "YulTypedName",
														"src": "12549:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12556:3:7",
														"nodeType": "YulTypedName",
														"src": "12556:3:7",
														"type": ""
													}
												],
												"src": "12496:118:7"
											},
											{
												"body": {
													"nativeSrc": "12746:206:7",
													"nodeType": "YulBlock",
													"src": "12746:206:7",
													"statements": [
														{
															"nativeSrc": "12756:26:7",
															"nodeType": "YulAssignment",
															"src": "12756:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12768:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12768:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12779:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12779:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12764:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12764:3:7"
																},
																"nativeSrc": "12764:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12764:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12756:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12756:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12836:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12836:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12849:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12849:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12860:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12860:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12845:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12845:3:7"
																		},
																		"nativeSrc": "12845:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12845:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12792:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "12792:43:7"
																},
																"nativeSrc": "12792:71:7",
																"nodeType": "YulFunctionCall",
																"src": "12792:71:7"
															},
															"nativeSrc": "12792:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "12792:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12917:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12917:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12930:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12930:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12941:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12941:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12926:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12926:3:7"
																		},
																		"nativeSrc": "12926:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12926:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12873:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "12873:43:7"
																},
																"nativeSrc": "12873:72:7",
																"nodeType": "YulFunctionCall",
																"src": "12873:72:7"
															},
															"nativeSrc": "12873:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "12873:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12620:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12710:9:7",
														"nodeType": "YulTypedName",
														"src": "12710:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12722:6:7",
														"nodeType": "YulTypedName",
														"src": "12722:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12730:6:7",
														"nodeType": "YulTypedName",
														"src": "12730:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12741:4:7",
														"nodeType": "YulTypedName",
														"src": "12741:4:7",
														"type": ""
													}
												],
												"src": "12620:332:7"
											},
											{
												"body": {
													"nativeSrc": "13064:63:7",
													"nodeType": "YulBlock",
													"src": "13064:63:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13086:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13086:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13094:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13094:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13082:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13082:3:7"
																		},
																		"nativeSrc": "13082:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13082:14:7"
																	},
																	{
																		"hexValue": "20616c6c6f77616e6365206578636565646564",
																		"kind": "string",
																		"nativeSrc": "13098:21:7",
																		"nodeType": "YulLiteral",
																		"src": "13098:21:7",
																		"type": "",
																		"value": " allowance exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13075:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13075:6:7"
																},
																"nativeSrc": "13075:45:7",
																"nodeType": "YulFunctionCall",
																"src": "13075:45:7"
															},
															"nativeSrc": "13075:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "13075:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_76c35e8552a19137f541ba350ea2f59c360729aeffd91a00d8389d78b4fc86bb",
												"nativeSrc": "12958:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13056:6:7",
														"nodeType": "YulTypedName",
														"src": "13056:6:7",
														"type": ""
													}
												],
												"src": "12958:169:7"
											},
											{
												"body": {
													"nativeSrc": "13279:220:7",
													"nodeType": "YulBlock",
													"src": "13279:220:7",
													"statements": [
														{
															"nativeSrc": "13289:74:7",
															"nodeType": "YulAssignment",
															"src": "13289:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13355:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13355:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13360:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13360:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13296:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13296:58:7"
																},
																"nativeSrc": "13296:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13296:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13289:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13289:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13461:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13461:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_76c35e8552a19137f541ba350ea2f59c360729aeffd91a00d8389d78b4fc86bb",
																	"nativeSrc": "13372:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13372:88:7"
																},
																"nativeSrc": "13372:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13372:93:7"
															},
															"nativeSrc": "13372:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13372:93:7"
														},
														{
															"nativeSrc": "13474:19:7",
															"nodeType": "YulAssignment",
															"src": "13474:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13485:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13485:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13490:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13490:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13481:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13481:3:7"
																},
																"nativeSrc": "13481:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13481:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13474:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13474:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_76c35e8552a19137f541ba350ea2f59c360729aeffd91a00d8389d78b4fc86bb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13133:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13267:3:7",
														"nodeType": "YulTypedName",
														"src": "13267:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13275:3:7",
														"nodeType": "YulTypedName",
														"src": "13275:3:7",
														"type": ""
													}
												],
												"src": "13133:366:7"
											},
											{
												"body": {
													"nativeSrc": "13676:248:7",
													"nodeType": "YulBlock",
													"src": "13676:248:7",
													"statements": [
														{
															"nativeSrc": "13686:26:7",
															"nodeType": "YulAssignment",
															"src": "13686:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13698:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13698:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13709:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13709:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13694:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13694:3:7"
																},
																"nativeSrc": "13694:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13694:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13686:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13686:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13733:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13733:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13744:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13744:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13729:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13729:3:7"
																		},
																		"nativeSrc": "13729:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13729:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13752:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13752:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13758:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13758:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13748:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13748:3:7"
																		},
																		"nativeSrc": "13748:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13748:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13722:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13722:6:7"
																},
																"nativeSrc": "13722:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13722:47:7"
															},
															"nativeSrc": "13722:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13722:47:7"
														},
														{
															"nativeSrc": "13778:139:7",
															"nodeType": "YulAssignment",
															"src": "13778:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13912:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13912:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_76c35e8552a19137f541ba350ea2f59c360729aeffd91a00d8389d78b4fc86bb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13786:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13786:124:7"
																},
																"nativeSrc": "13786:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13786:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13778:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13778:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_76c35e8552a19137f541ba350ea2f59c360729aeffd91a00d8389d78b4fc86bb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13505:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13656:9:7",
														"nodeType": "YulTypedName",
														"src": "13656:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13671:4:7",
														"nodeType": "YulTypedName",
														"src": "13671:4:7",
														"type": ""
													}
												],
												"src": "13505:419:7"
											},
											{
												"body": {
													"nativeSrc": "14036:75:7",
													"nodeType": "YulBlock",
													"src": "14036:75:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14058:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14058:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14066:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14066:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14054:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14054:3:7"
																		},
																		"nativeSrc": "14054:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14054:14:7"
																	},
																	{
																		"hexValue": "207472616e736665722066726f6d20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "14070:33:7",
																		"nodeType": "YulLiteral",
																		"src": "14070:33:7",
																		"type": "",
																		"value": " transfer from the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14047:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14047:6:7"
																},
																"nativeSrc": "14047:57:7",
																"nodeType": "YulFunctionCall",
																"src": "14047:57:7"
															},
															"nativeSrc": "14047:57:7",
															"nodeType": "YulExpressionStatement",
															"src": "14047:57:7"
														}
													]
												},
												"name": "store_literal_in_memory_52d62de738b33c87646e159de19563a9f80b9e1fa1b35788579bc1530b641267",
												"nativeSrc": "13930:181:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14028:6:7",
														"nodeType": "YulTypedName",
														"src": "14028:6:7",
														"type": ""
													}
												],
												"src": "13930:181:7"
											},
											{
												"body": {
													"nativeSrc": "14263:220:7",
													"nodeType": "YulBlock",
													"src": "14263:220:7",
													"statements": [
														{
															"nativeSrc": "14273:74:7",
															"nodeType": "YulAssignment",
															"src": "14273:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14339:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14339:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14344:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14344:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14280:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "14280:58:7"
																},
																"nativeSrc": "14280:67:7",
																"nodeType": "YulFunctionCall",
																"src": "14280:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14273:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14273:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14445:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14445:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_52d62de738b33c87646e159de19563a9f80b9e1fa1b35788579bc1530b641267",
																	"nativeSrc": "14356:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "14356:88:7"
																},
																"nativeSrc": "14356:93:7",
																"nodeType": "YulFunctionCall",
																"src": "14356:93:7"
															},
															"nativeSrc": "14356:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "14356:93:7"
														},
														{
															"nativeSrc": "14458:19:7",
															"nodeType": "YulAssignment",
															"src": "14458:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14469:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14469:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14474:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14474:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14465:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14465:3:7"
																},
																"nativeSrc": "14465:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14465:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14458:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14458:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_52d62de738b33c87646e159de19563a9f80b9e1fa1b35788579bc1530b641267_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14117:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14251:3:7",
														"nodeType": "YulTypedName",
														"src": "14251:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14259:3:7",
														"nodeType": "YulTypedName",
														"src": "14259:3:7",
														"type": ""
													}
												],
												"src": "14117:366:7"
											},
											{
												"body": {
													"nativeSrc": "14660:248:7",
													"nodeType": "YulBlock",
													"src": "14660:248:7",
													"statements": [
														{
															"nativeSrc": "14670:26:7",
															"nodeType": "YulAssignment",
															"src": "14670:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14682:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14682:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14693:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14693:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14678:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14678:3:7"
																},
																"nativeSrc": "14678:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14678:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14670:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14670:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14717:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14717:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14728:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14728:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14713:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14713:3:7"
																		},
																		"nativeSrc": "14713:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14713:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14736:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14736:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14742:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14742:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14732:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14732:3:7"
																		},
																		"nativeSrc": "14732:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14732:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14706:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14706:6:7"
																},
																"nativeSrc": "14706:47:7",
																"nodeType": "YulFunctionCall",
																"src": "14706:47:7"
															},
															"nativeSrc": "14706:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "14706:47:7"
														},
														{
															"nativeSrc": "14762:139:7",
															"nodeType": "YulAssignment",
															"src": "14762:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14896:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14896:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_52d62de738b33c87646e159de19563a9f80b9e1fa1b35788579bc1530b641267_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14770:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "14770:124:7"
																},
																"nativeSrc": "14770:131:7",
																"nodeType": "YulFunctionCall",
																"src": "14770:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14762:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14762:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52d62de738b33c87646e159de19563a9f80b9e1fa1b35788579bc1530b641267__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14489:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14640:9:7",
														"nodeType": "YulTypedName",
														"src": "14640:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14655:4:7",
														"nodeType": "YulTypedName",
														"src": "14655:4:7",
														"type": ""
													}
												],
												"src": "14489:419:7"
											},
											{
												"body": {
													"nativeSrc": "15020:73:7",
													"nodeType": "YulBlock",
													"src": "15020:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15042:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "15042:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15050:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15050:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15038:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15038:3:7"
																		},
																		"nativeSrc": "15038:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15038:14:7"
																	},
																	{
																		"hexValue": "207472616e7366657220746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "15054:31:7",
																		"nodeType": "YulLiteral",
																		"src": "15054:31:7",
																		"type": "",
																		"value": " transfer to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15031:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15031:6:7"
																},
																"nativeSrc": "15031:55:7",
																"nodeType": "YulFunctionCall",
																"src": "15031:55:7"
															},
															"nativeSrc": "15031:55:7",
															"nodeType": "YulExpressionStatement",
															"src": "15031:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_5ae357b8326e49c636736622eb1e29ffe9c8ffdabb32b4217f01e18b36eb6348",
												"nativeSrc": "14914:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15012:6:7",
														"nodeType": "YulTypedName",
														"src": "15012:6:7",
														"type": ""
													}
												],
												"src": "14914:179:7"
											},
											{
												"body": {
													"nativeSrc": "15245:220:7",
													"nodeType": "YulBlock",
													"src": "15245:220:7",
													"statements": [
														{
															"nativeSrc": "15255:74:7",
															"nodeType": "YulAssignment",
															"src": "15255:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15321:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15321:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15326:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15326:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15262:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "15262:58:7"
																},
																"nativeSrc": "15262:67:7",
																"nodeType": "YulFunctionCall",
																"src": "15262:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15255:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15255:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15427:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15427:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5ae357b8326e49c636736622eb1e29ffe9c8ffdabb32b4217f01e18b36eb6348",
																	"nativeSrc": "15338:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "15338:88:7"
																},
																"nativeSrc": "15338:93:7",
																"nodeType": "YulFunctionCall",
																"src": "15338:93:7"
															},
															"nativeSrc": "15338:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "15338:93:7"
														},
														{
															"nativeSrc": "15440:19:7",
															"nodeType": "YulAssignment",
															"src": "15440:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15451:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15451:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15456:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15456:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15447:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15447:3:7"
																},
																"nativeSrc": "15447:12:7",
																"nodeType": "YulFunctionCall",
																"src": "15447:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15440:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15440:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5ae357b8326e49c636736622eb1e29ffe9c8ffdabb32b4217f01e18b36eb6348_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15099:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15233:3:7",
														"nodeType": "YulTypedName",
														"src": "15233:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15241:3:7",
														"nodeType": "YulTypedName",
														"src": "15241:3:7",
														"type": ""
													}
												],
												"src": "15099:366:7"
											},
											{
												"body": {
													"nativeSrc": "15642:248:7",
													"nodeType": "YulBlock",
													"src": "15642:248:7",
													"statements": [
														{
															"nativeSrc": "15652:26:7",
															"nodeType": "YulAssignment",
															"src": "15652:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15664:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15664:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15675:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15675:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15660:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15660:3:7"
																},
																"nativeSrc": "15660:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15660:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15652:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15652:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15699:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15699:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15710:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15710:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15695:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15695:3:7"
																		},
																		"nativeSrc": "15695:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15695:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15718:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "15718:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15724:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15724:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15714:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15714:3:7"
																		},
																		"nativeSrc": "15714:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15714:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15688:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15688:6:7"
																},
																"nativeSrc": "15688:47:7",
																"nodeType": "YulFunctionCall",
																"src": "15688:47:7"
															},
															"nativeSrc": "15688:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "15688:47:7"
														},
														{
															"nativeSrc": "15744:139:7",
															"nodeType": "YulAssignment",
															"src": "15744:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15878:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15878:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5ae357b8326e49c636736622eb1e29ffe9c8ffdabb32b4217f01e18b36eb6348_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15752:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "15752:124:7"
																},
																"nativeSrc": "15752:131:7",
																"nodeType": "YulFunctionCall",
																"src": "15752:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15744:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15744:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5ae357b8326e49c636736622eb1e29ffe9c8ffdabb32b4217f01e18b36eb6348__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15471:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15622:9:7",
														"nodeType": "YulTypedName",
														"src": "15622:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15637:4:7",
														"nodeType": "YulTypedName",
														"src": "15637:4:7",
														"type": ""
													}
												],
												"src": "15471:419:7"
											},
											{
												"body": {
													"nativeSrc": "16002:65:7",
													"nodeType": "YulBlock",
													"src": "16002:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16024:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16024:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16032:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16032:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16020:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16020:3:7"
																		},
																		"nativeSrc": "16020:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16020:14:7"
																	},
																	{
																		"hexValue": "20696e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "16036:23:7",
																		"nodeType": "YulLiteral",
																		"src": "16036:23:7",
																		"type": "",
																		"value": " insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16013:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16013:6:7"
																},
																"nativeSrc": "16013:47:7",
																"nodeType": "YulFunctionCall",
																"src": "16013:47:7"
															},
															"nativeSrc": "16013:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "16013:47:7"
														}
													]
												},
												"name": "store_literal_in_memory_5020d33bc2d617c34f2d5000e4f91964978b5792b811cdb87a70476114286e7c",
												"nativeSrc": "15896:171:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15994:6:7",
														"nodeType": "YulTypedName",
														"src": "15994:6:7",
														"type": ""
													}
												],
												"src": "15896:171:7"
											},
											{
												"body": {
													"nativeSrc": "16219:220:7",
													"nodeType": "YulBlock",
													"src": "16219:220:7",
													"statements": [
														{
															"nativeSrc": "16229:74:7",
															"nodeType": "YulAssignment",
															"src": "16229:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16295:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16295:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16300:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16300:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16236:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "16236:58:7"
																},
																"nativeSrc": "16236:67:7",
																"nodeType": "YulFunctionCall",
																"src": "16236:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16229:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16229:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16401:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16401:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5020d33bc2d617c34f2d5000e4f91964978b5792b811cdb87a70476114286e7c",
																	"nativeSrc": "16312:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "16312:88:7"
																},
																"nativeSrc": "16312:93:7",
																"nodeType": "YulFunctionCall",
																"src": "16312:93:7"
															},
															"nativeSrc": "16312:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "16312:93:7"
														},
														{
															"nativeSrc": "16414:19:7",
															"nodeType": "YulAssignment",
															"src": "16414:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16425:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16425:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16430:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16430:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16421:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16421:3:7"
																},
																"nativeSrc": "16421:12:7",
																"nodeType": "YulFunctionCall",
																"src": "16421:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16414:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16414:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5020d33bc2d617c34f2d5000e4f91964978b5792b811cdb87a70476114286e7c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16073:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16207:3:7",
														"nodeType": "YulTypedName",
														"src": "16207:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16215:3:7",
														"nodeType": "YulTypedName",
														"src": "16215:3:7",
														"type": ""
													}
												],
												"src": "16073:366:7"
											},
											{
												"body": {
													"nativeSrc": "16616:248:7",
													"nodeType": "YulBlock",
													"src": "16616:248:7",
													"statements": [
														{
															"nativeSrc": "16626:26:7",
															"nodeType": "YulAssignment",
															"src": "16626:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16638:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16638:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16649:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16649:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16634:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16634:3:7"
																},
																"nativeSrc": "16634:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16634:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16626:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16626:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16673:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16673:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16684:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16684:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16669:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16669:3:7"
																		},
																		"nativeSrc": "16669:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16669:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16692:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "16692:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16698:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16698:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16688:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16688:3:7"
																		},
																		"nativeSrc": "16688:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16688:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16662:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16662:6:7"
																},
																"nativeSrc": "16662:47:7",
																"nodeType": "YulFunctionCall",
																"src": "16662:47:7"
															},
															"nativeSrc": "16662:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "16662:47:7"
														},
														{
															"nativeSrc": "16718:139:7",
															"nodeType": "YulAssignment",
															"src": "16718:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16852:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16852:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5020d33bc2d617c34f2d5000e4f91964978b5792b811cdb87a70476114286e7c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16726:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "16726:124:7"
																},
																"nativeSrc": "16726:131:7",
																"nodeType": "YulFunctionCall",
																"src": "16726:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16718:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16718:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5020d33bc2d617c34f2d5000e4f91964978b5792b811cdb87a70476114286e7c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16445:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16596:9:7",
														"nodeType": "YulTypedName",
														"src": "16596:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16611:4:7",
														"nodeType": "YulTypedName",
														"src": "16611:4:7",
														"type": ""
													}
												],
												"src": "16445:419:7"
											},
											{
												"body": {
													"nativeSrc": "16914:147:7",
													"nodeType": "YulBlock",
													"src": "16914:147:7",
													"statements": [
														{
															"nativeSrc": "16924:25:7",
															"nodeType": "YulAssignment",
															"src": "16924:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16947:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16947:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16929:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "16929:17:7"
																},
																"nativeSrc": "16929:20:7",
																"nodeType": "YulFunctionCall",
																"src": "16929:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16924:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "16924:1:7"
																}
															]
														},
														{
															"nativeSrc": "16958:25:7",
															"nodeType": "YulAssignment",
															"src": "16958:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16981:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16981:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16963:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "16963:17:7"
																},
																"nativeSrc": "16963:20:7",
																"nodeType": "YulFunctionCall",
																"src": "16963:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16958:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "16958:1:7"
																}
															]
														},
														{
															"nativeSrc": "16992:16:7",
															"nodeType": "YulAssignment",
															"src": "16992:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17003:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17003:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17006:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17006:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16999:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16999:3:7"
																},
																"nativeSrc": "16999:9:7",
																"nodeType": "YulFunctionCall",
																"src": "16999:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "16992:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16992:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17032:22:7",
																"nodeType": "YulBlock",
																"src": "17032:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17034:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "17034:16:7"
																			},
																			"nativeSrc": "17034:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17034:18:7"
																		},
																		"nativeSrc": "17034:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "17034:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17024:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17024:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "17027:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17027:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17021:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17021:2:7"
																},
																"nativeSrc": "17021:10:7",
																"nodeType": "YulFunctionCall",
																"src": "17021:10:7"
															},
															"nativeSrc": "17018:36:7",
															"nodeType": "YulIf",
															"src": "17018:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "16870:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16901:1:7",
														"nodeType": "YulTypedName",
														"src": "16901:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16904:1:7",
														"nodeType": "YulTypedName",
														"src": "16904:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "16910:3:7",
														"nodeType": "YulTypedName",
														"src": "16910:3:7",
														"type": ""
													}
												],
												"src": "16870:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_2c540becca184d5f9f29196779dd3c2db45726cac290f020acea94e53c4ecc1e(memPtr) {\n\n        mstore(add(memPtr, 0), \" caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_2c540becca184d5f9f29196779dd3c2db45726cac290f020acea94e53c4ecc1e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_2c540becca184d5f9f29196779dd3c2db45726cac290f020acea94e53c4ecc1e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2c540becca184d5f9f29196779dd3c2db45726cac290f020acea94e53c4ecc1e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2c540becca184d5f9f29196779dd3c2db45726cac290f020acea94e53c4ecc1e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051(memPtr) {\n\n        mstore(add(memPtr, 0), \" mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_20c540669f159a20ed49b45c8953ce643eeae9e8d73cf5fbe5c0cb55a41c85c8(memPtr) {\n\n        mstore(add(memPtr, 0), \" approve from the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_20c540669f159a20ed49b45c8953ce643eeae9e8d73cf5fbe5c0cb55a41c85c8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_20c540669f159a20ed49b45c8953ce643eeae9e8d73cf5fbe5c0cb55a41c85c8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_20c540669f159a20ed49b45c8953ce643eeae9e8d73cf5fbe5c0cb55a41c85c8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_20c540669f159a20ed49b45c8953ce643eeae9e8d73cf5fbe5c0cb55a41c85c8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b812d4684306b8007a1ced2adbd53f18c6bbc6a24a673a6df98d07d2eeb872d4(memPtr) {\n\n        mstore(add(memPtr, 0), \" approve to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_b812d4684306b8007a1ced2adbd53f18c6bbc6a24a673a6df98d07d2eeb872d4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_b812d4684306b8007a1ced2adbd53f18c6bbc6a24a673a6df98d07d2eeb872d4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b812d4684306b8007a1ced2adbd53f18c6bbc6a24a673a6df98d07d2eeb872d4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b812d4684306b8007a1ced2adbd53f18c6bbc6a24a673a6df98d07d2eeb872d4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_76c35e8552a19137f541ba350ea2f59c360729aeffd91a00d8389d78b4fc86bb(memPtr) {\n\n        mstore(add(memPtr, 0), \" allowance exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_76c35e8552a19137f541ba350ea2f59c360729aeffd91a00d8389d78b4fc86bb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_76c35e8552a19137f541ba350ea2f59c360729aeffd91a00d8389d78b4fc86bb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_76c35e8552a19137f541ba350ea2f59c360729aeffd91a00d8389d78b4fc86bb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_76c35e8552a19137f541ba350ea2f59c360729aeffd91a00d8389d78b4fc86bb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_52d62de738b33c87646e159de19563a9f80b9e1fa1b35788579bc1530b641267(memPtr) {\n\n        mstore(add(memPtr, 0), \" transfer from the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_52d62de738b33c87646e159de19563a9f80b9e1fa1b35788579bc1530b641267_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_52d62de738b33c87646e159de19563a9f80b9e1fa1b35788579bc1530b641267(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_52d62de738b33c87646e159de19563a9f80b9e1fa1b35788579bc1530b641267__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_52d62de738b33c87646e159de19563a9f80b9e1fa1b35788579bc1530b641267_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5ae357b8326e49c636736622eb1e29ffe9c8ffdabb32b4217f01e18b36eb6348(memPtr) {\n\n        mstore(add(memPtr, 0), \" transfer to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_5ae357b8326e49c636736622eb1e29ffe9c8ffdabb32b4217f01e18b36eb6348_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_5ae357b8326e49c636736622eb1e29ffe9c8ffdabb32b4217f01e18b36eb6348(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5ae357b8326e49c636736622eb1e29ffe9c8ffdabb32b4217f01e18b36eb6348__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5ae357b8326e49c636736622eb1e29ffe9c8ffdabb32b4217f01e18b36eb6348_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5020d33bc2d617c34f2d5000e4f91964978b5792b811cdb87a70476114286e7c(memPtr) {\n\n        mstore(add(memPtr, 0), \" insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_5020d33bc2d617c34f2d5000e4f91964978b5792b811cdb87a70476114286e7c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_5020d33bc2d617c34f2d5000e4f91964978b5792b811cdb87a70476114286e7c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5020d33bc2d617c34f2d5000e4f91964978b5792b811cdb87a70476114286e7c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5020d33bc2d617c34f2d5000e4f91964978b5792b811cdb87a70476114286e7c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061009c575f3560e01c806340c10f191161006457806340c10f191461015a57806370a082311461017657806395d89b41146101a6578063a9059cbb146101c4578063dd62ed3e146101f45761009c565b806306fdde03146100a0578063095ea7b3146100be57806318160ddd146100ee57806323b872dd1461010c578063313ce5671461013c575b5f5ffd5b6100a8610224565b6040516100b59190610c14565b60405180910390f35b6100d860048036038101906100d39190610cc5565b6102af565b6040516100e59190610d1d565b60405180910390f35b6100f66102ca565b6040516101039190610d45565b60405180910390f35b61012660048036038101906101219190610d5e565b6102d0565b6040516101339190610d1d565b60405180910390f35b6101446102f7565b6040516101519190610d45565b60405180910390f35b610174600480360381019061016f9190610cc5565b6102fd565b005b610190600480360381019061018b9190610dae565b610421565b60405161019d9190610d45565b60405180910390f35b6101ae610467565b6040516101bb9190610c14565b60405180910390f35b6101de60048036038101906101d99190610cc5565b6104f3565b6040516101eb9190610d1d565b60405180910390f35b61020e60048036038101906102099190610dd9565b61050e565b60405161021b9190610d45565b60405180910390f35b5f805461023090610e44565b80601f016020809104026020016040519081016040528092919081815260200182805461025c90610e44565b80156102a75780601f1061027e576101008083540402835291602001916102a7565b820191905f5260205f20905b81548152906001019060200180831161028a57829003601f168201915b505050505081565b5f5f3390506102bf818585610590565b600191505092915050565b60035481565b5f5f3390506102e085828561073f565b6102eb858585610839565b60019150509392505050565b60025481565b3373ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461038c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038390610ebe565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190610f26565b60405180910390fd5b61041d82600254600a61040d91906110a0565b8361041891906110ea565b610a7f565b5050565b5f60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6001805461047490610e44565b80601f01602080910402602001604051908101604052809291908181526020018280546104a090610e44565b80156104eb5780601f106104c2576101008083540402835291602001916104eb565b820191905f5260205f20905b8154815290600101906020018083116104ce57829003601f168201915b505050505081565b5f5f339050610503818585610839565b600191505092915050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f590611175565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361066c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610663906111dd565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550428373ffffffffffffffffffffffffffffffffffffffff167fb3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a7848460405161073292919061120a565b60405180910390a3505050565b5f60055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108335781811015610825576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081c9061127b565b60405180910390fd5b6108328484848403610590565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089e906112e3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090c9061134b565b60405180910390fd5b8060045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098c906113b3565b60405180910390fd5b8060045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055508060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282540192505081905550428373ffffffffffffffffffffffffffffffffffffffff167f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc448484604051610a7292919061120a565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae490610f26565b60405180910390fd5b8060035f828254610afe91906113d1565b925050819055508060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282540192505081905550425f73ffffffffffffffffffffffffffffffffffffffff167f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc448484604051610b9892919061120a565b60405180910390a35050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610be682610ba4565b610bf08185610bae565b9350610c00818560208601610bbe565b610c0981610bcc565b840191505092915050565b5f6020820190508181035f830152610c2c8184610bdc565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c6182610c38565b9050919050565b610c7181610c57565b8114610c7b575f5ffd5b50565b5f81359050610c8c81610c68565b92915050565b5f819050919050565b610ca481610c92565b8114610cae575f5ffd5b50565b5f81359050610cbf81610c9b565b92915050565b5f5f60408385031215610cdb57610cda610c34565b5b5f610ce885828601610c7e565b9250506020610cf985828601610cb1565b9150509250929050565b5f8115159050919050565b610d1781610d03565b82525050565b5f602082019050610d305f830184610d0e565b92915050565b610d3f81610c92565b82525050565b5f602082019050610d585f830184610d36565b92915050565b5f5f5f60608486031215610d7557610d74610c34565b5b5f610d8286828701610c7e565b9350506020610d9386828701610c7e565b9250506040610da486828701610cb1565b9150509250925092565b5f60208284031215610dc357610dc2610c34565b5b5f610dd084828501610c7e565b91505092915050565b5f5f60408385031215610def57610dee610c34565b5b5f610dfc85828601610c7e565b9250506020610e0d85828601610c7e565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610e5b57607f821691505b602082108103610e6e57610e6d610e17565b5b50919050565b7f2063616c6c6572206973206e6f7420746865206f776e657200000000000000005f82015250565b5f610ea8601883610bae565b9150610eb382610e74565b602082019050919050565b5f6020820190508181035f830152610ed581610e9c565b9050919050565b7f206d696e7420746f20746865207a65726f2061646472657373000000000000005f82015250565b5f610f10601983610bae565b9150610f1b82610edc565b602082019050919050565b5f6020820190508181035f830152610f3d81610f04565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b6001851115610fc657808604811115610fa257610fa1610f44565b5b6001851615610fb15780820291505b8081029050610fbf85610f71565b9450610f86565b94509492505050565b5f82610fde5760019050611099565b81610feb575f9050611099565b8160018114611001576002811461100b5761103a565b6001915050611099565b60ff84111561101d5761101c610f44565b5b8360020a91508482111561103457611033610f44565b5b50611099565b5060208310610133831016604e8410600b841016171561106f5782820a90508381111561106a57611069610f44565b5b611099565b61107c8484846001610f7d565b9250905081840481111561109357611092610f44565b5b81810290505b9392505050565b5f6110aa82610c92565b91506110b583610c92565b92506110e27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610fcf565b905092915050565b5f6110f482610c92565b91506110ff83610c92565b925082820261110d81610c92565b9150828204841483151761112457611123610f44565b5b5092915050565b7f20617070726f76652066726f6d20746865207a65726f206164647265737300005f82015250565b5f61115f601e83610bae565b915061116a8261112b565b602082019050919050565b5f6020820190508181035f83015261118c81611153565b9050919050565b7f20617070726f766520746f20746865207a65726f2061646472657373000000005f82015250565b5f6111c7601c83610bae565b91506111d282611193565b602082019050919050565b5f6020820190508181035f8301526111f4816111bb565b9050919050565b61120481610c57565b82525050565b5f60408201905061121d5f8301856111fb565b61122a6020830184610d36565b9392505050565b7f20616c6c6f77616e6365206578636565646564000000000000000000000000005f82015250565b5f611265601383610bae565b915061127082611231565b602082019050919050565b5f6020820190508181035f83015261129281611259565b9050919050565b7f207472616e736665722066726f6d20746865207a65726f2061646472657373005f82015250565b5f6112cd601f83610bae565b91506112d882611299565b602082019050919050565b5f6020820190508181035f8301526112fa816112c1565b9050919050565b7f207472616e7366657220746f20746865207a65726f20616464726573730000005f82015250565b5f611335601d83610bae565b915061134082611301565b602082019050919050565b5f6020820190508181035f83015261136281611329565b9050919050565b7f20696e73756666696369656e742062616c616e636500000000000000000000005f82015250565b5f61139d601583610bae565b91506113a882611369565b602082019050919050565b5f6020820190508181035f8301526113ca81611391565b9050919050565b5f6113db82610c92565b91506113e683610c92565b92508282019050808211156113fe576113fd610f44565b5b9291505056fea26469706673582212204522aabf9e5bc04266dd273f81025fdcf4e782e19bfc64cd99bf1dd88cfdb55364736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F4 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x2FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xDAE JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x467 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD PUSH2 0x230 SWAP1 PUSH2 0xE44 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25C SWAP1 PUSH2 0xE44 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2A7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x27E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2A7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x28A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH0 CALLER SWAP1 POP PUSH2 0x2BF DUP2 DUP6 DUP6 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 CALLER SWAP1 POP PUSH2 0x2E0 DUP6 DUP3 DUP6 PUSH2 0x73F JUMP JUMPDEST PUSH2 0x2EB DUP6 DUP6 DUP6 PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x383 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F1 SWAP1 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41D DUP3 PUSH1 0x2 SLOAD PUSH1 0xA PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST DUP4 PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x10EA JUMP JUMPDEST PUSH2 0xA7F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0xE44 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A0 SWAP1 PUSH2 0xE44 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH0 CALLER SWAP1 POP PUSH2 0x503 DUP2 DUP6 DUP6 PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F5 SWAP1 PUSH2 0x1175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x663 SWAP1 PUSH2 0x11DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB3FD5071835887567A0671151121894DDCCC2842F1D10BEDAD13E0D17CACE9A7 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x732 SWAP3 SWAP2 SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x833 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x825 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81C SWAP1 PUSH2 0x127B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x832 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x590 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89E SWAP1 PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x915 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90C SWAP1 PUSH2 0x134B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98C SWAP1 PUSH2 0x13B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9ED053BB818FF08B8353CD46F78DB1F0799F31C9E4458FDB425C10ECCD2EFC44 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA72 SWAP3 SWAP2 SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE4 SWAP1 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9ED053BB818FF08B8353CD46F78DB1F0799F31C9E4458FDB425C10ECCD2EFC44 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB98 SWAP3 SWAP2 SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBE6 DUP3 PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0xBF0 DUP2 DUP6 PUSH2 0xBAE JUMP JUMPDEST SWAP4 POP PUSH2 0xC00 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBBE JUMP JUMPDEST PUSH2 0xC09 DUP2 PUSH2 0xBCC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC2C DUP2 DUP5 PUSH2 0xBDC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC61 DUP3 PUSH2 0xC38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC71 DUP2 PUSH2 0xC57 JUMP JUMPDEST DUP2 EQ PUSH2 0xC7B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC8C DUP2 PUSH2 0xC68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA4 DUP2 PUSH2 0xC92 JUMP JUMPDEST DUP2 EQ PUSH2 0xCAE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCBF DUP2 PUSH2 0xC9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCDB JUMPI PUSH2 0xCDA PUSH2 0xC34 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCE8 DUP6 DUP3 DUP7 ADD PUSH2 0xC7E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCF9 DUP6 DUP3 DUP7 ADD PUSH2 0xCB1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD17 DUP2 PUSH2 0xD03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD30 PUSH0 DUP4 ADD DUP5 PUSH2 0xD0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD3F DUP2 PUSH2 0xC92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD58 PUSH0 DUP4 ADD DUP5 PUSH2 0xD36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD75 JUMPI PUSH2 0xD74 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD82 DUP7 DUP3 DUP8 ADD PUSH2 0xC7E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD93 DUP7 DUP3 DUP8 ADD PUSH2 0xC7E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xDA4 DUP7 DUP3 DUP8 ADD PUSH2 0xCB1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDC3 JUMPI PUSH2 0xDC2 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDD0 DUP5 DUP3 DUP6 ADD PUSH2 0xC7E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDEF JUMPI PUSH2 0xDEE PUSH2 0xC34 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDFC DUP6 DUP3 DUP7 ADD PUSH2 0xC7E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE0D DUP6 DUP3 DUP7 ADD PUSH2 0xC7E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE5B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE6E JUMPI PUSH2 0xE6D PUSH2 0xE17 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2063616C6C6572206973206E6F7420746865206F776E65720000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEA8 PUSH1 0x18 DUP4 PUSH2 0xBAE JUMP JUMPDEST SWAP2 POP PUSH2 0xEB3 DUP3 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xED5 DUP2 PUSH2 0xE9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x206D696E7420746F20746865207A65726F206164647265737300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF10 PUSH1 0x19 DUP4 PUSH2 0xBAE JUMP JUMPDEST SWAP2 POP PUSH2 0xF1B DUP3 PUSH2 0xEDC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF3D DUP2 PUSH2 0xF04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xFC6 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xFA2 JUMPI PUSH2 0xFA1 PUSH2 0xF44 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xFB1 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xFBF DUP6 PUSH2 0xF71 JUMP JUMPDEST SWAP5 POP PUSH2 0xF86 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xFDE JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1099 JUMP JUMPDEST DUP2 PUSH2 0xFEB JUMPI PUSH0 SWAP1 POP PUSH2 0x1099 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1001 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x100B JUMPI PUSH2 0x103A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1099 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x101D JUMPI PUSH2 0x101C PUSH2 0xF44 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1034 JUMPI PUSH2 0x1033 PUSH2 0xF44 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1099 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x106F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x106A JUMPI PUSH2 0x1069 PUSH2 0xF44 JUMP JUMPDEST JUMPDEST PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x107C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xF7D JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1093 JUMPI PUSH2 0x1092 PUSH2 0xF44 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10AA DUP3 PUSH2 0xC92 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B5 DUP4 PUSH2 0xC92 JUMP JUMPDEST SWAP3 POP PUSH2 0x10E2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xFCF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10F4 DUP3 PUSH2 0xC92 JUMP JUMPDEST SWAP2 POP PUSH2 0x10FF DUP4 PUSH2 0xC92 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x110D DUP2 PUSH2 0xC92 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1124 JUMPI PUSH2 0x1123 PUSH2 0xF44 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x20617070726F76652066726F6D20746865207A65726F20616464726573730000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x115F PUSH1 0x1E DUP4 PUSH2 0xBAE JUMP JUMPDEST SWAP2 POP PUSH2 0x116A DUP3 PUSH2 0x112B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x118C DUP2 PUSH2 0x1153 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x20617070726F766520746F20746865207A65726F206164647265737300000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11C7 PUSH1 0x1C DUP4 PUSH2 0xBAE JUMP JUMPDEST SWAP2 POP PUSH2 0x11D2 DUP3 PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11F4 DUP2 PUSH2 0x11BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1204 DUP2 PUSH2 0xC57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x121D PUSH0 DUP4 ADD DUP6 PUSH2 0x11FB JUMP JUMPDEST PUSH2 0x122A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD36 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x20616C6C6F77616E636520657863656564656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1265 PUSH1 0x13 DUP4 PUSH2 0xBAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1270 DUP3 PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1292 DUP2 PUSH2 0x1259 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x207472616E736665722066726F6D20746865207A65726F206164647265737300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12CD PUSH1 0x1F DUP4 PUSH2 0xBAE JUMP JUMPDEST SWAP2 POP PUSH2 0x12D8 DUP3 PUSH2 0x1299 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12FA DUP2 PUSH2 0x12C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x207472616E7366657220746F20746865207A65726F2061646472657373000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1335 PUSH1 0x1D DUP4 PUSH2 0xBAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1340 DUP3 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1362 DUP2 PUSH2 0x1329 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x20696E73756666696369656E742062616C616E63650000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x139D PUSH1 0x15 DUP4 PUSH2 0xBAE JUMP JUMPDEST SWAP2 POP PUSH2 0x13A8 DUP3 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13CA DUP2 PUSH2 0x1391 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13DB DUP3 PUSH2 0xC92 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E6 DUP4 PUSH2 0xC92 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x13FE JUMPI PUSH2 0x13FD PUSH2 0xF44 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0x22 0xAA 0xBF SWAP15 JUMPDEST 0xC0 TIMESTAMP PUSH7 0xDD273F81025FDC DELEGATECALL SWAPN 0x82 RJUMPI 0x9BFC PUSH5 0xCD99BF1DD8 DUP13 REVERT 0xB5 MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "832:4814:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;887:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2932:196;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1057:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:285;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1001:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5088:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2403:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;946:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2635:187;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1969:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;887:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2932:196::-;3007:4;3026:12;3041:10;3026:25;;3064:31;3073:4;3079:7;3088:6;3064:8;:31::i;:::-;3115:4;3108:11;;;2932:196;;;;:::o;1057:26::-;;;;:::o;3242:285::-;3365:4;3382:15;3400:10;3382:28;;3421:38;3437:4;3443:7;3452:6;3421:15;:38::i;:::-;3470:27;3480:4;3486:2;3490:6;3470:9;:27::i;:::-;3515:4;3508:11;;;3242:285;;;;;:::o;1001:28::-;;;;:::o;5088:185::-;2230:10;2220:20;;:6;;;;;;;;;;;:20;;;2212:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;5180:1:::1;5166:16;;:2;:16;;::::0;5158:54:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;5223:42;5229:2;5255:8;;5242:2;:22;;;;:::i;:::-;5233:6;:31;;;;:::i;:::-;5223:5;:42::i;:::-;5088:185:::0;;:::o;2403:121::-;2469:7;2498:9;:18;2508:7;2498:18;;;;;;;;;;;;;;;;2491:25;;2403:121;;;:::o;946:27::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2635:187::-;2706:4;2724:12;2739:10;2724:25;;2762:27;2772:4;2778:2;2782:6;2762:9;:27::i;:::-;2809:4;2802:11;;;2635:187;;;;:::o;1969:138::-;2043:7;2072:11;:18;2084:5;2072:18;;;;;;;;;;;;;;;:27;2091:7;2072:27;;;;;;;;;;;;;;;;2065:34;;1969:138;;;;:::o;4140:377::-;4285:1;4268:19;;:5;:19;;;4260:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4360:1;4341:21;;:7;:21;;;4333:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4438:6;4408:11;:18;4420:5;4408:18;;;;;;;;;;;;;;;:27;4427:7;4408:27;;;;;;;;;;;;;;;:36;;;;4493:15;4469:5;4460:49;;;4476:7;4485:6;4460:49;;;;;;;:::i;:::-;;;;;;;;4140:377;;;:::o;4575:437::-;4702:24;4729:11;:18;4741:5;4729:18;;;;;;;;;;;;;;;:27;4748:7;4729:27;;;;;;;;;;;;;;;;4702:54;;4791:17;4771:16;:37;4767:238;;4853:6;4833:16;:26;;4825:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;4927:51;4936:5;4943:7;4971:6;4952:16;:25;4927:8;:51::i;:::-;4767:238;4691:321;4575:437;;;:::o;3585:497::-;3724:1;3708:18;;:4;:18;;;3700:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3795:1;3781:16;;:2;:16;;;3773:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;3869:6;3850:9;:15;3860:4;3850:15;;;;;;;;;;;;;;;;:25;;3842:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;3958:6;3939:9;:15;3949:4;3939:15;;;;;;;;;;;;;;;;:25;;;;;;;;;;;3996:6;3979:9;:13;3989:2;3979:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;4058:15;4040:4;4031:43;;;4046:2;4050:6;4031:43;;;;;;;:::i;:::-;;;;;;;;3585:497;;;:::o;5331:312::-;5426:1;5407:21;;:7;:21;;;5399:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;5486:6;5471:11;;:21;;;;;;;:::i;:::-;;;;;;;;5548:6;5526:9;:18;5536:7;5526:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;5619:15;5598:1;5581:54;;;5602:7;5611:6;5581:54;;;;;;;:::i;:::-;;;;;;;;5331:312;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:329::-;4375:6;4424:2;4412:9;4403:7;4399:23;4395:32;4392:119;;;4430:79;;:::i;:::-;4392:119;4550:1;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4521:117;4316:329;;;;:::o;4651:474::-;4719:6;4727;4776:2;4764:9;4755:7;4751:23;4747:32;4744:119;;;4782:79;;:::i;:::-;4744:119;4902:1;4927:53;4972:7;4963:6;4952:9;4948:22;4927:53;:::i;:::-;4917:63;;4873:117;5029:2;5055:53;5100:7;5091:6;5080:9;5076:22;5055:53;:::i;:::-;5045:63;;5000:118;4651:474;;;;;:::o;5131:180::-;5179:77;5176:1;5169:88;5276:4;5273:1;5266:15;5300:4;5297:1;5290:15;5317:320;5361:6;5398:1;5392:4;5388:12;5378:22;;5445:1;5439:4;5435:12;5466:18;5456:81;;5522:4;5514:6;5510:17;5500:27;;5456:81;5584:2;5576:6;5573:14;5553:18;5550:38;5547:84;;5603:18;;:::i;:::-;5547:84;5368:269;5317:320;;;:::o;5643:174::-;5783:26;5779:1;5771:6;5767:14;5760:50;5643:174;:::o;5823:366::-;5965:3;5986:67;6050:2;6045:3;5986:67;:::i;:::-;5979:74;;6062:93;6151:3;6062:93;:::i;:::-;6180:2;6175:3;6171:12;6164:19;;5823:366;;;:::o;6195:419::-;6361:4;6399:2;6388:9;6384:18;6376:26;;6448:9;6442:4;6438:20;6434:1;6423:9;6419:17;6412:47;6476:131;6602:4;6476:131;:::i;:::-;6468:139;;6195:419;;;:::o;6620:175::-;6760:27;6756:1;6748:6;6744:14;6737:51;6620:175;:::o;6801:366::-;6943:3;6964:67;7028:2;7023:3;6964:67;:::i;:::-;6957:74;;7040:93;7129:3;7040:93;:::i;:::-;7158:2;7153:3;7149:12;7142:19;;6801:366;;;:::o;7173:419::-;7339:4;7377:2;7366:9;7362:18;7354:26;;7426:9;7420:4;7416:20;7412:1;7401:9;7397:17;7390:47;7454:131;7580:4;7454:131;:::i;:::-;7446:139;;7173:419;;;:::o;7598:180::-;7646:77;7643:1;7636:88;7743:4;7740:1;7733:15;7767:4;7764:1;7757:15;7784:102;7826:8;7873:5;7870:1;7866:13;7845:34;;7784:102;;;:::o;7892:848::-;7953:5;7960:4;7984:6;7975:15;;8008:5;7999:14;;8022:712;8043:1;8033:8;8030:15;8022:712;;;8138:4;8133:3;8129:14;8123:4;8120:24;8117:50;;;8147:18;;:::i;:::-;8117:50;8197:1;8187:8;8183:16;8180:451;;;8612:4;8605:5;8601:16;8592:25;;8180:451;8662:4;8656;8652:15;8644:23;;8692:32;8715:8;8692:32;:::i;:::-;8680:44;;8022:712;;;7892:848;;;;;;;:::o;8746:1073::-;8800:5;8991:8;8981:40;;9012:1;9003:10;;9014:5;;8981:40;9040:4;9030:36;;9057:1;9048:10;;9059:5;;9030:36;9126:4;9174:1;9169:27;;;;9210:1;9205:191;;;;9119:277;;9169:27;9187:1;9178:10;;9189:5;;;9205:191;9250:3;9240:8;9237:17;9234:43;;;9257:18;;:::i;:::-;9234:43;9306:8;9303:1;9299:16;9290:25;;9341:3;9334:5;9331:14;9328:40;;;9348:18;;:::i;:::-;9328:40;9381:5;;;9119:277;;9505:2;9495:8;9492:16;9486:3;9480:4;9477:13;9473:36;9455:2;9445:8;9442:16;9437:2;9431:4;9428:12;9424:35;9408:111;9405:246;;;9561:8;9555:4;9551:19;9542:28;;9596:3;9589:5;9586:14;9583:40;;;9603:18;;:::i;:::-;9583:40;9636:5;;9405:246;9676:42;9714:3;9704:8;9698:4;9695:1;9676:42;:::i;:::-;9661:57;;;;9750:4;9745:3;9741:14;9734:5;9731:25;9728:51;;;9759:18;;:::i;:::-;9728:51;9808:4;9801:5;9797:16;9788:25;;8746:1073;;;;;;:::o;9825:285::-;9885:5;9909:23;9927:4;9909:23;:::i;:::-;9901:31;;9953:27;9971:8;9953:27;:::i;:::-;9941:39;;9999:104;10036:66;10026:8;10020:4;9999:104;:::i;:::-;9990:113;;9825:285;;;;:::o;10116:410::-;10156:7;10179:20;10197:1;10179:20;:::i;:::-;10174:25;;10213:20;10231:1;10213:20;:::i;:::-;10208:25;;10268:1;10265;10261:9;10290:30;10308:11;10290:30;:::i;:::-;10279:41;;10469:1;10460:7;10456:15;10453:1;10450:22;10430:1;10423:9;10403:83;10380:139;;10499:18;;:::i;:::-;10380:139;10164:362;10116:410;;;;:::o;10532:180::-;10672:32;10668:1;10660:6;10656:14;10649:56;10532:180;:::o;10718:366::-;10860:3;10881:67;10945:2;10940:3;10881:67;:::i;:::-;10874:74;;10957:93;11046:3;10957:93;:::i;:::-;11075:2;11070:3;11066:12;11059:19;;10718:366;;;:::o;11090:419::-;11256:4;11294:2;11283:9;11279:18;11271:26;;11343:9;11337:4;11333:20;11329:1;11318:9;11314:17;11307:47;11371:131;11497:4;11371:131;:::i;:::-;11363:139;;11090:419;;;:::o;11515:178::-;11655:30;11651:1;11643:6;11639:14;11632:54;11515:178;:::o;11699:366::-;11841:3;11862:67;11926:2;11921:3;11862:67;:::i;:::-;11855:74;;11938:93;12027:3;11938:93;:::i;:::-;12056:2;12051:3;12047:12;12040:19;;11699:366;;;:::o;12071:419::-;12237:4;12275:2;12264:9;12260:18;12252:26;;12324:9;12318:4;12314:20;12310:1;12299:9;12295:17;12288:47;12352:131;12478:4;12352:131;:::i;:::-;12344:139;;12071:419;;;:::o;12496:118::-;12583:24;12601:5;12583:24;:::i;:::-;12578:3;12571:37;12496:118;;:::o;12620:332::-;12741:4;12779:2;12768:9;12764:18;12756:26;;12792:71;12860:1;12849:9;12845:17;12836:6;12792:71;:::i;:::-;12873:72;12941:2;12930:9;12926:18;12917:6;12873:72;:::i;:::-;12620:332;;;;;:::o;12958:169::-;13098:21;13094:1;13086:6;13082:14;13075:45;12958:169;:::o;13133:366::-;13275:3;13296:67;13360:2;13355:3;13296:67;:::i;:::-;13289:74;;13372:93;13461:3;13372:93;:::i;:::-;13490:2;13485:3;13481:12;13474:19;;13133:366;;;:::o;13505:419::-;13671:4;13709:2;13698:9;13694:18;13686:26;;13758:9;13752:4;13748:20;13744:1;13733:9;13729:17;13722:47;13786:131;13912:4;13786:131;:::i;:::-;13778:139;;13505:419;;;:::o;13930:181::-;14070:33;14066:1;14058:6;14054:14;14047:57;13930:181;:::o;14117:366::-;14259:3;14280:67;14344:2;14339:3;14280:67;:::i;:::-;14273:74;;14356:93;14445:3;14356:93;:::i;:::-;14474:2;14469:3;14465:12;14458:19;;14117:366;;;:::o;14489:419::-;14655:4;14693:2;14682:9;14678:18;14670:26;;14742:9;14736:4;14732:20;14728:1;14717:9;14713:17;14706:47;14770:131;14896:4;14770:131;:::i;:::-;14762:139;;14489:419;;;:::o;14914:179::-;15054:31;15050:1;15042:6;15038:14;15031:55;14914:179;:::o;15099:366::-;15241:3;15262:67;15326:2;15321:3;15262:67;:::i;:::-;15255:74;;15338:93;15427:3;15338:93;:::i;:::-;15456:2;15451:3;15447:12;15440:19;;15099:366;;;:::o;15471:419::-;15637:4;15675:2;15664:9;15660:18;15652:26;;15724:9;15718:4;15714:20;15710:1;15699:9;15695:17;15688:47;15752:131;15878:4;15752:131;:::i;:::-;15744:139;;15471:419;;;:::o;15896:171::-;16036:23;16032:1;16024:6;16020:14;16013:47;15896:171;:::o;16073:366::-;16215:3;16236:67;16300:2;16295:3;16236:67;:::i;:::-;16229:74;;16312:93;16401:3;16312:93;:::i;:::-;16430:2;16425:3;16421:12;16414:19;;16073:366;;;:::o;16445:419::-;16611:4;16649:2;16638:9;16634:18;16626:26;;16698:9;16692:4;16688:20;16684:1;16673:9;16669:17;16662:47;16726:131;16852:4;16726:131;:::i;:::-;16718:139;;16445:419;;;:::o;16870:191::-;16910:3;16929:20;16947:1;16929:20;:::i;:::-;16924:25;;16963:20;16981:1;16963:20;:::i;:::-;16958:25;;17006:1;17003;16999:9;16992:16;;17027:3;17024:1;17021:10;17018:36;;;17034:18;;:::i;:::-;17018:36;16870:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1035600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"decimals()": "2514",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2470",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 832,
									"end": 5646,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 832,
									"end": 5646,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 832,
									"end": 5646,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 887,
									"end": 918,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 887,
									"end": 918,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 887,
									"end": 918,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 887,
									"end": 918,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 887,
									"end": 918,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 887,
									"end": 918,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 887,
									"end": 918,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 887,
									"end": 918,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 887,
									"end": 918,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 887,
									"end": 918,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 887,
									"end": 918,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 887,
									"end": 918,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 887,
									"end": 918,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 887,
									"end": 918,
									"name": "PUSH",
									"source": 6,
									"value": "4D494D494C756B65000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 887,
									"end": 918,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 887,
									"end": 918,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 887,
									"end": 918,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 887,
									"end": 918,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 887,
									"end": 918,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 887,
									"end": 918,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 887,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 887,
									"end": 918,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 887,
									"end": 918,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 887,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 887,
									"end": 918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 887,
									"end": 918,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 887,
									"end": 918,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 887,
									"end": 918,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 946,
									"end": 973,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 946,
									"end": 973,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 946,
									"end": 973,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 946,
									"end": 973,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 946,
									"end": 973,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 946,
									"end": 973,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 946,
									"end": 973,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 946,
									"end": 973,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 946,
									"end": 973,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 946,
									"end": 973,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 946,
									"end": 973,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 946,
									"end": 973,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 946,
									"end": 973,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 946,
									"end": 973,
									"name": "PUSH",
									"source": 6,
									"value": "4D4C000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 946,
									"end": 973,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 946,
									"end": 973,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 946,
									"end": 973,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 946,
									"end": 973,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 946,
									"end": 973,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 946,
									"end": 973,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 946,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 946,
									"end": 973,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 946,
									"end": 973,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 946,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 946,
									"end": 973,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 946,
									"end": 973,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 946,
									"end": 973,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 946,
									"end": 973,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1027,
									"end": 1029,
									"name": "PUSH",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1001,
									"end": 1029,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1001,
									"end": 1029,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "tag",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1689,
									"end": 1961,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "tag",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1786,
									"end": 1791,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1779,
									"end": 1783,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1779,
									"end": 1791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1779,
									"end": 1791,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1779,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1779,
									"end": 1791,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1779,
									"end": 1791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1779,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1779,
									"end": 1791,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1779,
									"end": 1791,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1779,
									"end": 1791,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1779,
									"end": 1791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1811,
									"end": 1818,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1802,
									"end": 1808,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1802,
									"end": 1818,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1802,
									"end": 1818,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1802,
									"end": 1818,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1802,
									"end": 1818,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1802,
									"end": 1818,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1802,
									"end": 1818,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1802,
									"end": 1818,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1802,
									"end": 1818,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1802,
									"end": 1818,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1802,
									"end": 1818,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1838,
									"end": 1848,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1829,
									"end": 1835,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1829,
									"end": 1835,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1829,
									"end": 1848,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1829,
									"end": 1848,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1829,
									"end": 1848,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1829,
									"end": 1848,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1829,
									"end": 1848,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1829,
									"end": 1848,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1829,
									"end": 1848,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1829,
									"end": 1848,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1829,
									"end": 1848,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1829,
									"end": 1848,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1829,
									"end": 1848,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1829,
									"end": 1848,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1829,
									"end": 1848,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1829,
									"end": 1848,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1829,
									"end": 1848,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1829,
									"end": 1848,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1829,
									"end": 1848,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1829,
									"end": 1848,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1905,
									"end": 1953,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1911,
									"end": 1921,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1952,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1944,
									"end": 1952,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1939,
									"end": 1941,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1939,
									"end": 1952,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1939,
									"end": 1952,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1939,
									"end": 1952,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1939,
									"end": 1952,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1939,
									"end": 1952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1939,
									"end": 1952,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1939,
									"end": 1952,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1923,
									"end": 1936,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1923,
									"end": 1952,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1923,
									"end": 1952,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1923,
									"end": 1952,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1923,
									"end": 1952,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1923,
									"end": 1952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1923,
									"end": 1952,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1923,
									"end": 1952,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1905,
									"end": 1910,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1905,
									"end": 1910,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1905,
									"end": 1910,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1905,
									"end": 1953,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1905,
									"end": 1953,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1905,
									"end": 1953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1905,
									"end": 1953,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1905,
									"end": 1953,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1961,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 832,
									"end": 5646,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 832,
									"end": 5646,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5331,
									"end": 5643,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 5331,
									"end": 5643,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5426,
									"end": 5427,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5407,
									"end": 5428,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5407,
									"end": 5428,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5407,
									"end": 5414,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5407,
									"end": 5428,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5407,
									"end": 5428,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5407,
									"end": 5428,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 5399,
									"end": 5458,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 5399,
									"end": 5458,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5486,
									"end": 5492,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5471,
									"end": 5482,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 5471,
									"end": 5482,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5471,
									"end": 5492,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5471,
									"end": 5492,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5471,
									"end": 5492,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5471,
									"end": 5492,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 5471,
									"end": 5492,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5471,
									"end": 5492,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5471,
									"end": 5492,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 5471,
									"end": 5492,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5471,
									"end": 5492,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 5471,
									"end": 5492,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5471,
									"end": 5492,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5471,
									"end": 5492,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5471,
									"end": 5492,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5471,
									"end": 5492,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5471,
									"end": 5492,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5471,
									"end": 5492,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5471,
									"end": 5492,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5548,
									"end": 5554,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5535,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 5526,
									"end": 5544,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5536,
									"end": 5543,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5544,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5526,
									"end": 5544,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5544,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5526,
									"end": 5544,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5544,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5544,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5544,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5526,
									"end": 5544,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5544,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5544,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5544,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5544,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5526,
									"end": 5544,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5544,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5526,
									"end": 5544,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5544,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5526,
									"end": 5554,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5554,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5554,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5554,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5554,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5554,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5554,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5554,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5554,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5554,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5526,
									"end": 5554,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5619,
									"end": 5634,
									"name": "TIMESTAMP",
									"source": 6
								},
								{
									"begin": 5598,
									"end": 5599,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5581,
									"end": 5635,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5581,
									"end": 5635,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5581,
									"end": 5635,
									"name": "PUSH",
									"source": 6,
									"value": "9ED053BB818FF08B8353CD46F78DB1F0799F31C9E4458FDB425C10ECCD2EFC44"
								},
								{
									"begin": 5602,
									"end": 5609,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5611,
									"end": 5617,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5581,
									"end": 5635,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5581,
									"end": 5635,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5581,
									"end": 5635,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 5581,
									"end": 5635,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5581,
									"end": 5635,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5581,
									"end": 5635,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5581,
									"end": 5635,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 5581,
									"end": 5635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5581,
									"end": 5635,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 5581,
									"end": 5635,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5581,
									"end": 5635,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5581,
									"end": 5635,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5581,
									"end": 5635,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5581,
									"end": 5635,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5581,
									"end": 5635,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 5581,
									"end": 5635,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5581,
									"end": 5635,
									"name": "LOG3",
									"source": 6
								},
								{
									"begin": 5331,
									"end": 5643,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5331,
									"end": 5643,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5331,
									"end": 5643,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5309,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 5234,
									"end": 5309,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5267,
									"end": 5273,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5300,
									"end": 5302,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5294,
									"end": 5303,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5284,
									"end": 5303,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5284,
									"end": 5303,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5309,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5309,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5315,
									"end": 5432,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 5315,
									"end": 5432,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5424,
									"end": 5425,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5421,
									"end": 5422,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5414,
									"end": 5426,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5438,
									"end": 5555,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 5438,
									"end": 5555,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5547,
									"end": 5548,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5544,
									"end": 5545,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5537,
									"end": 5549,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5561,
									"end": 5678,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 5561,
									"end": 5678,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5670,
									"end": 5671,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5667,
									"end": 5668,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5660,
									"end": 5672,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5684,
									"end": 5801,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 5684,
									"end": 5801,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5793,
									"end": 5794,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5790,
									"end": 5791,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5783,
									"end": 5795,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5848,
									"end": 5854,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5899,
									"end": 5901,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5895,
									"end": 5902,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5890,
									"end": 5892,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5883,
									"end": 5888,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5879,
									"end": 5893,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5875,
									"end": 5903,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5865,
									"end": 5903,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5865,
									"end": 5903,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5909,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 6020,
									"end": 6024,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 5998,
									"end": 6025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5990,
									"end": 5996,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5986,
									"end": 6026,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6128,
									"end": 6134,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6116,
									"end": 6126,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6113,
									"end": 6135,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6092,
									"end": 6110,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6080,
									"end": 6090,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6077,
									"end": 6111,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6074,
									"end": 6136,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 6139,
									"end": 6157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6179,
									"end": 6189,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6175,
									"end": 6177,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6168,
									"end": 6190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5958,
									"end": 6196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5915,
									"end": 6196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6236,
									"end": 6242,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 6263,
									"end": 6283,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6253,
									"end": 6283,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6253,
									"end": 6283,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 6320,
									"end": 6324,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6312,
									"end": 6318,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 6292,
									"end": 6325,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6202,
									"end": 6331,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6399,
									"end": 6403,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6489,
									"end": 6507,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6481,
									"end": 6487,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6478,
									"end": 6508,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 6511,
									"end": 6529,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 6571,
									"end": 6577,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 6549,
									"end": 6578,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6541,
									"end": 6578,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6541,
									"end": 6578,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6633,
									"end": 6637,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6627,
									"end": 6631,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6623,
									"end": 6638,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6615,
									"end": 6638,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6615,
									"end": 6638,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6337,
									"end": 6645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6790,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 6651,
									"end": 6790,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6740,
									"end": 6746,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6735,
									"end": 6738,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6730,
									"end": 6733,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6724,
									"end": 6747,
									"name": "MCOPY",
									"source": 7
								},
								{
									"begin": 6781,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6772,
									"end": 6778,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6767,
									"end": 6770,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6763,
									"end": 6779,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6756,
									"end": 6783,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6790,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6790,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6790,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6790,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6885,
									"end": 6890,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6976,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6926,
									"end": 6975,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6968,
									"end": 6974,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6926,
									"end": 6975,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 6926,
									"end": 6975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6926,
									"end": 6975,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6926,
									"end": 6975,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6910,
									"end": 6976,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 6910,
									"end": 6976,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6910,
									"end": 6976,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6910,
									"end": 6976,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6901,
									"end": 6976,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6901,
									"end": 6976,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6999,
									"end": 7005,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6992,
									"end": 6997,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6985,
									"end": 7006,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7037,
									"end": 7041,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7030,
									"end": 7035,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7026,
									"end": 7042,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7075,
									"end": 7078,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7066,
									"end": 7072,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7061,
									"end": 7064,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7057,
									"end": 7073,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7054,
									"end": 7079,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7051,
									"end": 7163,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7051,
									"end": 7163,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 7051,
									"end": 7163,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7082,
									"end": 7161,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 7082,
									"end": 7161,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 7082,
									"end": 7161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7082,
									"end": 7161,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 7082,
									"end": 7161,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7051,
									"end": 7163,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 7051,
									"end": 7163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7172,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 7217,
									"end": 7223,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7212,
									"end": 7215,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7207,
									"end": 7210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7172,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 7172,
									"end": 7224,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7172,
									"end": 7224,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 7172,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6891,
									"end": 7230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7605,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 7250,
									"end": 7605,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7317,
									"end": 7322,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7366,
									"end": 7369,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7359,
									"end": 7363,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 7351,
									"end": 7357,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7347,
									"end": 7364,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7343,
									"end": 7370,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 7333,
									"end": 7455,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 7333,
									"end": 7455,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7374,
									"end": 7453,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 7374,
									"end": 7453,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 7374,
									"end": 7453,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7374,
									"end": 7453,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 7374,
									"end": 7453,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7333,
									"end": 7455,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 7333,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7484,
									"end": 7490,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7478,
									"end": 7491,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7509,
									"end": 7599,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 7595,
									"end": 7598,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7587,
									"end": 7593,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7580,
									"end": 7584,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7572,
									"end": 7578,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7568,
									"end": 7585,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7509,
									"end": 7599,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 7509,
									"end": 7599,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7509,
									"end": 7599,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 7509,
									"end": 7599,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7500,
									"end": 7599,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7500,
									"end": 7599,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7323,
									"end": 7605,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7605,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7605,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7605,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7605,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7605,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7611,
									"end": 7733,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 7611,
									"end": 7733,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7684,
									"end": 7708,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 7702,
									"end": 7707,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7684,
									"end": 7708,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 7684,
									"end": 7708,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7684,
									"end": 7708,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 7684,
									"end": 7708,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7677,
									"end": 7682,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7674,
									"end": 7709,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 7664,
									"end": 7727,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7664,
									"end": 7727,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7723,
									"end": 7724,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7720,
									"end": 7721,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7713,
									"end": 7725,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 7664,
									"end": 7727,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7664,
									"end": 7727,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7611,
									"end": 7733,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7611,
									"end": 7733,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7739,
									"end": 7882,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 7739,
									"end": 7882,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7796,
									"end": 7801,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7827,
									"end": 7833,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7821,
									"end": 7834,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7812,
									"end": 7834,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7812,
									"end": 7834,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7843,
									"end": 7876,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7870,
									"end": 7875,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7843,
									"end": 7876,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 7843,
									"end": 7876,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7843,
									"end": 7876,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7843,
									"end": 7876,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7739,
									"end": 7882,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7739,
									"end": 7882,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7739,
									"end": 7882,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7739,
									"end": 7882,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7739,
									"end": 7882,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7888,
									"end": 8897,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 7888,
									"end": 8897,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7996,
									"end": 8002,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8004,
									"end": 8010,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8012,
									"end": 8018,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8061,
									"end": 8063,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 8049,
									"end": 8058,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8040,
									"end": 8047,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8036,
									"end": 8059,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 8032,
									"end": 8064,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 8029,
									"end": 8148,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8029,
									"end": 8148,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 8029,
									"end": 8148,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8067,
									"end": 8146,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 8067,
									"end": 8146,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 8067,
									"end": 8146,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8067,
									"end": 8146,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 8067,
									"end": 8146,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8029,
									"end": 8148,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 8029,
									"end": 8148,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8208,
									"end": 8209,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8197,
									"end": 8206,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8193,
									"end": 8210,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8187,
									"end": 8211,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8238,
									"end": 8256,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8230,
									"end": 8236,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8227,
									"end": 8257,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8224,
									"end": 8341,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8224,
									"end": 8341,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 8224,
									"end": 8341,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8260,
									"end": 8339,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 8260,
									"end": 8339,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 8260,
									"end": 8339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8260,
									"end": 8339,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 8260,
									"end": 8339,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8224,
									"end": 8341,
									"name": "tag",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 8224,
									"end": 8341,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8365,
									"end": 8439,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 8431,
									"end": 8438,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8422,
									"end": 8428,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8411,
									"end": 8420,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 8407,
									"end": 8429,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8365,
									"end": 8439,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 8365,
									"end": 8439,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8365,
									"end": 8439,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 8365,
									"end": 8439,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8355,
									"end": 8439,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 8355,
									"end": 8439,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8158,
									"end": 8449,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8509,
									"end": 8511,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8498,
									"end": 8507,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8494,
									"end": 8512,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8488,
									"end": 8513,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8540,
									"end": 8558,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8532,
									"end": 8538,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8529,
									"end": 8559,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8526,
									"end": 8643,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8526,
									"end": 8643,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 8526,
									"end": 8643,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8562,
									"end": 8641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 8562,
									"end": 8641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 8562,
									"end": 8641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8562,
									"end": 8641,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 8562,
									"end": 8641,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8526,
									"end": 8643,
									"name": "tag",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 8526,
									"end": 8643,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8667,
									"end": 8741,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 8733,
									"end": 8740,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8724,
									"end": 8730,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8713,
									"end": 8722,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 8709,
									"end": 8731,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8667,
									"end": 8741,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 8667,
									"end": 8741,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8667,
									"end": 8741,
									"name": "tag",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 8667,
									"end": 8741,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8657,
									"end": 8741,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8657,
									"end": 8741,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8459,
									"end": 8751,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8790,
									"end": 8792,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 8816,
									"end": 8880,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 8872,
									"end": 8879,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8863,
									"end": 8869,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8852,
									"end": 8861,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 8848,
									"end": 8870,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8816,
									"end": 8880,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 8816,
									"end": 8880,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8816,
									"end": 8880,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 8816,
									"end": 8880,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8806,
									"end": 8880,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8806,
									"end": 8880,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8761,
									"end": 8890,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7888,
									"end": 8897,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7888,
									"end": 8897,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7888,
									"end": 8897,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7888,
									"end": 8897,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7888,
									"end": 8897,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7888,
									"end": 8897,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8903,
									"end": 9083,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 8903,
									"end": 9083,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8951,
									"end": 9028,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8948,
									"end": 8949,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8941,
									"end": 9029,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9048,
									"end": 9052,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 9045,
									"end": 9046,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 9038,
									"end": 9053,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9072,
									"end": 9076,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 9069,
									"end": 9070,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9062,
									"end": 9077,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 9089,
									"end": 9191,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 9089,
									"end": 9191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9131,
									"end": 9139,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9178,
									"end": 9183,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9175,
									"end": 9176,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9171,
									"end": 9184,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 9150,
									"end": 9184,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9150,
									"end": 9184,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9089,
									"end": 9191,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9089,
									"end": 9191,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9089,
									"end": 9191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9089,
									"end": 9191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9197,
									"end": 10045,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 9197,
									"end": 10045,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9258,
									"end": 9263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9265,
									"end": 9269,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9289,
									"end": 9295,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9280,
									"end": 9295,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9280,
									"end": 9295,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9313,
									"end": 9318,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9304,
									"end": 9318,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9304,
									"end": 9318,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9327,
									"end": 10039,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 9327,
									"end": 10039,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9348,
									"end": 9349,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9338,
									"end": 9346,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9335,
									"end": 9350,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 9327,
									"end": 10039,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9327,
									"end": 10039,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 9327,
									"end": 10039,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9443,
									"end": 9447,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 9438,
									"end": 9441,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9434,
									"end": 9448,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 9428,
									"end": 9432,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9425,
									"end": 9449,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 9422,
									"end": 9472,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9422,
									"end": 9472,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 9422,
									"end": 9472,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9452,
									"end": 9470,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 9452,
									"end": 9470,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 9452,
									"end": 9470,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9452,
									"end": 9470,
									"name": "tag",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 9452,
									"end": 9470,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9422,
									"end": 9472,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 9422,
									"end": 9472,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9502,
									"end": 9503,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9492,
									"end": 9500,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9488,
									"end": 9504,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9485,
									"end": 9936,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9485,
									"end": 9936,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 9485,
									"end": 9936,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9917,
									"end": 9921,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 9910,
									"end": 9915,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9906,
									"end": 9922,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9897,
									"end": 9922,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9897,
									"end": 9922,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9485,
									"end": 9936,
									"name": "tag",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 9485,
									"end": 9936,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9967,
									"end": 9971,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 9961,
									"end": 9965,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9957,
									"end": 9972,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9949,
									"end": 9972,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9949,
									"end": 9972,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 10020,
									"end": 10028,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 9997,
									"end": 10029,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "tag",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 9997,
									"end": 10029,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9985,
									"end": 10029,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 9985,
									"end": 10029,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9327,
									"end": 10039,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 9327,
									"end": 10039,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9327,
									"end": 10039,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 9327,
									"end": 10039,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9197,
									"end": 10045,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 9197,
									"end": 10045,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9197,
									"end": 10045,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 9197,
									"end": 10045,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9197,
									"end": 10045,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9197,
									"end": 10045,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9197,
									"end": 10045,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9197,
									"end": 10045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10051,
									"end": 11124,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 10051,
									"end": 11124,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10105,
									"end": 10110,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10296,
									"end": 10304,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10286,
									"end": 10326,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 10286,
									"end": 10326,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10317,
									"end": 10318,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 10308,
									"end": 10318,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10308,
									"end": 10318,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10319,
									"end": 10324,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 10319,
									"end": 10324,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10286,
									"end": 10326,
									"name": "tag",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 10286,
									"end": 10326,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10345,
									"end": 10349,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10335,
									"end": 10371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 10335,
									"end": 10371,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10362,
									"end": 10363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10353,
									"end": 10363,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10353,
									"end": 10363,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10364,
									"end": 10369,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 10364,
									"end": 10369,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10335,
									"end": 10371,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 10335,
									"end": 10371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10431,
									"end": 10435,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10479,
									"end": 10480,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 10474,
									"end": 10501,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10474,
									"end": 10501,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 10474,
									"end": 10501,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 10474,
									"end": 10501,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10515,
									"end": 10516,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 10510,
									"end": 10701,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10510,
									"end": 10701,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 10510,
									"end": 10701,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 10510,
									"end": 10701,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10424,
									"end": 10701,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 10424,
									"end": 10701,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10474,
									"end": 10501,
									"name": "tag",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 10474,
									"end": 10501,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10492,
									"end": 10493,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 10483,
									"end": 10493,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10483,
									"end": 10493,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10494,
									"end": 10499,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10494,
									"end": 10499,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 10494,
									"end": 10499,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10510,
									"end": 10701,
									"name": "tag",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 10510,
									"end": 10701,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10555,
									"end": 10558,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 10545,
									"end": 10553,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10542,
									"end": 10559,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10582,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10582,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 10539,
									"end": 10582,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10562,
									"end": 10580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 10562,
									"end": 10580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 10562,
									"end": 10580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10562,
									"end": 10580,
									"name": "tag",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 10562,
									"end": 10580,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10582,
									"name": "tag",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 10539,
									"end": 10582,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10611,
									"end": 10619,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10608,
									"end": 10609,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 10604,
									"end": 10620,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 10595,
									"end": 10620,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10595,
									"end": 10620,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10646,
									"end": 10649,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10639,
									"end": 10644,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10636,
									"end": 10650,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 10633,
									"end": 10673,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10633,
									"end": 10673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 10633,
									"end": 10673,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10653,
									"end": 10671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 10653,
									"end": 10671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 10653,
									"end": 10671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10653,
									"end": 10671,
									"name": "tag",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 10653,
									"end": 10671,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10633,
									"end": 10673,
									"name": "tag",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 10633,
									"end": 10673,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10686,
									"end": 10691,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10686,
									"end": 10691,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 10686,
									"end": 10691,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10424,
									"end": 10701,
									"name": "tag",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 10424,
									"end": 10701,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10424,
									"end": 10701,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10810,
									"end": 10812,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10800,
									"end": 10808,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10797,
									"end": 10813,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 10791,
									"end": 10794,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 10785,
									"end": 10789,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10782,
									"end": 10795,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 10778,
									"end": 10814,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 10760,
									"end": 10762,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 10750,
									"end": 10758,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10747,
									"end": 10763,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 10742,
									"end": 10744,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 10736,
									"end": 10740,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10733,
									"end": 10745,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 10729,
									"end": 10764,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 10713,
									"end": 10824,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 10710,
									"end": 10956,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10710,
									"end": 10956,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 10710,
									"end": 10956,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10866,
									"end": 10874,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10860,
									"end": 10864,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10856,
									"end": 10875,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 10847,
									"end": 10875,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10847,
									"end": 10875,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10901,
									"end": 10904,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10894,
									"end": 10899,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10891,
									"end": 10905,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 10888,
									"end": 10928,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10888,
									"end": 10928,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 10888,
									"end": 10928,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10908,
									"end": 10926,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 10908,
									"end": 10926,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 10908,
									"end": 10926,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10908,
									"end": 10926,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 10908,
									"end": 10926,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10888,
									"end": 10928,
									"name": "tag",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 10888,
									"end": 10928,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10941,
									"end": 10946,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 10941,
									"end": 10946,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10710,
									"end": 10956,
									"name": "tag",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 10710,
									"end": 10956,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10981,
									"end": 11023,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 11019,
									"end": 11022,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11009,
									"end": 11017,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11003,
									"end": 11007,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11000,
									"end": 11001,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 10981,
									"end": 11023,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 10981,
									"end": 11023,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10981,
									"end": 11023,
									"name": "tag",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 10981,
									"end": 11023,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10966,
									"end": 11023,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10966,
									"end": 11023,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10966,
									"end": 11023,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10966,
									"end": 11023,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11055,
									"end": 11059,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11050,
									"end": 11053,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11046,
									"end": 11060,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 11039,
									"end": 11044,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11036,
									"end": 11061,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 11033,
									"end": 11084,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11033,
									"end": 11084,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 11033,
									"end": 11084,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11064,
									"end": 11082,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 11064,
									"end": 11082,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 11064,
									"end": 11082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11064,
									"end": 11082,
									"name": "tag",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 11064,
									"end": 11082,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11033,
									"end": 11084,
									"name": "tag",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 11033,
									"end": 11084,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11113,
									"end": 11117,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11106,
									"end": 11111,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11102,
									"end": 11118,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 11093,
									"end": 11118,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11093,
									"end": 11118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10051,
									"end": 11124,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 10051,
									"end": 11124,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10051,
									"end": 11124,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 10051,
									"end": 11124,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10051,
									"end": 11124,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10051,
									"end": 11124,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10051,
									"end": 11124,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10051,
									"end": 11124,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11130,
									"end": 11415,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 11130,
									"end": 11415,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11190,
									"end": 11195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11214,
									"end": 11237,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 11232,
									"end": 11236,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11214,
									"end": 11237,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 11214,
									"end": 11237,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11214,
									"end": 11237,
									"name": "tag",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 11214,
									"end": 11237,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11206,
									"end": 11237,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11206,
									"end": 11237,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11258,
									"end": 11285,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 11276,
									"end": 11284,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11258,
									"end": 11285,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 11258,
									"end": 11285,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11258,
									"end": 11285,
									"name": "tag",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 11258,
									"end": 11285,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11246,
									"end": 11285,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11246,
									"end": 11285,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11304,
									"end": 11408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 11341,
									"end": 11407,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11331,
									"end": 11339,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11325,
									"end": 11329,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11304,
									"end": 11408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 11304,
									"end": 11408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11304,
									"end": 11408,
									"name": "tag",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 11304,
									"end": 11408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11295,
									"end": 11408,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11295,
									"end": 11408,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11130,
									"end": 11415,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11130,
									"end": 11415,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11130,
									"end": 11415,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11130,
									"end": 11415,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11130,
									"end": 11415,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11421,
									"end": 11831,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 11421,
									"end": 11831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11461,
									"end": 11468,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11484,
									"end": 11504,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "207"
								},
								{
									"begin": 11502,
									"end": 11503,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11484,
									"end": 11504,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 11484,
									"end": 11504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11484,
									"end": 11504,
									"name": "tag",
									"source": 7,
									"value": "207"
								},
								{
									"begin": 11484,
									"end": 11504,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11479,
									"end": 11504,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11479,
									"end": 11504,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11518,
									"end": 11538,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 11536,
									"end": 11537,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11518,
									"end": 11538,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 11518,
									"end": 11538,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11518,
									"end": 11538,
									"name": "tag",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 11518,
									"end": 11538,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11513,
									"end": 11538,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11513,
									"end": 11538,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11573,
									"end": 11574,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11570,
									"end": 11571,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11566,
									"end": 11575,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 11595,
									"end": 11625,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 11613,
									"end": 11624,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11595,
									"end": 11625,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 11595,
									"end": 11625,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11595,
									"end": 11625,
									"name": "tag",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 11595,
									"end": 11625,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11584,
									"end": 11625,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11584,
									"end": 11625,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11774,
									"end": 11775,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11765,
									"end": 11772,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11761,
									"end": 11776,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 11758,
									"end": 11759,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11755,
									"end": 11777,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 11735,
									"end": 11736,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11728,
									"end": 11737,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11708,
									"end": 11791,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 11685,
									"end": 11824,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 11685,
									"end": 11824,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11804,
									"end": 11822,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 11804,
									"end": 11822,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 11804,
									"end": 11822,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11804,
									"end": 11822,
									"name": "tag",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 11804,
									"end": 11822,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11685,
									"end": 11824,
									"name": "tag",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 11685,
									"end": 11824,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11469,
									"end": 11831,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11421,
									"end": 11831,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11421,
									"end": 11831,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11421,
									"end": 11831,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11421,
									"end": 11831,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11421,
									"end": 11831,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11837,
									"end": 12006,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 11837,
									"end": 12006,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11921,
									"end": 11932,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11955,
									"end": 11961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11950,
									"end": 11953,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11943,
									"end": 11962,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 11995,
									"end": 11999,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 11990,
									"end": 11993,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11986,
									"end": 12000,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11971,
									"end": 12000,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11971,
									"end": 12000,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11837,
									"end": 12006,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11837,
									"end": 12006,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11837,
									"end": 12006,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11837,
									"end": 12006,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11837,
									"end": 12006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12012,
									"end": 12187,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 12012,
									"end": 12187,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12152,
									"end": 12179,
									"name": "PUSH",
									"source": 7,
									"value": "206D696E7420746F20746865207A65726F206164647265737300000000000000"
								},
								{
									"begin": 12148,
									"end": 12149,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12140,
									"end": 12146,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12136,
									"end": 12150,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12129,
									"end": 12180,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 12012,
									"end": 12187,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12012,
									"end": 12187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12193,
									"end": 12559,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 12193,
									"end": 12559,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12335,
									"end": 12338,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12356,
									"end": 12423,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "215"
								},
								{
									"begin": 12420,
									"end": 12422,
									"name": "PUSH",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 12415,
									"end": 12418,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12356,
									"end": 12423,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 12356,
									"end": 12423,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12356,
									"end": 12423,
									"name": "tag",
									"source": 7,
									"value": "215"
								},
								{
									"begin": 12356,
									"end": 12423,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12349,
									"end": 12423,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12349,
									"end": 12423,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12432,
									"end": 12525,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "216"
								},
								{
									"begin": 12521,
									"end": 12524,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12432,
									"end": 12525,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 12432,
									"end": 12525,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12432,
									"end": 12525,
									"name": "tag",
									"source": 7,
									"value": "216"
								},
								{
									"begin": 12432,
									"end": 12525,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12550,
									"end": 12552,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 12545,
									"end": 12548,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12541,
									"end": 12553,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12534,
									"end": 12553,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12534,
									"end": 12553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12193,
									"end": 12559,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12193,
									"end": 12559,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12193,
									"end": 12559,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12193,
									"end": 12559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12565,
									"end": 12984,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 12565,
									"end": 12984,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12731,
									"end": 12735,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12769,
									"end": 12771,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 12758,
									"end": 12767,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12754,
									"end": 12772,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12746,
									"end": 12772,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12746,
									"end": 12772,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12818,
									"end": 12827,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12812,
									"end": 12816,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12808,
									"end": 12828,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 12804,
									"end": 12805,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12793,
									"end": 12802,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12789,
									"end": 12806,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12782,
									"end": 12829,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 12846,
									"end": 12977,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 12972,
									"end": 12976,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12846,
									"end": 12977,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 12846,
									"end": 12977,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12846,
									"end": 12977,
									"name": "tag",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 12846,
									"end": 12977,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12838,
									"end": 12977,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12838,
									"end": 12977,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12565,
									"end": 12984,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12565,
									"end": 12984,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12565,
									"end": 12984,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12565,
									"end": 12984,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12990,
									"end": 13181,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 12990,
									"end": 13181,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13030,
									"end": 13033,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13049,
									"end": 13069,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "220"
								},
								{
									"begin": 13067,
									"end": 13068,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13049,
									"end": 13069,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 13049,
									"end": 13069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13049,
									"end": 13069,
									"name": "tag",
									"source": 7,
									"value": "220"
								},
								{
									"begin": 13049,
									"end": 13069,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13044,
									"end": 13069,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13044,
									"end": 13069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13083,
									"end": 13103,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "221"
								},
								{
									"begin": 13101,
									"end": 13102,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13083,
									"end": 13103,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 13083,
									"end": 13103,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13083,
									"end": 13103,
									"name": "tag",
									"source": 7,
									"value": "221"
								},
								{
									"begin": 13083,
									"end": 13103,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13078,
									"end": 13103,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 13078,
									"end": 13103,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13126,
									"end": 13127,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13123,
									"end": 13124,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13119,
									"end": 13128,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13112,
									"end": 13128,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13112,
									"end": 13128,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13147,
									"end": 13150,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 13144,
									"end": 13145,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13141,
									"end": 13151,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 13138,
									"end": 13174,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 13138,
									"end": 13174,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "222"
								},
								{
									"begin": 13138,
									"end": 13174,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 13154,
									"end": 13172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "223"
								},
								{
									"begin": 13154,
									"end": 13172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 13154,
									"end": 13172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13154,
									"end": 13172,
									"name": "tag",
									"source": 7,
									"value": "223"
								},
								{
									"begin": 13154,
									"end": 13172,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13138,
									"end": 13174,
									"name": "tag",
									"source": 7,
									"value": "222"
								},
								{
									"begin": 13138,
									"end": 13174,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12990,
									"end": 13181,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 12990,
									"end": 13181,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12990,
									"end": 13181,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12990,
									"end": 13181,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12990,
									"end": 13181,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13187,
									"end": 13313,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 13187,
									"end": 13313,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13224,
									"end": 13231,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13264,
									"end": 13306,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13257,
									"end": 13262,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13253,
									"end": 13307,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 13242,
									"end": 13307,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13242,
									"end": 13307,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13187,
									"end": 13313,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13187,
									"end": 13313,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13187,
									"end": 13313,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13187,
									"end": 13313,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13319,
									"end": 13415,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 13319,
									"end": 13415,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13356,
									"end": 13363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13385,
									"end": 13409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "226"
								},
								{
									"begin": 13403,
									"end": 13408,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13385,
									"end": 13409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 13385,
									"end": 13409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13385,
									"end": 13409,
									"name": "tag",
									"source": 7,
									"value": "226"
								},
								{
									"begin": 13385,
									"end": 13409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13374,
									"end": 13409,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13374,
									"end": 13409,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13319,
									"end": 13415,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13319,
									"end": 13415,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13319,
									"end": 13415,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13319,
									"end": 13415,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13421,
									"end": 13539,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 13421,
									"end": 13539,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13508,
									"end": 13532,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "228"
								},
								{
									"begin": 13526,
									"end": 13531,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 13508,
									"end": 13532,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 13508,
									"end": 13532,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13508,
									"end": 13532,
									"name": "tag",
									"source": 7,
									"value": "228"
								},
								{
									"begin": 13508,
									"end": 13532,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13503,
									"end": 13506,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13496,
									"end": 13533,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 13421,
									"end": 13539,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13421,
									"end": 13539,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13421,
									"end": 13539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13545,
									"end": 13663,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 13545,
									"end": 13663,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13632,
									"end": 13656,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "230"
								},
								{
									"begin": 13650,
									"end": 13655,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 13632,
									"end": 13656,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 13632,
									"end": 13656,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13632,
									"end": 13656,
									"name": "tag",
									"source": 7,
									"value": "230"
								},
								{
									"begin": 13632,
									"end": 13656,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13627,
									"end": 13630,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13620,
									"end": 13657,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 13545,
									"end": 13663,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13545,
									"end": 13663,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13545,
									"end": 13663,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13669,
									"end": 14001,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 13669,
									"end": 14001,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13790,
									"end": 13794,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13828,
									"end": 13830,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 13817,
									"end": 13826,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13813,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13805,
									"end": 13831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13805,
									"end": 13831,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13841,
									"end": 13912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "232"
								},
								{
									"begin": 13909,
									"end": 13910,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13898,
									"end": 13907,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13894,
									"end": 13911,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13885,
									"end": 13891,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 13841,
									"end": 13912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 13841,
									"end": 13912,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13841,
									"end": 13912,
									"name": "tag",
									"source": 7,
									"value": "232"
								},
								{
									"begin": 13841,
									"end": 13912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13922,
									"end": 13994,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "233"
								},
								{
									"begin": 13990,
									"end": 13992,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 13979,
									"end": 13988,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13975,
									"end": 13993,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13966,
									"end": 13972,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 13922,
									"end": 13994,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 13922,
									"end": 13994,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13922,
									"end": 13994,
									"name": "tag",
									"source": 7,
									"value": "233"
								},
								{
									"begin": 13922,
									"end": 13994,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13669,
									"end": 14001,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 13669,
									"end": 14001,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 13669,
									"end": 14001,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13669,
									"end": 14001,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13669,
									"end": 14001,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13669,
									"end": 14001,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 832,
									"end": 5646,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 832,
									"end": 5646,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 832,
									"end": 5646,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 832,
									"end": 5646,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 5646,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 832,
									"end": 5646,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 832,
									"end": 5646,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 832,
									"end": 5646,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 832,
									"end": 5646,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204522aabf9e5bc04266dd273f81025fdcf4e782e19bfc64cd99bf1dd88cfdb55364736f6c634300081e0033",
									".code": [
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 5646,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 887,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 887,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2932,
											"end": 3128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2932,
											"end": 3128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2932,
											"end": 3128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1057,
											"end": 1083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1057,
											"end": 1083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3242,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3242,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3242,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1001,
											"end": 1029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1001,
											"end": 1029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5088,
											"end": 5273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 5088,
											"end": 5273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2403,
											"end": 2524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2403,
											"end": 2524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2403,
											"end": 2524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 946,
											"end": 973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 946,
											"end": 973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2635,
											"end": 2822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2635,
											"end": 2822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2635,
											"end": 2822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1969,
											"end": 2107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1969,
											"end": 2107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1969,
											"end": 2107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 887,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 887,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 887,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 887,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3007,
											"end": 3011,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3038,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3051,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3073,
											"end": 3077,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3086,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3094,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3064,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3095,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3064,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3119,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3108,
											"end": 3119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3397,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3410,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3437,
											"end": 3441,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3450,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3458,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3421,
											"end": 3459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3459,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3421,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3480,
											"end": 3484,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3488,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3496,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3470,
											"end": 3497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3497,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3470,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3519,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3508,
											"end": 3519,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3508,
											"end": 3519,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3508,
											"end": 3519,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1029,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1001,
											"end": 1029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2230,
											"end": 2240,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2240,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2240,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2240,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2240,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2240,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2212,
											"end": 2269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2212,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5166,
											"end": 5182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5166,
											"end": 5182,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5166,
											"end": 5168,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5166,
											"end": 5182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5166,
											"end": 5182,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5166,
											"end": 5182,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 5158,
											"end": 5212,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 5158,
											"end": 5212,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5223,
											"end": 5265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 5229,
											"end": 5231,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5255,
											"end": 5263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5255,
											"end": 5263,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5242,
											"end": 5244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 5242,
											"end": 5264,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 5242,
											"end": 5264,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5242,
											"end": 5264,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5242,
											"end": 5264,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5242,
											"end": 5264,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5242,
											"end": 5264,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 5242,
											"end": 5264,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5233,
											"end": 5239,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5233,
											"end": 5264,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 5233,
											"end": 5264,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5233,
											"end": 5264,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5233,
											"end": 5264,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 5233,
											"end": 5264,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5233,
											"end": 5264,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 5233,
											"end": 5264,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5223,
											"end": 5228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5223,
											"end": 5265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5223,
											"end": 5265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 5223,
											"end": 5265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2476,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2498,
											"end": 2507,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2515,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2491,
											"end": 2516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2491,
											"end": 2516,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 946,
											"end": 973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 946,
											"end": 973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 946,
											"end": 973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 946,
											"end": 973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2710,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2736,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2739,
											"end": 2749,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2724,
											"end": 2749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2724,
											"end": 2749,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2762,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2772,
											"end": 2776,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 2780,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2782,
											"end": 2788,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2762,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2762,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2762,
											"end": 2789,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2762,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2802,
											"end": 2813,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2043,
											"end": 2050,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2072,
											"end": 2090,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2090,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2072,
											"end": 2090,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2090,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2072,
											"end": 2090,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2090,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2090,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2090,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2090,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2090,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2090,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2090,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2090,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2090,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2090,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2090,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2098,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4517,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4140,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4285,
											"end": 4286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4268,
											"end": 4287,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4268,
											"end": 4287,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4273,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4287,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4268,
											"end": 4287,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4287,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 4260,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4260,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4341,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4341,
											"end": 4362,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4348,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4341,
											"end": 4362,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4362,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4333,
											"end": 4395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 4333,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4438,
											"end": 4444,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4419,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4425,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4435,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4434,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4435,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4408,
											"end": 4435,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4435,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4408,
											"end": 4435,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4435,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4408,
											"end": 4435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4435,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4408,
											"end": 4435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4435,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4408,
											"end": 4435,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4444,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4444,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4444,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4493,
											"end": 4508,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4469,
											"end": 4474,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4509,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4460,
											"end": 4509,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4509,
											"name": "PUSH",
											"source": 6,
											"value": "B3FD5071835887567A0671151121894DDCCC2842F1D10BEDAD13E0D17CACE9A7"
										},
										{
											"begin": 4476,
											"end": 4483,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4509,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4460,
											"end": 4509,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4460,
											"end": 4509,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4460,
											"end": 4509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4509,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4460,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4509,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4460,
											"end": 4509,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4509,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4509,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4509,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 5012,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 4575,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4702,
											"end": 4726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4729,
											"end": 4740,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4729,
											"end": 4747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4746,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4747,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4729,
											"end": 4747,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4747,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4729,
											"end": 4747,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4747,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4747,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4747,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4729,
											"end": 4747,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4747,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4747,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4747,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4729,
											"end": 4747,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4729,
											"end": 4747,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4748,
											"end": 4755,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4756,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4729,
											"end": 4756,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4756,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4729,
											"end": 4756,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4756,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4756,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4756,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4729,
											"end": 4756,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4756,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4756,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4756,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4756,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4729,
											"end": 4756,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4729,
											"end": 4756,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4756,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4702,
											"end": 4756,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4702,
											"end": 4756,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4771,
											"end": 4787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4808,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 5005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4767,
											"end": 5005,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 4859,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4849,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4859,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4859,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 4825,
											"end": 4883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4825,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 4936,
											"end": 4941,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 4950,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4971,
											"end": 4977,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4952,
											"end": 4968,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4952,
											"end": 4977,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4927,
											"end": 4978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4978,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 4927,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 5005,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4767,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4691,
											"end": 5012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 5012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 5012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 5012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 5012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 4082,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3585,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3724,
											"end": 3725,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3726,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3708,
											"end": 3726,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3712,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3726,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3708,
											"end": 3726,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3726,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3700,
											"end": 3762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3700,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3795,
											"end": 3796,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 3797,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3781,
											"end": 3797,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 3783,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 3797,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3781,
											"end": 3797,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 3797,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3773,
											"end": 3831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 3875,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3859,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3860,
											"end": 3864,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3875,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3875,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3842,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3842,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 3964,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3939,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3953,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3939,
											"end": 3954,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3939,
											"end": 3954,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3954,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3954,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3939,
											"end": 3954,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3954,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3954,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3939,
											"end": 3954,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3939,
											"end": 3954,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3939,
											"end": 3964,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3964,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3964,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3964,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3964,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3964,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3964,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4002,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 3988,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 3992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 3992,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3979,
											"end": 3992,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 3992,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3979,
											"end": 3992,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 3992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 3992,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 3992,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3979,
											"end": 3992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 3992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 3992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 3992,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 3992,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3979,
											"end": 3992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 3992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 3992,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 3992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4002,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4002,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4002,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4002,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4002,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4002,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4002,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4073,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4044,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "9ED053BB818FF08B8353CD46F78DB1F0799F31C9E4458FDB425C10ECCD2EFC44"
										},
										{
											"begin": 4046,
											"end": 4048,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4050,
											"end": 4056,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4031,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4074,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 4082,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 4082,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 4082,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 4082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5331,
											"end": 5643,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5331,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5426,
											"end": 5427,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5428,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5407,
											"end": 5428,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5414,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5428,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5407,
											"end": 5428,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5428,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 5399,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5399,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5486,
											"end": 5492,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5482,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5471,
											"end": 5482,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5471,
											"end": 5492,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5492,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5492,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5471,
											"end": 5492,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5471,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5492,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5471,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5492,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5492,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5492,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5492,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5492,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5492,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5548,
											"end": 5554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5535,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5543,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5526,
											"end": 5554,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5554,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5554,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5554,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5554,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5554,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5554,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5554,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5554,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5554,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5554,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5619,
											"end": 5634,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5599,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5581,
											"end": 5635,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5581,
											"end": 5635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5635,
											"name": "PUSH",
											"source": 6,
											"value": "9ED053BB818FF08B8353CD46F78DB1F0799F31C9E4458FDB425C10ECCD2EFC44"
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5611,
											"end": 5617,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5635,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5581,
											"end": 5635,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5581,
											"end": 5635,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 5581,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5635,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5581,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5635,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5581,
											"end": 5635,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5635,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5635,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5635,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 5331,
											"end": 5643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5331,
											"end": 5643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5331,
											"end": 5643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4424,
											"end": 4426,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4412,
											"end": 4421,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4403,
											"end": 4410,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4399,
											"end": 4422,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4395,
											"end": 4427,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 4430,
											"end": 4509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4550,
											"end": 4551,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 5125,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 4651,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4725,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4727,
											"end": 4733,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 4778,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4764,
											"end": 4773,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4755,
											"end": 4762,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4751,
											"end": 4774,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4747,
											"end": 4779,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4863,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4744,
											"end": 4863,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4782,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 4782,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 4782,
											"end": 4861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4782,
											"end": 4861,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 4782,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4863,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4744,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4902,
											"end": 4903,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4972,
											"end": 4979,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4963,
											"end": 4969,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4952,
											"end": 4961,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4948,
											"end": 4970,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 4927,
											"end": 4980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4980,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5029,
											"end": 5031,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5055,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 5100,
											"end": 5107,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5097,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5080,
											"end": 5089,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5076,
											"end": 5098,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5055,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 5055,
											"end": 5108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5055,
											"end": 5108,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 5055,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5108,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5000,
											"end": 5118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 5125,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 5125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 5125,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 5125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 5125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 5125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5311,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5131,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5256,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5176,
											"end": 5177,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5169,
											"end": 5257,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5276,
											"end": 5280,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 5273,
											"end": 5274,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5266,
											"end": 5281,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5297,
											"end": 5298,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5290,
											"end": 5305,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5637,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 5317,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5361,
											"end": 5367,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5398,
											"end": 5399,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5392,
											"end": 5396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5388,
											"end": 5400,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5378,
											"end": 5400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5378,
											"end": 5400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5446,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5439,
											"end": 5443,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5435,
											"end": 5447,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5484,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5456,
											"end": 5537,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5522,
											"end": 5526,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 5514,
											"end": 5520,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5510,
											"end": 5527,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5527,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5527,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5537,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5456,
											"end": 5537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5584,
											"end": 5586,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5576,
											"end": 5582,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5587,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5553,
											"end": 5571,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5550,
											"end": 5588,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 5547,
											"end": 5631,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5603,
											"end": 5621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 5603,
											"end": 5621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5603,
											"end": 5621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5603,
											"end": 5621,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 5603,
											"end": 5621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5631,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 5547,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5368,
											"end": 5637,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5637,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5637,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5643,
											"end": 5817,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5643,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5783,
											"end": 5809,
											"name": "PUSH",
											"source": 7,
											"value": "2063616C6C6572206973206E6F7420746865206F776E65720000000000000000"
										},
										{
											"begin": 5779,
											"end": 5780,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5771,
											"end": 5777,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5767,
											"end": 5781,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 5810,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5643,
											"end": 5817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5643,
											"end": 5817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5823,
											"end": 6189,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 5823,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5965,
											"end": 5968,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5986,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 6050,
											"end": 6052,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 6045,
											"end": 6048,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 5986,
											"end": 6053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 6053,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5986,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5979,
											"end": 6053,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5979,
											"end": 6053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6062,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6151,
											"end": 6154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6062,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 6062,
											"end": 6155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6062,
											"end": 6155,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6062,
											"end": 6155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6180,
											"end": 6182,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6175,
											"end": 6178,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6171,
											"end": 6183,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5823,
											"end": 6189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5823,
											"end": 6189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5823,
											"end": 6189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5823,
											"end": 6189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6195,
											"end": 6614,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 6195,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6361,
											"end": 6365,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6399,
											"end": 6401,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6388,
											"end": 6397,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6384,
											"end": 6402,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6457,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6442,
											"end": 6446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6438,
											"end": 6458,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6434,
											"end": 6435,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6432,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6436,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6412,
											"end": 6459,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6476,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6602,
											"end": 6606,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6476,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 6476,
											"end": 6607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6476,
											"end": 6607,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6476,
											"end": 6607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6468,
											"end": 6607,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6468,
											"end": 6607,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6195,
											"end": 6614,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6195,
											"end": 6614,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6195,
											"end": 6614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6195,
											"end": 6614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6620,
											"end": 6795,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 6620,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6787,
											"name": "PUSH",
											"source": 7,
											"value": "206D696E7420746F20746865207A65726F206164647265737300000000000000"
										},
										{
											"begin": 6756,
											"end": 6757,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6748,
											"end": 6754,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6744,
											"end": 6758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6737,
											"end": 6788,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6620,
											"end": 6795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6620,
											"end": 6795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 7167,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 6801,
											"end": 7167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 6946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6964,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 7028,
											"end": 7030,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 7023,
											"end": 7026,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6964,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 6964,
											"end": 7031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6964,
											"end": 7031,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 6964,
											"end": 7031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6957,
											"end": 7031,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6957,
											"end": 7031,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 7129,
											"end": 7132,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7040,
											"end": 7133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7133,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 7040,
											"end": 7133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7158,
											"end": 7160,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7153,
											"end": 7156,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7161,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7142,
											"end": 7161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7142,
											"end": 7161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 7167,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 7167,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 7167,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 7167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7173,
											"end": 7592,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 7173,
											"end": 7592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7343,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7379,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7366,
											"end": 7375,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7380,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7426,
											"end": 7435,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7420,
											"end": 7424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7416,
											"end": 7436,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7412,
											"end": 7413,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7401,
											"end": 7410,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7414,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7390,
											"end": 7437,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7454,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 7580,
											"end": 7584,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7454,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 7454,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7454,
											"end": 7585,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 7454,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7446,
											"end": 7585,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7446,
											"end": 7585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7173,
											"end": 7592,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7173,
											"end": 7592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7173,
											"end": 7592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7173,
											"end": 7592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7598,
											"end": 7778,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 7598,
											"end": 7778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7646,
											"end": 7723,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7643,
											"end": 7644,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7636,
											"end": 7724,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7743,
											"end": 7747,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7740,
											"end": 7741,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7733,
											"end": 7748,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7767,
											"end": 7771,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7764,
											"end": 7765,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7757,
											"end": 7772,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7784,
											"end": 7886,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 7784,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7826,
											"end": 7834,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7873,
											"end": 7878,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7871,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7866,
											"end": 7879,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 7845,
											"end": 7879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7845,
											"end": 7879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7784,
											"end": 7886,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7784,
											"end": 7886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7784,
											"end": 7886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7784,
											"end": 7886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7892,
											"end": 8740,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 7892,
											"end": 8740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7953,
											"end": 7958,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7960,
											"end": 7964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7984,
											"end": 7990,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7975,
											"end": 7990,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7975,
											"end": 7990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8008,
											"end": 8013,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7999,
											"end": 8013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7999,
											"end": 8013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8734,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 8022,
											"end": 8734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8043,
											"end": 8044,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8033,
											"end": 8041,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8030,
											"end": 8045,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8734,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 8022,
											"end": 8734,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8138,
											"end": 8142,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8133,
											"end": 8136,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8129,
											"end": 8143,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8127,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8120,
											"end": 8144,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8117,
											"end": 8167,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8117,
											"end": 8167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 8117,
											"end": 8167,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8147,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 8147,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 8147,
											"end": 8165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8147,
											"end": 8165,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 8147,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8117,
											"end": 8167,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 8117,
											"end": 8167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8197,
											"end": 8198,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8187,
											"end": 8195,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8199,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8180,
											"end": 8631,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8180,
											"end": 8631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 8180,
											"end": 8631,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8612,
											"end": 8616,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8605,
											"end": 8610,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8601,
											"end": 8617,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8592,
											"end": 8617,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8592,
											"end": 8617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8180,
											"end": 8631,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 8180,
											"end": 8631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8666,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8656,
											"end": 8660,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8652,
											"end": 8667,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8644,
											"end": 8667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8644,
											"end": 8667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8692,
											"end": 8724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8715,
											"end": 8723,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8692,
											"end": 8724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 8692,
											"end": 8724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8692,
											"end": 8724,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8692,
											"end": 8724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8680,
											"end": 8724,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8680,
											"end": 8724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 8022,
											"end": 8734,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8734,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 8022,
											"end": 8734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7892,
											"end": 8740,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7892,
											"end": 8740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7892,
											"end": 8740,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7892,
											"end": 8740,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7892,
											"end": 8740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7892,
											"end": 8740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7892,
											"end": 8740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7892,
											"end": 8740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8746,
											"end": 9819,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 8746,
											"end": 9819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8991,
											"end": 8999,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8981,
											"end": 9021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 8981,
											"end": 9021,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9012,
											"end": 9013,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9003,
											"end": 9013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9003,
											"end": 9013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9014,
											"end": 9019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 9014,
											"end": 9019,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8981,
											"end": 9021,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 8981,
											"end": 9021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9040,
											"end": 9044,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9030,
											"end": 9066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 9030,
											"end": 9066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9057,
											"end": 9058,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9048,
											"end": 9058,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9048,
											"end": 9058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9059,
											"end": 9064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 9059,
											"end": 9064,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9030,
											"end": 9066,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 9030,
											"end": 9066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9126,
											"end": 9130,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9175,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9169,
											"end": 9196,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9169,
											"end": 9196,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9169,
											"end": 9196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 9169,
											"end": 9196,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9210,
											"end": 9211,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 9205,
											"end": 9396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9205,
											"end": 9396,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9205,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 9205,
											"end": 9396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 9119,
											"end": 9396,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9169,
											"end": 9196,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 9169,
											"end": 9196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9187,
											"end": 9188,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9178,
											"end": 9188,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9178,
											"end": 9188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9189,
											"end": 9194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9189,
											"end": 9194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 9189,
											"end": 9194,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9205,
											"end": 9396,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 9205,
											"end": 9396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9250,
											"end": 9253,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 9240,
											"end": 9248,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9237,
											"end": 9254,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9234,
											"end": 9277,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9234,
											"end": 9277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 9234,
											"end": 9277,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 9257,
											"end": 9275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9234,
											"end": 9277,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 9234,
											"end": 9277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9306,
											"end": 9314,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9303,
											"end": 9304,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 9299,
											"end": 9315,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 9290,
											"end": 9315,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9290,
											"end": 9315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9341,
											"end": 9344,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9334,
											"end": 9339,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9345,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9328,
											"end": 9368,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9328,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 9328,
											"end": 9368,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9348,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 9348,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 9348,
											"end": 9366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9348,
											"end": 9366,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 9348,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9328,
											"end": 9368,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 9328,
											"end": 9368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9381,
											"end": 9386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9381,
											"end": 9386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 9381,
											"end": 9386,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9396,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 9119,
											"end": 9396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9505,
											"end": 9507,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9495,
											"end": 9503,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9492,
											"end": 9508,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9486,
											"end": 9489,
											"name": "PUSH",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 9480,
											"end": 9484,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9477,
											"end": 9490,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9473,
											"end": 9509,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9455,
											"end": 9457,
											"name": "PUSH",
											"source": 7,
											"value": "4E"
										},
										{
											"begin": 9445,
											"end": 9453,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9442,
											"end": 9458,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9437,
											"end": 9439,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 9431,
											"end": 9435,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9428,
											"end": 9440,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9424,
											"end": 9459,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9408,
											"end": 9519,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 9405,
											"end": 9651,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9405,
											"end": 9651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 9405,
											"end": 9651,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9561,
											"end": 9569,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9555,
											"end": 9559,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9570,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 9542,
											"end": 9570,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9542,
											"end": 9570,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9596,
											"end": 9599,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9589,
											"end": 9594,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9586,
											"end": 9600,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9583,
											"end": 9623,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9583,
											"end": 9623,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 9583,
											"end": 9623,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 9603,
											"end": 9621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9583,
											"end": 9623,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 9583,
											"end": 9623,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9636,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 9636,
											"end": 9641,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9405,
											"end": 9651,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 9405,
											"end": 9651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 9714,
											"end": 9717,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9704,
											"end": 9712,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9698,
											"end": 9702,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9695,
											"end": 9696,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9676,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 9676,
											"end": 9718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9718,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 9676,
											"end": 9718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9661,
											"end": 9718,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9661,
											"end": 9718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9661,
											"end": 9718,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9661,
											"end": 9718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9750,
											"end": 9754,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9745,
											"end": 9748,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9741,
											"end": 9755,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 9739,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9731,
											"end": 9756,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9728,
											"end": 9779,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9728,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 9728,
											"end": 9779,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 9759,
											"end": 9777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9728,
											"end": 9779,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 9728,
											"end": 9779,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9808,
											"end": 9812,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9801,
											"end": 9806,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9797,
											"end": 9813,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9788,
											"end": 9813,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9788,
											"end": 9813,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8746,
											"end": 9819,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 8746,
											"end": 9819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8746,
											"end": 9819,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8746,
											"end": 9819,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8746,
											"end": 9819,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8746,
											"end": 9819,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8746,
											"end": 9819,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8746,
											"end": 9819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9825,
											"end": 10110,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 9825,
											"end": 10110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9885,
											"end": 9890,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9909,
											"end": 9932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 9927,
											"end": 9931,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9909,
											"end": 9932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 9909,
											"end": 9932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9909,
											"end": 9932,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 9909,
											"end": 9932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9901,
											"end": 9932,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9901,
											"end": 9932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9953,
											"end": 9980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 9971,
											"end": 9979,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9953,
											"end": 9980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 9953,
											"end": 9980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9953,
											"end": 9980,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 9953,
											"end": 9980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9941,
											"end": 9980,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9941,
											"end": 9980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9999,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 10036,
											"end": 10102,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10026,
											"end": 10034,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10020,
											"end": 10024,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9999,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 9999,
											"end": 10103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9999,
											"end": 10103,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 9999,
											"end": 10103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9990,
											"end": 10103,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9990,
											"end": 10103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9825,
											"end": 10110,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9825,
											"end": 10110,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9825,
											"end": 10110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9825,
											"end": 10110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9825,
											"end": 10110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10116,
											"end": 10526,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 10116,
											"end": 10526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10156,
											"end": 10163,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10179,
											"end": 10199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 10197,
											"end": 10198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10179,
											"end": 10199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 10179,
											"end": 10199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10179,
											"end": 10199,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 10179,
											"end": 10199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10174,
											"end": 10199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10174,
											"end": 10199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10213,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10213,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 10213,
											"end": 10233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10213,
											"end": 10233,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 10213,
											"end": 10233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10208,
											"end": 10233,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10208,
											"end": 10233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10268,
											"end": 10269,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10265,
											"end": 10266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10261,
											"end": 10270,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 10290,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 10308,
											"end": 10319,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10290,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 10290,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10290,
											"end": 10320,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 10290,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10279,
											"end": 10320,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10279,
											"end": 10320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10469,
											"end": 10470,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10460,
											"end": 10467,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10456,
											"end": 10471,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10453,
											"end": 10454,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10450,
											"end": 10472,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10430,
											"end": 10431,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10423,
											"end": 10432,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10403,
											"end": 10486,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 10380,
											"end": 10519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 10380,
											"end": 10519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10499,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 10499,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 10499,
											"end": 10517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10499,
											"end": 10517,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 10499,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10380,
											"end": 10519,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 10380,
											"end": 10519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10116,
											"end": 10526,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10116,
											"end": 10526,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10116,
											"end": 10526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10116,
											"end": 10526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10116,
											"end": 10526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10532,
											"end": 10712,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 10532,
											"end": 10712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10672,
											"end": 10704,
											"name": "PUSH",
											"source": 7,
											"value": "20617070726F76652066726F6D20746865207A65726F20616464726573730000"
										},
										{
											"begin": 10668,
											"end": 10669,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10660,
											"end": 10666,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10656,
											"end": 10670,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10649,
											"end": 10705,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10532,
											"end": 10712,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10532,
											"end": 10712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10718,
											"end": 11084,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 10718,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10860,
											"end": 10863,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10881,
											"end": 10948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 10945,
											"end": 10947,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 10940,
											"end": 10943,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10881,
											"end": 10948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 10881,
											"end": 10948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10881,
											"end": 10948,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 10881,
											"end": 10948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10874,
											"end": 10948,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10874,
											"end": 10948,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10957,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 11046,
											"end": 11049,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10957,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 10957,
											"end": 11050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10957,
											"end": 11050,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 10957,
											"end": 11050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11075,
											"end": 11077,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11070,
											"end": 11073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11066,
											"end": 11078,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11059,
											"end": 11078,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11059,
											"end": 11078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10718,
											"end": 11084,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10718,
											"end": 11084,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10718,
											"end": 11084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10718,
											"end": 11084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11509,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 11090,
											"end": 11509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11256,
											"end": 11260,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11294,
											"end": 11296,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11283,
											"end": 11292,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11279,
											"end": 11297,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11271,
											"end": 11297,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11271,
											"end": 11297,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11343,
											"end": 11352,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11337,
											"end": 11341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11333,
											"end": 11353,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11329,
											"end": 11330,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11318,
											"end": 11327,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11314,
											"end": 11331,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11307,
											"end": 11354,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11371,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 11497,
											"end": 11501,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11371,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 11371,
											"end": 11502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11371,
											"end": 11502,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 11371,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11363,
											"end": 11502,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11363,
											"end": 11502,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11509,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11515,
											"end": 11693,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 11515,
											"end": 11693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11655,
											"end": 11685,
											"name": "PUSH",
											"source": 7,
											"value": "20617070726F766520746F20746865207A65726F206164647265737300000000"
										},
										{
											"begin": 11651,
											"end": 11652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11643,
											"end": 11649,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11639,
											"end": 11653,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11632,
											"end": 11686,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11515,
											"end": 11693,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11515,
											"end": 11693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11699,
											"end": 12065,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 11699,
											"end": 12065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11841,
											"end": 11844,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11862,
											"end": 11929,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 11926,
											"end": 11928,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 11921,
											"end": 11924,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11862,
											"end": 11929,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 11862,
											"end": 11929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11862,
											"end": 11929,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 11862,
											"end": 11929,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11855,
											"end": 11929,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11855,
											"end": 11929,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11938,
											"end": 12031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 12027,
											"end": 12030,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11938,
											"end": 12031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 11938,
											"end": 12031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11938,
											"end": 12031,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 11938,
											"end": 12031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12056,
											"end": 12058,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12051,
											"end": 12054,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12047,
											"end": 12059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12040,
											"end": 12059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12040,
											"end": 12059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11699,
											"end": 12065,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11699,
											"end": 12065,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11699,
											"end": 12065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11699,
											"end": 12065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12071,
											"end": 12490,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 12071,
											"end": 12490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12237,
											"end": 12241,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12275,
											"end": 12277,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12260,
											"end": 12278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12252,
											"end": 12278,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12252,
											"end": 12278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12324,
											"end": 12333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12318,
											"end": 12322,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12314,
											"end": 12334,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12310,
											"end": 12311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12299,
											"end": 12308,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12295,
											"end": 12312,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12288,
											"end": 12335,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12352,
											"end": 12483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 12478,
											"end": 12482,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12352,
											"end": 12483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 12352,
											"end": 12483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12352,
											"end": 12483,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 12352,
											"end": 12483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12344,
											"end": 12483,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12344,
											"end": 12483,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12071,
											"end": 12490,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12071,
											"end": 12490,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12071,
											"end": 12490,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12071,
											"end": 12490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12496,
											"end": 12614,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 12496,
											"end": 12614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12583,
											"end": 12607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 12601,
											"end": 12606,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12583,
											"end": 12607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 12583,
											"end": 12607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12583,
											"end": 12607,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 12583,
											"end": 12607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12578,
											"end": 12581,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12571,
											"end": 12608,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12496,
											"end": 12614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12496,
											"end": 12614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12496,
											"end": 12614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12620,
											"end": 12952,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 12620,
											"end": 12952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12741,
											"end": 12745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12779,
											"end": 12781,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12768,
											"end": 12777,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12764,
											"end": 12782,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12756,
											"end": 12782,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12756,
											"end": 12782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12792,
											"end": 12863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 12860,
											"end": 12861,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12849,
											"end": 12858,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12845,
											"end": 12862,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12836,
											"end": 12842,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12792,
											"end": 12863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 12792,
											"end": 12863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12792,
											"end": 12863,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 12792,
											"end": 12863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12873,
											"end": 12945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 12941,
											"end": 12943,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12930,
											"end": 12939,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12926,
											"end": 12944,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12917,
											"end": 12923,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12873,
											"end": 12945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 12873,
											"end": 12945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12873,
											"end": 12945,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 12873,
											"end": 12945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12620,
											"end": 12952,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12620,
											"end": 12952,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12620,
											"end": 12952,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12620,
											"end": 12952,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12620,
											"end": 12952,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12620,
											"end": 12952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12958,
											"end": 13127,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 12958,
											"end": 13127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13098,
											"end": 13119,
											"name": "PUSH",
											"source": 7,
											"value": "20616C6C6F77616E636520657863656564656400000000000000000000000000"
										},
										{
											"begin": 13094,
											"end": 13095,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13086,
											"end": 13092,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13082,
											"end": 13096,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13075,
											"end": 13120,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12958,
											"end": 13127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12958,
											"end": 13127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13133,
											"end": 13499,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 13133,
											"end": 13499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13275,
											"end": 13278,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13296,
											"end": 13363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 13360,
											"end": 13362,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 13355,
											"end": 13358,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13296,
											"end": 13363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 13296,
											"end": 13363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13296,
											"end": 13363,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 13296,
											"end": 13363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13289,
											"end": 13363,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13289,
											"end": 13363,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13372,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 13461,
											"end": 13464,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13372,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 13372,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13372,
											"end": 13465,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 13372,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13490,
											"end": 13492,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13485,
											"end": 13488,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13481,
											"end": 13493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13474,
											"end": 13493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13474,
											"end": 13493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13133,
											"end": 13499,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13133,
											"end": 13499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13133,
											"end": 13499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13133,
											"end": 13499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13924,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 13505,
											"end": 13924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13671,
											"end": 13675,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13709,
											"end": 13711,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13698,
											"end": 13707,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13694,
											"end": 13712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13686,
											"end": 13712,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13686,
											"end": 13712,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13758,
											"end": 13767,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13752,
											"end": 13756,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13748,
											"end": 13768,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13744,
											"end": 13745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13733,
											"end": 13742,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13729,
											"end": 13746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13722,
											"end": 13769,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13786,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 13912,
											"end": 13916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13786,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 13786,
											"end": 13917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13786,
											"end": 13917,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 13786,
											"end": 13917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13778,
											"end": 13917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13778,
											"end": 13917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13924,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13924,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13924,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13930,
											"end": 14111,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 13930,
											"end": 14111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14070,
											"end": 14103,
											"name": "PUSH",
											"source": 7,
											"value": "207472616E736665722066726F6D20746865207A65726F206164647265737300"
										},
										{
											"begin": 14066,
											"end": 14067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14058,
											"end": 14064,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14054,
											"end": 14068,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14047,
											"end": 14104,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13930,
											"end": 14111,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13930,
											"end": 14111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14117,
											"end": 14483,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 14117,
											"end": 14483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14259,
											"end": 14262,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14280,
											"end": 14347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 14344,
											"end": 14346,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 14339,
											"end": 14342,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14280,
											"end": 14347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 14280,
											"end": 14347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14280,
											"end": 14347,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 14280,
											"end": 14347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14273,
											"end": 14347,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14273,
											"end": 14347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14356,
											"end": 14449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 14445,
											"end": 14448,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14356,
											"end": 14449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 14356,
											"end": 14449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14356,
											"end": 14449,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 14356,
											"end": 14449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14474,
											"end": 14476,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14469,
											"end": 14472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14465,
											"end": 14477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14458,
											"end": 14477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14458,
											"end": 14477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14117,
											"end": 14483,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14117,
											"end": 14483,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14117,
											"end": 14483,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14117,
											"end": 14483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14489,
											"end": 14908,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 14489,
											"end": 14908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14655,
											"end": 14659,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14693,
											"end": 14695,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14682,
											"end": 14691,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14678,
											"end": 14696,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14670,
											"end": 14696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14670,
											"end": 14696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14742,
											"end": 14751,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14736,
											"end": 14740,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14732,
											"end": 14752,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14728,
											"end": 14729,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14717,
											"end": 14726,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14713,
											"end": 14730,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14706,
											"end": 14753,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14770,
											"end": 14901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 14896,
											"end": 14900,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14770,
											"end": 14901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 14770,
											"end": 14901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14770,
											"end": 14901,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 14770,
											"end": 14901,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14762,
											"end": 14901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14762,
											"end": 14901,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14489,
											"end": 14908,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14489,
											"end": 14908,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14489,
											"end": 14908,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14489,
											"end": 14908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14914,
											"end": 15093,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 14914,
											"end": 15093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15054,
											"end": 15085,
											"name": "PUSH",
											"source": 7,
											"value": "207472616E7366657220746F20746865207A65726F2061646472657373000000"
										},
										{
											"begin": 15050,
											"end": 15051,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15042,
											"end": 15048,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15038,
											"end": 15052,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15031,
											"end": 15086,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14914,
											"end": 15093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14914,
											"end": 15093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15099,
											"end": 15465,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 15099,
											"end": 15465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15241,
											"end": 15244,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15262,
											"end": 15329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 15326,
											"end": 15328,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 15321,
											"end": 15324,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15262,
											"end": 15329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 15262,
											"end": 15329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15262,
											"end": 15329,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 15262,
											"end": 15329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15255,
											"end": 15329,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15255,
											"end": 15329,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15338,
											"end": 15431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 15427,
											"end": 15430,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15338,
											"end": 15431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 15338,
											"end": 15431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15338,
											"end": 15431,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 15338,
											"end": 15431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15456,
											"end": 15458,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15451,
											"end": 15454,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15447,
											"end": 15459,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15440,
											"end": 15459,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15440,
											"end": 15459,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15099,
											"end": 15465,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15099,
											"end": 15465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15099,
											"end": 15465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15099,
											"end": 15465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15471,
											"end": 15890,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 15471,
											"end": 15890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15637,
											"end": 15641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15675,
											"end": 15677,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15664,
											"end": 15673,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15660,
											"end": 15678,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15652,
											"end": 15678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15652,
											"end": 15678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15724,
											"end": 15733,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15718,
											"end": 15722,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15714,
											"end": 15734,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15710,
											"end": 15711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15699,
											"end": 15708,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15695,
											"end": 15712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15688,
											"end": 15735,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15752,
											"end": 15883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 15878,
											"end": 15882,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15752,
											"end": 15883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 15752,
											"end": 15883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15752,
											"end": 15883,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 15752,
											"end": 15883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15744,
											"end": 15883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15744,
											"end": 15883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15471,
											"end": 15890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15471,
											"end": 15890,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15471,
											"end": 15890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15471,
											"end": 15890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15896,
											"end": 16067,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 15896,
											"end": 16067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16036,
											"end": 16059,
											"name": "PUSH",
											"source": 7,
											"value": "20696E73756666696369656E742062616C616E63650000000000000000000000"
										},
										{
											"begin": 16032,
											"end": 16033,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16024,
											"end": 16030,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16020,
											"end": 16034,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16013,
											"end": 16060,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15896,
											"end": 16067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15896,
											"end": 16067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16073,
											"end": 16439,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 16073,
											"end": 16439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16215,
											"end": 16218,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16236,
											"end": 16303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 16300,
											"end": 16302,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 16295,
											"end": 16298,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16236,
											"end": 16303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 16236,
											"end": 16303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16236,
											"end": 16303,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 16236,
											"end": 16303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16229,
											"end": 16303,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16229,
											"end": 16303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16312,
											"end": 16405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 16401,
											"end": 16404,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16312,
											"end": 16405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 16312,
											"end": 16405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16312,
											"end": 16405,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 16312,
											"end": 16405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16430,
											"end": 16432,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16425,
											"end": 16428,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16421,
											"end": 16433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16414,
											"end": 16433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16414,
											"end": 16433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16073,
											"end": 16439,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16073,
											"end": 16439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16073,
											"end": 16439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16073,
											"end": 16439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16445,
											"end": 16864,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 16445,
											"end": 16864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16611,
											"end": 16615,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16649,
											"end": 16651,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16638,
											"end": 16647,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16634,
											"end": 16652,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16626,
											"end": 16652,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16626,
											"end": 16652,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16698,
											"end": 16707,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16692,
											"end": 16696,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16688,
											"end": 16708,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16684,
											"end": 16685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16673,
											"end": 16682,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16669,
											"end": 16686,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16662,
											"end": 16709,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16726,
											"end": 16857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 16852,
											"end": 16856,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16726,
											"end": 16857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 16726,
											"end": 16857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16726,
											"end": 16857,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 16726,
											"end": 16857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16718,
											"end": 16857,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16718,
											"end": 16857,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16445,
											"end": 16864,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16445,
											"end": 16864,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16445,
											"end": 16864,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16445,
											"end": 16864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16870,
											"end": 17061,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 16870,
											"end": 17061,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16910,
											"end": 16913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16929,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 16947,
											"end": 16948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16929,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 16929,
											"end": 16949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16929,
											"end": 16949,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 16929,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16924,
											"end": 16949,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16924,
											"end": 16949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16963,
											"end": 16983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 16981,
											"end": 16982,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16963,
											"end": 16983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 16963,
											"end": 16983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16963,
											"end": 16983,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 16963,
											"end": 16983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16958,
											"end": 16983,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16958,
											"end": 16983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17006,
											"end": 17007,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17003,
											"end": 17004,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16999,
											"end": 17008,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16992,
											"end": 17008,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16992,
											"end": 17008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17027,
											"end": 17030,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17024,
											"end": 17025,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17021,
											"end": 17031,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17018,
											"end": 17054,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17018,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 17018,
											"end": 17054,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 17034,
											"end": 17052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17018,
											"end": 17054,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 17018,
											"end": 17054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16870,
											"end": 17061,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16870,
											"end": 17061,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16870,
											"end": 17061,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16870,
											"end": 17061,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16870,
											"end": 17061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"upgrade/MyErc20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"\\u5b9e\\u73b0IERC20\\u63a5\\u53e3\\u7684approve\\u51fd\\u6570\",\"returns\":{\"_0\":\"\\u64cd\\u4f5c\\u662f\\u5426\\u6210\\u529f\"}},\"balanceOf(address)\":{\"details\":\"\\u5b9e\\u73b0IERC20\\u63a5\\u53e3\\u7684balanceOf\\u51fd\\u6570\",\"returns\":{\"_0\":\"\\u8d26\\u6237\\u7684\\u4ee3\\u5e01\\u4f59\\u989d\"}},\"constructor\":{\"details\":\"\\u6784\\u9020\\u51fd\\u6570\\uff0c\\u521d\\u59cb\\u5316\\u4ee3\\u5e01\\u4fe1\\u606f\\u5e76\\u8bbe\\u7f6e\\u6240\\u6709\\u8005\"},\"mint(address,uint256)\":{\"details\":\"\\u589e\\u53d1\\u4ee3\\u5e01\\uff0c\\u4ec5\\u6240\\u6709\\u8005\\u53ef\\u8c03\\u7528\"},\"transfer(address,uint256)\":{\"details\":\"\\u5b9e\\u73b0IERC20\\u63a5\\u53e3\\u7684transfer\\u51fd\\u6570\",\"returns\":{\"_0\":\"\\u64cd\\u4f5c\\u662f\\u5426\\u6210\\u529f\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"\\u5b9e\\u73b0IERC20\\u63a5\\u53e3\\u7684transferFrom\\u51fd\\u6570\",\"returns\":{\"_0\":\"\\u64cd\\u4f5c\\u662f\\u5426\\u6210\\u529f\"}}},\"stateVariables\":{\"totalSupply\":{\"details\":\"Returns the value of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"\\u4f5c\\u4e1a 1\\uff1aERC20 \\u4ee3\\u5e01 \\u4efb\\u52a1\\uff1a\\u53c2\\u8003 openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\\u5b9e\\u73b0\\u4e00\\u4e2a\\u7b80\\u5355\\u7684 ERC20 \\u4ee3\\u5e01\\u5408\\u7ea6\\u3002\\u8981\\u6c42\\uff1a  1.\\u5408\\u7ea6\\u5305\\u542b\\u4ee5\\u4e0b\\u6807\\u51c6 ERC20 \\u529f\\u80fd\\uff1a 2.balanceOf\\uff1a\\u67e5\\u8be2\\u8d26\\u6237\\u4f59\\u989d\\u3002 3.transfer\\uff1a\\u8f6c\\u8d26\\u3002 4.approve \\u548c transferFrom\\uff1a\\u6388\\u6743\\u548c\\u4ee3\\u6263\\u8f6c\\u8d26\\u3002 5.\\u4f7f\\u7528 event \\u8bb0\\u5f55\\u8f6c\\u8d26\\u548c\\u6388\\u6743\\u64cd\\u4f5c\\u3002 6.\\u63d0\\u4f9b mint \\u51fd\\u6570\\uff0c\\u5141\\u8bb8\\u5408\\u7ea6\\u6240\\u6709\\u8005\\u589e\\u53d1\\u4ee3\\u5e01\\u3002 \\u63d0\\u793a\\uff1a \\u4f7f\\u7528 mapping \\u5b58\\u50a8\\u8d26\\u6237\\u4f59\\u989d\\u548c\\u6388\\u6743\\u4fe1\\u606f\\u3002 \\u4f7f\\u7528 event \\u5b9a\\u4e49 Transfer \\u548c Approval \\u4e8b\\u4ef6\\u3002 \\u90e8\\u7f72\\u5230sepolia \\u6d4b\\u8bd5\\u7f51\\uff0c\\u5bfc\\u5165\\u5230\\u81ea\\u5df1\\u7684\\u94b1\\u5305\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"upgrade/MyErc20.sol\":\"MyERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"upgrade/MyErc20.sol\":{\"keccak256\":\"0xe30488a15ff62128db062e8f0d1b332196d82907182a7044072315fb6547b99f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2eaffdf3574cd1c433c75ed1e96b44e3b4cdd48d6bb299ff9460e44ef0aae4ab\",\"dweb:/ipfs/QmbR4DGWba6fCrZ6kGDkacweLR44sKGimU7Rspn62Y3j7z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 944,
								"contract": "upgrade/MyErc20.sol:MyERC20",
								"label": "name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 947,
								"contract": "upgrade/MyErc20.sol:MyERC20",
								"label": "symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 950,
								"contract": "upgrade/MyErc20.sol:MyERC20",
								"label": "decimals",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 952,
								"contract": "upgrade/MyErc20.sol:MyERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 976,
								"contract": "upgrade/MyErc20.sol:MyERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 982,
								"contract": "upgrade/MyErc20.sol:MyERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 984,
								"contract": "upgrade/MyErc20.sol:MyERC20",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "作业 1：ERC20 代币 任务：参考 openzeppelin-contracts/contracts/token/ERC20/IERC20.sol实现一个简单的 ERC20 代币合约。要求：  1.合约包含以下标准 ERC20 功能： 2.balanceOf：查询账户余额。 3.transfer：转账。 4.approve 和 transferFrom：授权和代扣转账。 5.使用 event 记录转账和授权操作。 6.提供 mint 函数，允许合约所有者增发代币。 提示： 使用 mapping 存储账户余额和授权信息。 使用 event 定义 Transfer 和 Approval 事件。 部署到sepolia 测试网，导入到自己的钱包",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2864:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2881:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2874:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2855:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:2"
									},
									"scope": 799,
									"src": "2803:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3007:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3024:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3034:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3017:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2952:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2998:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:2"
									},
									"scope": 799,
									"src": "2933:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3319:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3329:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3345:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3377:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3384:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3388:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3367:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3404:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3262:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3274:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3313:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:2"
									},
									"scope": 799,
									"src": "3244:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3544:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3561:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3573:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3580:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3554:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3474:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3489:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3535:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:2"
									},
									"scope": 799,
									"src": "3455:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3981:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "3991:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4007:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4038:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4045:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4054:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4029:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4070:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3919:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3936:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3975:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:2"
									},
									"scope": 799,
									"src": "3902:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4773:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4783:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4801:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4839:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4845:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4854:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4823:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4880:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4886:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4890:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4870:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4906:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4702:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4716:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4728:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4767:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:2"
									},
									"scope": 799,
									"src": "4680:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5366:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5380:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5376:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5400:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5421:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5414:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5475:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5471:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5493:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5514:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5507:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5580:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5584:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5566:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5316:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5330:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:2"
									},
									"scope": 799,
									"src": "5297:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5987:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6001:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6175:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6189:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6211:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6221:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6244:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6258:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6240:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6265:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6315:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6321:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6334:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6290:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6475:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6485:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6493:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6507:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "5997:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6021:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6137:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6153:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6551:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6766:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6925:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "6935:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6942:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6547:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6569:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6714:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6730:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "6996:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7002:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7006:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "6987:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "6982:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5929:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5943:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5955:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:2"
									},
									"scope": 799,
									"src": "5912:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7418:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7432:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7428:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7455:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7476:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7469:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7548:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7557:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7377:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7394:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:2"
									},
									"scope": 799,
									"src": "7362:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "7944:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "7958:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "7954:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "7981:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8002:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "7995:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8060:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8081:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8052:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7920:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:2"
									},
									"scope": 799,
									"src": "7888:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8704:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8723:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8730:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8739:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8714:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8648:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8663:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8680:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:2"
									},
									"scope": 799,
									"src": "8630:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9703:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9717:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9713:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9738:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9759:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9752:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9815:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9811:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9838:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9859:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9852:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9910:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9922:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "9929:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "9940:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "9959:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "9955:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "9970:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "9998:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10005:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10014:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "9989:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "9984:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9623:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9638:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9670:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:2"
									},
									"scope": 799,
									"src": "9605:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10408:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10418:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10455:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10462:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10445:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10484:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10480:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10522:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10540:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10559:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10536:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10566:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10618:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10627:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10645:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10591:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10716:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10723:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10732:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10751:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10707:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10344:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10359:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10376:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:2"
									},
									"scope": 799,
									"src": "10319:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9691:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10693:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "215:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "397:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "406:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "428:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "448:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:3"
									},
									"src": "391:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "628:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "637:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "660:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "685:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:3"
									},
									"src": "622:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "822:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:3"
									},
									"scope": 877,
									"src": "776:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "932:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "972:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:3"
									},
									"scope": 877,
									"src": "913:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1223:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1235:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 877,
									"src": "1205:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 877,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2327:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2344:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2377:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:3"
									},
									"scope": 877,
									"src": "2310:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2713:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2727:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2739:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2772:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:3"
									},
									"scope": 877,
									"src": "2691:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "205:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2675:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"upgrade/MyErc20.sol": {
				"ast": {
					"absolutePath": "upgrade/MyErc20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"MyERC20": [
							1371
						],
						"Ownable": [
							147
						]
					},
					"id": 1372,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"~",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1372,
							"sourceUnit": 800,
							"src": "58:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1372,
							"sourceUnit": 878,
							"src": "115:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 938,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1372,
							"sourceUnit": 148,
							"src": "173:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 940,
										"name": "IERC20",
										"nameLocations": [
											"852:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "852:6:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "852:6:6"
								}
							],
							"canonicalName": "MyERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 939,
								"nodeType": "StructuredDocumentation",
								"src": "229:601:6",
								"text": "作业 1：ERC20 代币\n任务：参考 openzeppelin-contracts/contracts/token/ERC20/IERC20.sol实现一个简单的 ERC20 代币合约。要求： \n1.合约包含以下标准 ERC20 功能：\n2.balanceOf：查询账户余额。\n3.transfer：转账。\n4.approve 和 transferFrom：授权和代扣转账。\n5.使用 event 记录转账和授权操作。\n6.提供 mint 函数，允许合约所有者增发代币。\n提示：\n使用 mapping 存储账户余额和授权信息。\n使用 event 定义 Transfer 和 Approval 事件。\n部署到sepolia 测试网，导入到自己的钱包"
							},
							"fullyImplemented": true,
							"id": 1371,
							"linearizedBaseContracts": [
								1371,
								877
							],
							"name": "MyERC20",
							"nameLocation": "841:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 944,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "901:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "887:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 942,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "887:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4d494d494c756b65",
										"id": 943,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "908:10:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_12f9d9fe4d7bbaac2540868571b2377a2d7969beddccb5c1b21d238b13d1a43f",
											"typeString": "literal_string \"MIMILuke\""
										},
										"value": "MIMILuke"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 947,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "960:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "946:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 945,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "946:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4d4c",
										"id": 946,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "969:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_85f789f5b9a4eac9c1e7bc9f2ebbb32ce45a5ca7376dcdda4a34630c1ef5d986",
											"typeString": "literal_string \"ML\""
										},
										"value": "ML"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "313ce567",
									"id": 950,
									"mutability": "mutable",
									"name": "decimals",
									"nameLocation": "1016:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "1001:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 948,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1001:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 949,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1027:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 952,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "1072:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "1057:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 951,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1057:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc44",
									"id": 962,
									"name": "Transfer",
									"nameLocation": "1098:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1123:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1107:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1137:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1129:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1149:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1141:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"indexed": true,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1172:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1156:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1106:76:6"
									},
									"src": "1092:91:6"
								},
								{
									"anonymous": false,
									"eventSelector": "b3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a7",
									"id": 972,
									"name": "Approval",
									"nameLocation": "1201:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1226:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "1210:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1240:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "1232:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1252:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "1244:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"indexed": true,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1275:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "1259:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1259:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1209:76:6"
									},
									"src": "1195:91:6"
								},
								{
									"constant": false,
									"id": 976,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1375:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "1325:59:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 975,
										"keyName": "account",
										"keyNameLocation": "1341:7:6",
										"keyType": {
											"id": 973,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1333:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1325:41:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "value",
										"valueNameLocation": "1360:5:6",
										"valueType": {
											"id": 974,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1352:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 982,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1524:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "1455:80:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 981,
										"keyName": "from",
										"keyNameLocation": "1471:4:6",
										"keyType": {
											"id": 977,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1463:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1455:60:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 980,
											"keyName": "to",
											"keyNameLocation": "1494:2:6",
											"keyType": {
												"id": 978,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1486:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1478:36:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "value",
											"valueNameLocation": "1508:5:6",
											"valueType": {
												"id": 979,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1500:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 984,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1588:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "1572:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 983,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1572:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "1768:193:6",
										"statements": [
											{
												"expression": {
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 994,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "1779:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 995,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "1786:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1779:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "1779:12:6"
											},
											{
												"expression": {
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 998,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "1802:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 999,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "1811:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1802:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "1802:16:6"
											},
											{
												"expression": {
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1002,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "1829:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1003,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1838:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1842:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1838:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1829:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "1829:19:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1008,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1911:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1915:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1911:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1010,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 991,
																"src": "1923:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1939:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 1012,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "1944:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1939:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1923:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1007,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "1905:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1905:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "1905:48:6"
											}
										]
									},
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "1603:80:6",
										"text": " @dev 构造函数，初始化代币信息并设置所有者"
									},
									"id": 1018,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1715:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "1701:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 986,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1701:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1736:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "1722:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 988,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1722:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "1753:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "1745:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1700:67:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1768:0:6"
									},
									"scope": 1371,
									"src": "1689:272:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "2052:55:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1027,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "2072:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1029,
														"indexExpression": {
															"id": 1028,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "2084:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2072:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1031,
													"indexExpression": {
														"id": 1030,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "2091:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2072:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1026,
												"id": 1032,
												"nodeType": "Return",
												"src": "2065:34:6"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1978:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1996:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "1988:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2011:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "2003:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2003:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:32:6"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "2043:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2043:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2042:9:6"
									},
									"scope": 1371,
									"src": "1969:138:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "2201:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1038,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "2220:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1039,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2230:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2234:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2230:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2220:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2242:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c540becca184d5f9f29196779dd3c2db45726cac290f020acea94e53c4ecc1e",
																"typeString": "literal_string \" caller is not the owner\""
															},
															"value": " caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c540becca184d5f9f29196779dd3c2db45726cac290f020acea94e53c4ecc1e",
																"typeString": "literal_string \" caller is not the owner\""
															}
														],
														"id": 1037,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2212:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2212:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "2212:57:6"
											},
											{
												"id": 1045,
												"nodeType": "PlaceholderStatement",
												"src": "2280:1:6"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "2115:59:6",
										"text": " @dev 检查调用者是否为所有者"
									},
									"id": 1047,
									"name": "onlyOwner",
									"nameLocation": "2189:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2198:2:6"
									},
									"src": "2180:109:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "2478:46:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1056,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "2498:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1058,
													"indexExpression": {
														"id": 1057,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "2508:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2498:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1055,
												"id": 1059,
												"nodeType": "Return",
												"src": "2491:25:6"
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "2297:100:6",
										"text": " @dev 实现IERC20接口的balanceOf函数\n @return 账户的代币余额"
									},
									"functionSelector": "70a08231",
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2412:9:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1052,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2451:8:6"
									},
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2430:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "2422:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2422:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2421:17:6"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "2469:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:9:6"
									},
									"scope": 1371,
									"src": "2403:121:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 1085,
										"nodeType": "Block",
										"src": "2711:111:6",
										"statements": [
											{
												"assignments": [
													1073
												],
												"declarations": [
													{
														"constant": false,
														"id": 1073,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "2732:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1085,
														"src": "2724:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1072,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2724:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1076,
												"initialValue": {
													"expression": {
														"id": 1074,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2739:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2743:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2739:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2724:25:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1078,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "2772:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "2778:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1080,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "2782:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1077,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "2762:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2762:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "2762:27:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2809:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1071,
												"id": 1084,
												"nodeType": "Return",
												"src": "2802:11:6"
											}
										]
									},
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "2532:96:6",
										"text": " @dev 实现IERC20接口的transfer函数\n @return 操作是否成功"
									},
									"functionSelector": "a9059cbb",
									"id": 1086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2644:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1068,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2688:8:6"
									},
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2661:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "2653:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2673:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "2665:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2665:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:28:6"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "2706:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1069,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2706:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2705:6:6"
									},
									"scope": 1371,
									"src": "2635:187:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 1110,
										"nodeType": "Block",
										"src": "3013:115:6",
										"statements": [
											{
												"assignments": [
													1098
												],
												"declarations": [
													{
														"constant": false,
														"id": 1098,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "3034:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1110,
														"src": "3026:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1097,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3026:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1101,
												"initialValue": {
													"expression": {
														"id": 1099,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3041:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3045:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3041:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3026:25:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1103,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "3073:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "3079:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "3088:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1102,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "3064:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3064:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "3064:31:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3115:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1096,
												"id": 1109,
												"nodeType": "Return",
												"src": "3108:11:6"
											}
										]
									},
									"documentation": {
										"id": 1087,
										"nodeType": "StructuredDocumentation",
										"src": "2830:95:6",
										"text": " @dev 实现IERC20接口的approve函数\n @return 操作是否成功"
									},
									"functionSelector": "095ea7b3",
									"id": 1111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2941:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1093,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2989:8:6"
									},
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2957:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "2949:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2974:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "2966:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2966:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:33:6"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "3007:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1094,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3007:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3006:6:6"
									},
									"scope": 1371,
									"src": "2932:196:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "3371:156:6",
										"statements": [
											{
												"assignments": [
													1125
												],
												"declarations": [
													{
														"constant": false,
														"id": 1125,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "3390:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1143,
														"src": "3382:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1124,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3382:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1128,
												"initialValue": {
													"expression": {
														"id": 1126,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3400:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3404:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3400:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3382:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1130,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1114,
															"src": "3437:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1131,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "3443:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1132,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "3452:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1129,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "3421:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3421:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "3421:38:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1136,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1114,
															"src": "3480:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "3486:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1138,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "3490:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1135,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "3470:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3470:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "3470:27:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3515:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1123,
												"id": 1142,
												"nodeType": "Return",
												"src": "3508:11:6"
											}
										]
									},
									"documentation": {
										"id": 1112,
										"nodeType": "StructuredDocumentation",
										"src": "3136:100:6",
										"text": " @dev 实现IERC20接口的transferFrom函数\n @return 操作是否成功"
									},
									"functionSelector": "23b872dd",
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3251:12:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1120,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3347:8:6"
									},
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3282:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "3274:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3305:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "3297:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3297:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3326:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "3318:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3263:76:6"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "3365:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:6"
									},
									"scope": 1371,
									"src": "3242:285:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "3689:393:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1155,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "3708:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3724:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3716:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1156,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3716:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3716:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3708:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3728:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52d62de738b33c87646e159de19563a9f80b9e1fa1b35788579bc1530b641267",
																"typeString": "literal_string \" transfer from the zero address\""
															},
															"value": " transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52d62de738b33c87646e159de19563a9f80b9e1fa1b35788579bc1530b641267",
																"typeString": "literal_string \" transfer from the zero address\""
															}
														],
														"id": 1154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3700:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3700:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "3700:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1165,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "3781:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3795:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3787:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1166,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3787:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3787:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3781:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3799:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ae357b8326e49c636736622eb1e29ffe9c8ffdabb32b4217f01e18b36eb6348",
																"typeString": "literal_string \" transfer to the zero address\""
															},
															"value": " transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ae357b8326e49c636736622eb1e29ffe9c8ffdabb32b4217f01e18b36eb6348",
																"typeString": "literal_string \" transfer to the zero address\""
															}
														],
														"id": 1164,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3773:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3773:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1173,
												"nodeType": "ExpressionStatement",
												"src": "3773:58:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1175,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "3850:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1177,
																"indexExpression": {
																	"id": 1176,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "3860:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3850:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1178,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1151,
																"src": "3869:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3850:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "20696e73756666696369656e742062616c616e6365",
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3877:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5020d33bc2d617c34f2d5000e4f91964978b5792b811cdb87a70476114286e7c",
																"typeString": "literal_string \" insufficient balance\""
															},
															"value": " insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5020d33bc2d617c34f2d5000e4f91964978b5792b811cdb87a70476114286e7c",
																"typeString": "literal_string \" insufficient balance\""
															}
														],
														"id": 1174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3842:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3842:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "3842:59:6"
											},
											{
												"id": 1195,
												"nodeType": "UncheckedBlock",
												"src": "3914:100:6",
												"statements": [
													{
														"expression": {
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1183,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "3939:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1185,
																"indexExpression": {
																	"id": 1184,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "3949:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "3939:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 1186,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1151,
																"src": "3958:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3939:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1188,
														"nodeType": "ExpressionStatement",
														"src": "3939:25:6"
													},
													{
														"expression": {
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1189,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "3979:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1191,
																"indexExpression": {
																	"id": 1190,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "3989:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "3979:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1192,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1151,
																"src": "3996:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3979:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1194,
														"nodeType": "ExpressionStatement",
														"src": "3979:23:6"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1197,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "4040:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1198,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "4046:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1199,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "4050:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1200,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4058:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4064:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4058:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1196,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															962,
															811
														],
														"referencedDeclaration": 962,
														"src": "4031:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4031:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "EmitStatement",
												"src": "4026:48:6"
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "3535:44:6",
										"text": " @dev 内部转账逻辑"
									},
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "3594:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3622:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "3614:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3614:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3645:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "3637:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3637:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3666:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "3658:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3658:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3603:76:6"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3689:0:6"
									},
									"scope": 1371,
									"src": "3585:497:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "4249:268:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1216,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "4268:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4285:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4277:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1217,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4277:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4277:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4268:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4289:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_20c540669f159a20ed49b45c8953ce643eeae9e8d73cf5fbe5c0cb55a41c85c8",
																"typeString": "literal_string \" approve from the zero address\""
															},
															"value": " approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_20c540669f159a20ed49b45c8953ce643eeae9e8d73cf5fbe5c0cb55a41c85c8",
																"typeString": "literal_string \" approve from the zero address\""
															}
														],
														"id": 1215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4260:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4260:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1224,
												"nodeType": "ExpressionStatement",
												"src": "4260:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1226,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1210,
																"src": "4341:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4360:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4352:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1227,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4352:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4352:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4341:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4364:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b812d4684306b8007a1ced2adbd53f18c6bbc6a24a673a6df98d07d2eeb872d4",
																"typeString": "literal_string \" approve to the zero address\""
															},
															"value": " approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b812d4684306b8007a1ced2adbd53f18c6bbc6a24a673a6df98d07d2eeb872d4",
																"typeString": "literal_string \" approve to the zero address\""
															}
														],
														"id": 1225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4333:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4333:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "4333:62:6"
											},
											{
												"expression": {
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1235,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "4408:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1238,
															"indexExpression": {
																"id": 1236,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "4420:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4408:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1239,
														"indexExpression": {
															"id": 1237,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "4427:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4408:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1240,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "4438:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4408:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "4408:36:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1244,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "4469:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1245,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "4476:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1246,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "4485:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1247,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4493:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4499:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4493:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1243,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															972,
															820
														],
														"referencedDeclaration": 972,
														"src": "4460:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4460:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "EmitStatement",
												"src": "4455:54:6"
											}
										]
									},
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "4090:44:6",
										"text": " @dev 内部授权逻辑"
									},
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "4149:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4176:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "4168:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4200:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "4192:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4192:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4226:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "4218:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4157:82:6"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4249:0:6"
									},
									"scope": 1371,
									"src": "4140:377:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "4691:321:6",
										"statements": [
											{
												"assignments": [
													1263
												],
												"declarations": [
													{
														"constant": false,
														"id": 1263,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "4710:16:6",
														"nodeType": "VariableDeclaration",
														"scope": 1295,
														"src": "4702:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1262,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4702:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1269,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1264,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "4729:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1266,
														"indexExpression": {
															"id": 1265,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "4741:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4729:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1268,
													"indexExpression": {
														"id": 1267,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "4748:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4729:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4702:54:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1270,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "4771:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4796:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1272,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4796:7:6",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1271,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4791:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4791:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4805:3:6",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4791:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4771:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1294,
												"nodeType": "IfStatement",
												"src": "4767:238:6",
												"trueBody": {
													"id": 1293,
													"nodeType": "Block",
													"src": "4810:195:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1278,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1263,
																			"src": "4833:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1279,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1259,
																			"src": "4853:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4833:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "20616c6c6f77616e6365206578636565646564",
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4861:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_76c35e8552a19137f541ba350ea2f59c360729aeffd91a00d8389d78b4fc86bb",
																			"typeString": "literal_string \" allowance exceeded\""
																		},
																		"value": " allowance exceeded"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_76c35e8552a19137f541ba350ea2f59c360729aeffd91a00d8389d78b4fc86bb",
																			"typeString": "literal_string \" allowance exceeded\""
																		}
																	],
																	"id": 1277,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4825:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4825:58:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1283,
															"nodeType": "ExpressionStatement",
															"src": "4825:58:6"
														},
														{
															"id": 1292,
															"nodeType": "UncheckedBlock",
															"src": "4898:96:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1285,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1255,
																				"src": "4936:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1286,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1257,
																				"src": "4943:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1287,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1263,
																					"src": "4952:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1288,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1259,
																					"src": "4971:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4952:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1284,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1252,
																			"src": "4927:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4927:51:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1291,
																	"nodeType": "ExpressionStatement",
																	"src": "4927:51:6"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "4525:44:6",
										"text": " @dev 消耗授权额度"
									},
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "4584:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4618:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "4610:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4610:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4642:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "4634:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4634:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4668:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "4660:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4660:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4599:82:6"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4691:0:6"
									},
									"scope": 1371,
									"src": "4575:437:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "5147:126:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1307,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "5166:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5180:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5172:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1308,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5172:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5172:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5166:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5184:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051",
																"typeString": "literal_string \" mint to the zero address\""
															},
															"value": " mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051",
																"typeString": "literal_string \" mint to the zero address\""
															}
														],
														"id": 1306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5158:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5158:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "5158:54:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1317,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "5229:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1318,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1301,
																"src": "5233:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5242:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1322,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 950,
																			"src": "5255:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5247:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1320,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5247:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5247:17:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5242:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5233:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1316,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "5223:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5223:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "5223:42:6"
											}
										]
									},
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "5020:62:6",
										"text": " @dev 增发代币，仅所有者可调用"
									},
									"functionSelector": "40c10f19",
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1304,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1303,
												"name": "onlyOwner",
												"nameLocations": [
													"5137:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1047,
												"src": "5137:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5137:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "5097:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5110:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "5102:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5102:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5122:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "5114:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5114:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5101:28:6"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5147:0:6"
									},
									"scope": 1371,
									"src": "5088:185:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1369,
										"nodeType": "Block",
										"src": "5388:255:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1338,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "5407:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5426:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5418:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1339,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5418:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5418:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5407:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5430:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051",
																"typeString": "literal_string \" mint to the zero address\""
															},
															"value": " mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8def819d6ed3aa505b551f9e91362e469438d683e26845a88fc5c6a06d6d7051",
																"typeString": "literal_string \" mint to the zero address\""
															}
														],
														"id": 1337,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5399:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5399:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1346,
												"nodeType": "ExpressionStatement",
												"src": "5399:59:6"
											},
											{
												"expression": {
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1347,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "5471:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1348,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "5486:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5471:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1350,
												"nodeType": "ExpressionStatement",
												"src": "5471:21:6"
											},
											{
												"id": 1357,
												"nodeType": "UncheckedBlock",
												"src": "5503:63:6",
												"statements": [
													{
														"expression": {
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1351,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "5526:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1353,
																"indexExpression": {
																	"id": 1352,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1332,
																	"src": "5536:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5526:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1354,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "5548:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5526:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1356,
														"nodeType": "ExpressionStatement",
														"src": "5526:28:6"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5598:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5590:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1359,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5590:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5590:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1363,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "5602:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1364,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "5611:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1365,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5619:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5625:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5619:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1358,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															962,
															811
														],
														"referencedDeclaration": 962,
														"src": "5581:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5581:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1368,
												"nodeType": "EmitStatement",
												"src": "5576:59:6"
											}
										]
									},
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "5281:44:6",
										"text": " @dev 内部增发逻辑"
									},
									"id": 1370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "5340:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5354:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "5346:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5346:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5371:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "5363:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5363:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5345:33:6"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5388:0:6"
									},
									"scope": 1371,
									"src": "5331:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1372,
							"src": "832:4814:6",
							"usedErrors": [],
							"usedEvents": [
								811,
								820,
								962,
								972
							]
						}
					],
					"src": "33:5613:6"
				},
				"id": 6
			}
		}
	}
}